id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: TowerDefense.Affectors
  commentId: N:TowerDefense.Affectors
  language: CSharp
  name:
    CSharp: TowerDefense.Affectors
    VB: TowerDefense.Affectors
  nameWithType:
    CSharp: TowerDefense.Affectors
    VB: TowerDefense.Affectors
  qualifiedName:
    CSharp: TowerDefense.Affectors
    VB: TowerDefense.Affectors
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Affectors.Affector
    commentId: T:TowerDefense.Affectors.Affector
    language: CSharp
    name:
      CSharp: Affector
      VB: Affector
    nameWithType:
      CSharp: Affector
      VB: Affector
    qualifiedName:
      CSharp: TowerDefense.Affectors.Affector
      VB: TowerDefense.Affectors.Affector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Affectors
    source:
      id: Affector
      path: ''
      startLine: 9
    summary: "\nA class for providing information on to whether\nthe children classes effects are valid\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Affector : MonoBehaviour'
        VB: >-
          Public MustInherit Class Affector

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Affectors.Affector.description
      commentId: F:TowerDefense.Affectors.Affector.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: Affector.description
        VB: Affector.description
      qualifiedName:
        CSharp: TowerDefense.Affectors.Affector.description
        VB: TowerDefense.Affectors.Affector.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: description
        path: ''
        startLine: 14
      summary: "\nShort description for affector for displaying in the UI\n"
      example: []
      syntax:
        content:
          CSharp: public string description
          VB: Public description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.Affector.alignment
      commentId: P:TowerDefense.Affectors.Affector.alignment
      language: CSharp
      name:
        CSharp: alignment
        VB: alignment
      nameWithType:
        CSharp: Affector.alignment
        VB: Affector.alignment
      qualifiedName:
        CSharp: TowerDefense.Affectors.Affector.alignment
        VB: TowerDefense.Affectors.Affector.alignment
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: alignment
        path: ''
        startLine: 19
      summary: "\nGets or sets the alignment\n"
      example: []
      syntax:
        content:
          CSharp: public IAlignmentProvider alignment { get; protected set; }
          VB: Public Property alignment As IAlignmentProvider
        parameters: []
        return:
          type: IAlignmentProvider
      overload: TowerDefense.Affectors.Affector.alignment*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Affectors.Affector.enemyMask
      commentId: P:TowerDefense.Affectors.Affector.enemyMask
      language: CSharp
      name:
        CSharp: enemyMask
        VB: enemyMask
      nameWithType:
        CSharp: Affector.enemyMask
        VB: Affector.enemyMask
      qualifiedName:
        CSharp: TowerDefense.Affectors.Affector.enemyMask
        VB: TowerDefense.Affectors.Affector.enemyMask
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: enemyMask
        path: ''
        startLine: 24
      summary: "\nThe physics mask to check against\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask enemyMask { get; protected set; }
          VB: Public Property enemyMask As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: TowerDefense.Affectors.Affector.enemyMask*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
      commentId: M:TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
      language: CSharp
      name:
        CSharp: Initialize(IAlignmentProvider, LayerMask)
        VB: Initialize(IAlignmentProvider, LayerMask)
      nameWithType:
        CSharp: Affector.Initialize(IAlignmentProvider, LayerMask)
        VB: Affector.Initialize(IAlignmentProvider, LayerMask)
      qualifiedName:
        CSharp: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider, LayerMask)
        VB: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider, LayerMask)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Initialize
        path: ''
        startLine: 35
      summary: "\nInitializes the effect with search data\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialize(IAlignmentProvider affectorAlignment, LayerMask mask)
          VB: Public Overridable Sub Initialize(affectorAlignment As IAlignmentProvider, mask As LayerMask)
        parameters:
        - id: affectorAlignment
          type: IAlignmentProvider
          description: "\nThe alignment of the effect for search purposes\n"
        - id: mask
          type: LayerMask
          description: "\nThe physics layer of to search for\n"
      overload: TowerDefense.Affectors.Affector.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
      commentId: M:TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
      language: CSharp
      name:
        CSharp: Initialize(IAlignmentProvider)
        VB: Initialize(IAlignmentProvider)
      nameWithType:
        CSharp: Affector.Initialize(IAlignmentProvider)
        VB: Affector.Initialize(IAlignmentProvider)
      qualifiedName:
        CSharp: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
        VB: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Initialize
        path: ''
        startLine: 47
      summary: "\nInitializes the effect with search data\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialize(IAlignmentProvider affectorAlignment)
          VB: Public Overridable Sub Initialize(affectorAlignment As IAlignmentProvider)
        parameters:
        - id: affectorAlignment
          type: IAlignmentProvider
          description: "\nThe alignment of the effect for search purposes\n"
      overload: TowerDefense.Affectors.Affector.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: TowerDefense.Affectors.AttackAffector
    commentId: T:TowerDefense.Affectors.AttackAffector
    language: CSharp
    name:
      CSharp: AttackAffector
      VB: AttackAffector
    nameWithType:
      CSharp: AttackAffector
      VB: AttackAffector
    qualifiedName:
      CSharp: TowerDefense.Affectors.AttackAffector
      VB: TowerDefense.Affectors.AttackAffector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Affectors
    source:
      id: AttackAffector
      path: ''
      startLine: 70
    summary: "\nThe common effect for handling firing projectiles to attack\n\nRequires an ILauncher but it is not automatically added\nAdd an ILauncher implementation to this GameObject before you add this script\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AttackAffector : Affector, ITowerRadiusProvider'
        VB: >-
          Public Class AttackAffector

              Inherits Affector

              Implements ITowerRadiusProvider
    inheritance:
    - System.Object
    - TowerDefense.Affectors.Affector
    implements:
    - ITowerRadiusProvider
    inheritedMembers:
    - TowerDefense.Affectors.Affector.description
    - TowerDefense.Affectors.Affector.alignment
    - TowerDefense.Affectors.Affector.enemyMask
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Affectors.AttackAffector.projectile
      commentId: F:TowerDefense.Affectors.AttackAffector.projectile
      language: CSharp
      name:
        CSharp: projectile
        VB: projectile
      nameWithType:
        CSharp: AttackAffector.projectile
        VB: AttackAffector.projectile
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.projectile
        VB: TowerDefense.Affectors.AttackAffector.projectile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: projectile
        path: ''
        startLine: 76
      summary: "\nThe projectile used to attack\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject projectile
          VB: Public projectile As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.projectilePoints
      commentId: F:TowerDefense.Affectors.AttackAffector.projectilePoints
      language: CSharp
      name:
        CSharp: projectilePoints
        VB: projectilePoints
      nameWithType:
        CSharp: AttackAffector.projectilePoints
        VB: AttackAffector.projectilePoints
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.projectilePoints
        VB: TowerDefense.Affectors.AttackAffector.projectilePoints
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: projectilePoints
        path: ''
        startLine: 81
      summary: "\nThe list of points to launch the projectiles from\n"
      example: []
      syntax:
        content:
          CSharp: public Transform[] projectilePoints
          VB: Public projectilePoints As Transform()
        return:
          type: Transform[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.epicenter
      commentId: F:TowerDefense.Affectors.AttackAffector.epicenter
      language: CSharp
      name:
        CSharp: epicenter
        VB: epicenter
      nameWithType:
        CSharp: AttackAffector.epicenter
        VB: AttackAffector.epicenter
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.epicenter
        VB: TowerDefense.Affectors.AttackAffector.epicenter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: epicenter
        path: ''
        startLine: 86
      summary: "\nThe reference to the center point where the tower will search from\n"
      example: []
      syntax:
        content:
          CSharp: public Transform epicenter
          VB: Public epicenter As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.isMultiAttack
      commentId: F:TowerDefense.Affectors.AttackAffector.isMultiAttack
      language: CSharp
      name:
        CSharp: isMultiAttack
        VB: isMultiAttack
      nameWithType:
        CSharp: AttackAffector.isMultiAttack
        VB: AttackAffector.isMultiAttack
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.isMultiAttack
        VB: TowerDefense.Affectors.AttackAffector.isMultiAttack
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: isMultiAttack
        path: ''
        startLine: 91
      summary: "\nConfiguration for when the tower does splash damage\n"
      example: []
      syntax:
        content:
          CSharp: public bool isMultiAttack
          VB: Public isMultiAttack As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.fireRate
      commentId: F:TowerDefense.Affectors.AttackAffector.fireRate
      language: CSharp
      name:
        CSharp: fireRate
        VB: fireRate
      nameWithType:
        CSharp: AttackAffector.fireRate
        VB: AttackAffector.fireRate
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.fireRate
        VB: TowerDefense.Affectors.AttackAffector.fireRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: fireRate
        path: ''
        startLine: 97
      summary: "\nThe fire rate in fires-per-second\n"
      example: []
      syntax:
        content:
          CSharp: public float fireRate
          VB: Public fireRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.randomAudioSource
      commentId: F:TowerDefense.Affectors.AttackAffector.randomAudioSource
      language: CSharp
      name:
        CSharp: randomAudioSource
        VB: randomAudioSource
      nameWithType:
        CSharp: AttackAffector.randomAudioSource
        VB: AttackAffector.randomAudioSource
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.randomAudioSource
        VB: TowerDefense.Affectors.AttackAffector.randomAudioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: randomAudioSource
        path: ''
        startLine: 102
      summary: "\nThe audio source to play when firing\n"
      example: []
      syntax:
        content:
          CSharp: public RandomAudioSource randomAudioSource
          VB: Public randomAudioSource As RandomAudioSource
        return:
          type: RandomAudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.towerTargetter
      commentId: F:TowerDefense.Affectors.AttackAffector.towerTargetter
      language: CSharp
      name:
        CSharp: towerTargetter
        VB: towerTargetter
      nameWithType:
        CSharp: AttackAffector.towerTargetter
        VB: AttackAffector.towerTargetter
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.towerTargetter
        VB: TowerDefense.Affectors.AttackAffector.towerTargetter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: towerTargetter
        path: ''
        startLine: 107
      summary: "\nGets the targetter\n"
      example: []
      syntax:
        content:
          CSharp: public Targetter towerTargetter
          VB: Public towerTargetter As Targetter
        return:
          type: Targetter
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.radiusEffectColor
      commentId: F:TowerDefense.Affectors.AttackAffector.radiusEffectColor
      language: CSharp
      name:
        CSharp: radiusEffectColor
        VB: radiusEffectColor
      nameWithType:
        CSharp: AttackAffector.radiusEffectColor
        VB: AttackAffector.radiusEffectColor
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.radiusEffectColor
        VB: TowerDefense.Affectors.AttackAffector.radiusEffectColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: radiusEffectColor
        path: ''
        startLine: 112
      summary: "\nColor of effect radius visualization\n"
      example: []
      syntax:
        content:
          CSharp: public Color radiusEffectColor
          VB: Public radiusEffectColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.searchCondition
      commentId: F:TowerDefense.Affectors.AttackAffector.searchCondition
      language: CSharp
      name:
        CSharp: searchCondition
        VB: searchCondition
      nameWithType:
        CSharp: AttackAffector.searchCondition
        VB: AttackAffector.searchCondition
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.searchCondition
        VB: TowerDefense.Affectors.AttackAffector.searchCondition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: searchCondition
        path: ''
        startLine: 117
      summary: "\nSearch condition\n"
      example: []
      syntax:
        content:
          CSharp: public Filter searchCondition
          VB: Public searchCondition As Filter
        return:
          type: TowerDefense.Affectors.Filter
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.fireCondition
      commentId: F:TowerDefense.Affectors.AttackAffector.fireCondition
      language: CSharp
      name:
        CSharp: fireCondition
        VB: fireCondition
      nameWithType:
        CSharp: AttackAffector.fireCondition
        VB: AttackAffector.fireCondition
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.fireCondition
        VB: TowerDefense.Affectors.AttackAffector.fireCondition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: fireCondition
        path: ''
        startLine: 122
      summary: "\nFire condition\n"
      example: []
      syntax:
        content:
          CSharp: public Filter fireCondition
          VB: Public fireCondition As Filter
        return:
          type: TowerDefense.Affectors.Filter
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.m_Launcher
      commentId: F:TowerDefense.Affectors.AttackAffector.m_Launcher
      language: CSharp
      name:
        CSharp: m_Launcher
        VB: m_Launcher
      nameWithType:
        CSharp: AttackAffector.m_Launcher
        VB: AttackAffector.m_Launcher
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.m_Launcher
        VB: TowerDefense.Affectors.AttackAffector.m_Launcher
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: m_Launcher
        path: ''
        startLine: 127
      summary: "\nThe reference to the attached launcher\n"
      example: []
      syntax:
        content:
          CSharp: protected ILauncher m_Launcher
          VB: Protected m_Launcher As ILauncher
        return:
          type: ILauncher
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.AttackAffector.m_FireTimer
      commentId: F:TowerDefense.Affectors.AttackAffector.m_FireTimer
      language: CSharp
      name:
        CSharp: m_FireTimer
        VB: m_FireTimer
      nameWithType:
        CSharp: AttackAffector.m_FireTimer
        VB: AttackAffector.m_FireTimer
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.m_FireTimer
        VB: TowerDefense.Affectors.AttackAffector.m_FireTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: m_FireTimer
        path: ''
        startLine: 132
      summary: "\nThe time before firing is possible\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_FireTimer
          VB: Protected m_FireTimer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.AttackAffector.m_TrackingEnemy
      commentId: F:TowerDefense.Affectors.AttackAffector.m_TrackingEnemy
      language: CSharp
      name:
        CSharp: m_TrackingEnemy
        VB: m_TrackingEnemy
      nameWithType:
        CSharp: AttackAffector.m_TrackingEnemy
        VB: AttackAffector.m_TrackingEnemy
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.m_TrackingEnemy
        VB: TowerDefense.Affectors.AttackAffector.m_TrackingEnemy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: m_TrackingEnemy
        path: ''
        startLine: 137
      summary: "\nReference to the current tracked enemy\n"
      example: []
      syntax:
        content:
          CSharp: protected Targetable m_TrackingEnemy
          VB: Protected m_TrackingEnemy As Targetable
        return:
          type: Targetable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.AttackAffector.searchRate
      commentId: P:TowerDefense.Affectors.AttackAffector.searchRate
      language: CSharp
      name:
        CSharp: searchRate
        VB: searchRate
      nameWithType:
        CSharp: AttackAffector.searchRate
        VB: AttackAffector.searchRate
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.searchRate
        VB: TowerDefense.Affectors.AttackAffector.searchRate
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: searchRate
        path: ''
        startLine: 142
      summary: "\nGets the search rate from the targetter\n"
      example: []
      syntax:
        content:
          CSharp: public float searchRate { get; set; }
          VB: Public Property searchRate As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Affectors.AttackAffector.searchRate*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.trackingEnemy
      commentId: P:TowerDefense.Affectors.AttackAffector.trackingEnemy
      language: CSharp
      name:
        CSharp: trackingEnemy
        VB: trackingEnemy
      nameWithType:
        CSharp: AttackAffector.trackingEnemy
        VB: AttackAffector.trackingEnemy
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.trackingEnemy
        VB: TowerDefense.Affectors.AttackAffector.trackingEnemy
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: trackingEnemy
        path: ''
        startLine: 151
      summary: "\nGets the targetable\n"
      example: []
      syntax:
        content:
          CSharp: public Targetable trackingEnemy { get; }
          VB: Public ReadOnly Property trackingEnemy As Targetable
        parameters: []
        return:
          type: Targetable
      overload: TowerDefense.Affectors.AttackAffector.trackingEnemy*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.AttackAffector.effectRadius
      commentId: P:TowerDefense.Affectors.AttackAffector.effectRadius
      language: CSharp
      name:
        CSharp: effectRadius
        VB: effectRadius
      nameWithType:
        CSharp: AttackAffector.effectRadius
        VB: AttackAffector.effectRadius
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.effectRadius
        VB: TowerDefense.Affectors.AttackAffector.effectRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: effectRadius
        path: ''
        startLine: 159
      summary: "\nGets or sets the attack radius\n"
      example: []
      syntax:
        content:
          CSharp: public float effectRadius { get; }
          VB: Public ReadOnly Property effectRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Affectors.AttackAffector.effectRadius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.AttackAffector.effectColor
      commentId: P:TowerDefense.Affectors.AttackAffector.effectColor
      language: CSharp
      name:
        CSharp: effectColor
        VB: effectColor
      nameWithType:
        CSharp: AttackAffector.effectColor
        VB: AttackAffector.effectColor
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.effectColor
        VB: TowerDefense.Affectors.AttackAffector.effectColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: effectColor
        path: ''
        startLine: 164
      syntax:
        content:
          CSharp: public Color effectColor { get; }
          VB: Public ReadOnly Property effectColor As Color
        parameters: []
        return:
          type: Color
      overload: TowerDefense.Affectors.AttackAffector.effectColor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.AttackAffector.targetter
      commentId: P:TowerDefense.Affectors.AttackAffector.targetter
      language: CSharp
      name:
        CSharp: targetter
        VB: targetter
      nameWithType:
        CSharp: AttackAffector.targetter
        VB: AttackAffector.targetter
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.targetter
        VB: TowerDefense.Affectors.AttackAffector.targetter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: targetter
        path: ''
        startLine: 169
      syntax:
        content:
          CSharp: public Targetter targetter { get; }
          VB: Public ReadOnly Property targetter As Targetter
        parameters: []
        return:
          type: Targetter
      overload: TowerDefense.Affectors.AttackAffector.targetter*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider)
      commentId: M:TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider)
      language: CSharp
      name:
        CSharp: Initialize(IAlignmentProvider)
        VB: Initialize(IAlignmentProvider)
      nameWithType:
        CSharp: AttackAffector.Initialize(IAlignmentProvider)
        VB: AttackAffector.Initialize(IAlignmentProvider)
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider)
        VB: TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Initialize
        path: ''
        startLine: 177
      summary: "\nInitializes the attack affector\n"
      example: []
      syntax:
        content:
          CSharp: public override void Initialize(IAlignmentProvider affectorAlignment)
          VB: Public Overrides Sub Initialize(affectorAlignment As IAlignmentProvider)
        parameters:
        - id: affectorAlignment
          type: IAlignmentProvider
      overload: TowerDefense.Affectors.AttackAffector.Initialize*
      overridden: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider,LayerMask)
      commentId: M:TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider,LayerMask)
      language: CSharp
      name:
        CSharp: Initialize(IAlignmentProvider, LayerMask)
        VB: Initialize(IAlignmentProvider, LayerMask)
      nameWithType:
        CSharp: AttackAffector.Initialize(IAlignmentProvider, LayerMask)
        VB: AttackAffector.Initialize(IAlignmentProvider, LayerMask)
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider, LayerMask)
        VB: TowerDefense.Affectors.AttackAffector.Initialize(IAlignmentProvider, LayerMask)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Initialize
        path: ''
        startLine: 185
      summary: "\nInitialises the  attack affector with a layer mask\n"
      example: []
      syntax:
        content:
          CSharp: public override void Initialize(IAlignmentProvider affectorAlignment, LayerMask mask)
          VB: Public Overrides Sub Initialize(affectorAlignment As IAlignmentProvider, mask As LayerMask)
        parameters:
        - id: affectorAlignment
          type: IAlignmentProvider
        - id: mask
          type: LayerMask
      overload: TowerDefense.Affectors.AttackAffector.Initialize*
      overridden: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Affectors.AttackAffector.damagerProjectile
      commentId: P:TowerDefense.Affectors.AttackAffector.damagerProjectile
      language: CSharp
      name:
        CSharp: damagerProjectile
        VB: damagerProjectile
      nameWithType:
        CSharp: AttackAffector.damagerProjectile
        VB: AttackAffector.damagerProjectile
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.damagerProjectile
        VB: TowerDefense.Affectors.AttackAffector.damagerProjectile
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: damagerProjectile
        path: ''
        startLine: 212
      syntax:
        content:
          CSharp: public Damager damagerProjectile { get; }
          VB: Public ReadOnly Property damagerProjectile As Damager
        parameters: []
        return:
          type: Damager
      overload: TowerDefense.Affectors.AttackAffector.damagerProjectile*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.AttackAffector.GetProjectileDamage
      commentId: M:TowerDefense.Affectors.AttackAffector.GetProjectileDamage
      language: CSharp
      name:
        CSharp: GetProjectileDamage()
        VB: GetProjectileDamage()
      nameWithType:
        CSharp: AttackAffector.GetProjectileDamage()
        VB: AttackAffector.GetProjectileDamage()
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.GetProjectileDamage()
        VB: TowerDefense.Affectors.AttackAffector.GetProjectileDamage()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: GetProjectileDamage
        path: ''
        startLine: 220
      summary: "\nReturns the total projectile damage \n"
      example: []
      syntax:
        content:
          CSharp: public float GetProjectileDamage()
          VB: Public Function GetProjectileDamage As Single
        return:
          type: System.Single
      overload: TowerDefense.Affectors.AttackAffector.GetProjectileDamage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.AttackAffector.SetUpTimers
      commentId: M:TowerDefense.Affectors.AttackAffector.SetUpTimers
      language: CSharp
      name:
        CSharp: SetUpTimers()
        VB: SetUpTimers()
      nameWithType:
        CSharp: AttackAffector.SetUpTimers()
        VB: AttackAffector.SetUpTimers()
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.SetUpTimers()
        VB: TowerDefense.Affectors.AttackAffector.SetUpTimers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: SetUpTimers
        path: ''
        startLine: 230
      summary: "\nInitialise the RepeatingTimer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SetUpTimers()
          VB: Protected Overridable Sub SetUpTimers
      overload: TowerDefense.Affectors.AttackAffector.SetUpTimers*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.AttackAffector.Update
      commentId: M:TowerDefense.Affectors.AttackAffector.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: AttackAffector.Update()
        VB: AttackAffector.Update()
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.Update()
        VB: TowerDefense.Affectors.AttackAffector.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Update
        path: ''
        startLine: 239
      summary: "\nUpdate the timers\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Affectors.AttackAffector.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.AttackAffector.OnFireTimer
      commentId: M:TowerDefense.Affectors.AttackAffector.OnFireTimer
      language: CSharp
      name:
        CSharp: OnFireTimer()
        VB: OnFireTimer()
      nameWithType:
        CSharp: AttackAffector.OnFireTimer()
        VB: AttackAffector.OnFireTimer()
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.OnFireTimer()
        VB: TowerDefense.Affectors.AttackAffector.OnFireTimer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: OnFireTimer
        path: ''
        startLine: 252
      summary: "\nFired at every poll of the fire rate timer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnFireTimer()
          VB: Protected Overridable Sub OnFireTimer
      overload: TowerDefense.Affectors.AttackAffector.OnFireTimer*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.AttackAffector.FireProjectile
      commentId: M:TowerDefense.Affectors.AttackAffector.FireProjectile
      language: CSharp
      name:
        CSharp: FireProjectile()
        VB: FireProjectile()
      nameWithType:
        CSharp: AttackAffector.FireProjectile()
        VB: AttackAffector.FireProjectile()
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.FireProjectile()
        VB: TowerDefense.Affectors.AttackAffector.FireProjectile()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: FireProjectile
        path: ''
        startLine: 267
      summary: "\nCommon logic when attacking\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void FireProjectile()
          VB: Protected Overridable Sub FireProjectile
      overload: TowerDefense.Affectors.AttackAffector.FireProjectile*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.AttackAffector.ByDistance(Targetable,Targetable)
      commentId: M:TowerDefense.Affectors.AttackAffector.ByDistance(Targetable,Targetable)
      language: CSharp
      name:
        CSharp: ByDistance(Targetable, Targetable)
        VB: ByDistance(Targetable, Targetable)
      nameWithType:
        CSharp: AttackAffector.ByDistance(Targetable, Targetable)
        VB: AttackAffector.ByDistance(Targetable, Targetable)
      qualifiedName:
        CSharp: TowerDefense.Affectors.AttackAffector.ByDistance(Targetable, Targetable)
        VB: TowerDefense.Affectors.AttackAffector.ByDistance(Targetable, Targetable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: ByDistance
        path: ''
        startLine: 294
      summary: "\nA delegate to compare distances of components\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual int ByDistance(Targetable first, Targetable second)
          VB: Protected Overridable Function ByDistance(first As Targetable, second As Targetable) As Integer
        parameters:
        - id: first
          type: Targetable
          description: ''
        - id: second
          type: Targetable
          description: ''
        return:
          type: System.Int32
      overload: TowerDefense.Affectors.AttackAffector.ByDistance*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.Affectors.Filter
    commentId: T:TowerDefense.Affectors.Filter
    language: CSharp
    name:
      CSharp: Filter
      VB: Filter
    nameWithType:
      CSharp: Filter
      VB: Filter
    qualifiedName:
      CSharp: TowerDefense.Affectors.Filter
      VB: TowerDefense.Affectors.Filter
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Affectors
    source:
      id: Filter
      path: ''
      startLine: 315
    summary: "\nA delegate for boolean calculation logic\n"
    example: []
    syntax:
      content:
        CSharp: public delegate bool Filter();
        VB: Public Delegate Function Filter As Boolean
      return:
        type: System.Boolean
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: TowerDefense.Affectors.CurrencyAffector
    commentId: T:TowerDefense.Affectors.CurrencyAffector
    language: CSharp
    name:
      CSharp: CurrencyAffector
      VB: CurrencyAffector
    nameWithType:
      CSharp: CurrencyAffector
      VB: CurrencyAffector
    qualifiedName:
      CSharp: TowerDefense.Affectors.CurrencyAffector
      VB: TowerDefense.Affectors.CurrencyAffector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Affectors
    source:
      id: CurrencyAffector
      path: ''
      startLine: 326
    summary: "\nA tower effect for generating currency\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CurrencyAffector : Affector'
        VB: >-
          Public Class CurrencyAffector

              Inherits Affector
    inheritance:
    - System.Object
    - TowerDefense.Affectors.Affector
    inheritedMembers:
    - TowerDefense.Affectors.Affector.description
    - TowerDefense.Affectors.Affector.alignment
    - TowerDefense.Affectors.Affector.enemyMask
    - TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
    - TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Affectors.CurrencyAffector.currencyGainer
      commentId: F:TowerDefense.Affectors.CurrencyAffector.currencyGainer
      language: CSharp
      name:
        CSharp: currencyGainer
        VB: currencyGainer
      nameWithType:
        CSharp: CurrencyAffector.currencyGainer
        VB: CurrencyAffector.currencyGainer
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.currencyGainer
        VB: TowerDefense.Affectors.CurrencyAffector.currencyGainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: currencyGainer
        path: ''
        startLine: 331
      summary: "\nThe controller for currency gain\n"
      example: []
      syntax:
        content:
          CSharp: public CurrencyGainer currencyGainer
          VB: Public currencyGainer As CurrencyGainer
        return:
          type: CurrencyGainer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.CurrencyAffector.descriptionFormat
      commentId: F:TowerDefense.Affectors.CurrencyAffector.descriptionFormat
      language: CSharp
      name:
        CSharp: descriptionFormat
        VB: descriptionFormat
      nameWithType:
        CSharp: CurrencyAffector.descriptionFormat
        VB: CurrencyAffector.descriptionFormat
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.descriptionFormat
        VB: TowerDefense.Affectors.CurrencyAffector.descriptionFormat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: descriptionFormat
        path: ''
        startLine: 336
      summary: "\nFormat for displaying the the properties of this affector\n"
      example: []
      syntax:
        content:
          CSharp: public string descriptionFormat
          VB: Public descriptionFormat As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.CurrencyAffector.audioSource
      commentId: F:TowerDefense.Affectors.CurrencyAffector.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: CurrencyAffector.audioSource
        VB: CurrencyAffector.audioSource
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.audioSource
        VB: TowerDefense.Affectors.CurrencyAffector.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: audioSource
        path: ''
        startLine: 341
      summary: "\nThe audio source attached\n"
      example: []
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.CurrencyAffector.currencyParticleSystem
      commentId: F:TowerDefense.Affectors.CurrencyAffector.currencyParticleSystem
      language: CSharp
      name:
        CSharp: currencyParticleSystem
        VB: currencyParticleSystem
      nameWithType:
        CSharp: CurrencyAffector.currencyParticleSystem
        VB: CurrencyAffector.currencyParticleSystem
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.currencyParticleSystem
        VB: TowerDefense.Affectors.CurrencyAffector.currencyParticleSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: currencyParticleSystem
        path: ''
        startLine: 346
      summary: "\nThe attached particle system\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem currencyParticleSystem
          VB: Public currencyParticleSystem As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.CurrencyAffector.Start
      commentId: M:TowerDefense.Affectors.CurrencyAffector.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: CurrencyAffector.Start()
        VB: CurrencyAffector.Start()
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.Start()
        VB: TowerDefense.Affectors.CurrencyAffector.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Start
        path: ''
        startLine: 352
      summary: "\nInitialize the currency gain\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.Affectors.CurrencyAffector.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.CurrencyAffector.Update
      commentId: M:TowerDefense.Affectors.CurrencyAffector.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: CurrencyAffector.Update()
        VB: CurrencyAffector.Update()
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.Update()
        VB: TowerDefense.Affectors.CurrencyAffector.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Update
        path: ''
        startLine: 360
      summary: "\nUpdate the currency gain\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Affectors.CurrencyAffector.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.CurrencyAffector.OnEnable
      commentId: M:TowerDefense.Affectors.CurrencyAffector.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: CurrencyAffector.OnEnable()
        VB: CurrencyAffector.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.OnEnable()
        VB: TowerDefense.Affectors.CurrencyAffector.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: OnEnable
        path: ''
        startLine: 368
      summary: "\nSubscribe to currency gain events\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: TowerDefense.Affectors.CurrencyAffector.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.CurrencyAffector.OnDisable
      commentId: M:TowerDefense.Affectors.CurrencyAffector.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: CurrencyAffector.OnDisable()
        VB: CurrencyAffector.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.OnDisable()
        VB: TowerDefense.Affectors.CurrencyAffector.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: OnDisable
        path: ''
        startLine: 376
      summary: "\nUnsubscribe to currency gain event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: TowerDefense.Affectors.CurrencyAffector.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged(CurrencyChangeInfo)
      commentId: M:TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged(CurrencyChangeInfo)
      language: CSharp
      name:
        CSharp: OnCurrencyChanged(CurrencyChangeInfo)
        VB: OnCurrencyChanged(CurrencyChangeInfo)
      nameWithType:
        CSharp: CurrencyAffector.OnCurrencyChanged(CurrencyChangeInfo)
        VB: CurrencyAffector.OnCurrencyChanged(CurrencyChangeInfo)
      qualifiedName:
        CSharp: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged(CurrencyChangeInfo)
        VB: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged(CurrencyChangeInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: OnCurrencyChanged
        path: ''
        startLine: 387
      summary: "\nFires when currency changed in <xref href=\"TowerDefense.Affectors.CurrencyAffector.currencyGainer\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnCurrencyChanged(CurrencyChangeInfo info)
          VB: Protected Sub OnCurrencyChanged(info As CurrencyChangeInfo)
        parameters:
        - id: info
          type: CurrencyChangeInfo
          description: "\nThe info for the currency gainer\n"
      overload: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.Affectors.CurrencyAffector.currencyGainer: 
  - id: TowerDefense.Affectors.PassiveAffector
    commentId: T:TowerDefense.Affectors.PassiveAffector
    language: CSharp
    name:
      CSharp: PassiveAffector
      VB: PassiveAffector
    nameWithType:
      CSharp: PassiveAffector
      VB: PassiveAffector
    qualifiedName:
      CSharp: TowerDefense.Affectors.PassiveAffector
      VB: TowerDefense.Affectors.PassiveAffector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Affectors
    source:
      id: PassiveAffector
      path: ''
      startLine: 410
    summary: "\nAbstract class that is used to apply <see cref=\"!:AgentEffect\"></see>s to <see cref=\"!:Agent\"></see>s\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class PassiveAffector : Affector, ITowerRadiusProvider'
        VB: >-
          Public MustInherit Class PassiveAffector

              Inherits Affector

              Implements ITowerRadiusProvider
    inheritance:
    - System.Object
    - TowerDefense.Affectors.Affector
    implements:
    - ITowerRadiusProvider
    inheritedMembers:
    - TowerDefense.Affectors.Affector.description
    - TowerDefense.Affectors.Affector.alignment
    - TowerDefense.Affectors.Affector.enemyMask
    - TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
    - TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
      commentId: F:TowerDefense.Affectors.PassiveAffector.radiusEffectColor
      language: CSharp
      name:
        CSharp: radiusEffectColor
        VB: radiusEffectColor
      nameWithType:
        CSharp: PassiveAffector.radiusEffectColor
        VB: PassiveAffector.radiusEffectColor
      qualifiedName:
        CSharp: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
        VB: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: radiusEffectColor
        path: ''
        startLine: 416
      summary: "\nColor of effect radius visualization\n"
      example: []
      syntax:
        content:
          CSharp: public Color radiusEffectColor
          VB: Public radiusEffectColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.PassiveAffector.towerTargetter
      commentId: F:TowerDefense.Affectors.PassiveAffector.towerTargetter
      language: CSharp
      name:
        CSharp: towerTargetter
        VB: towerTargetter
      nameWithType:
        CSharp: PassiveAffector.towerTargetter
        VB: PassiveAffector.towerTargetter
      qualifiedName:
        CSharp: TowerDefense.Affectors.PassiveAffector.towerTargetter
        VB: TowerDefense.Affectors.PassiveAffector.towerTargetter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: towerTargetter
        path: ''
        startLine: 418
      syntax:
        content:
          CSharp: public Targetter towerTargetter
          VB: Public towerTargetter As Targetter
        return:
          type: Targetter
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.PassiveAffector.effectRadius
      commentId: P:TowerDefense.Affectors.PassiveAffector.effectRadius
      language: CSharp
      name:
        CSharp: effectRadius
        VB: effectRadius
      nameWithType:
        CSharp: PassiveAffector.effectRadius
        VB: PassiveAffector.effectRadius
      qualifiedName:
        CSharp: TowerDefense.Affectors.PassiveAffector.effectRadius
        VB: TowerDefense.Affectors.PassiveAffector.effectRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: effectRadius
        path: ''
        startLine: 423
      summary: "\nGets or sets the attack radius\n"
      example: []
      syntax:
        content:
          CSharp: public float effectRadius { get; }
          VB: Public ReadOnly Property effectRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Affectors.PassiveAffector.effectRadius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.PassiveAffector.effectColor
      commentId: P:TowerDefense.Affectors.PassiveAffector.effectColor
      language: CSharp
      name:
        CSharp: effectColor
        VB: effectColor
      nameWithType:
        CSharp: PassiveAffector.effectColor
        VB: PassiveAffector.effectColor
      qualifiedName:
        CSharp: TowerDefense.Affectors.PassiveAffector.effectColor
        VB: TowerDefense.Affectors.PassiveAffector.effectColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: effectColor
        path: ''
        startLine: 431
      summary: "\nGets the color used for effect radius visualisation\n"
      example: []
      syntax:
        content:
          CSharp: public Color effectColor { get; }
          VB: Public ReadOnly Property effectColor As Color
        parameters: []
        return:
          type: Color
      overload: TowerDefense.Affectors.PassiveAffector.effectColor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Affectors.PassiveAffector.targetter
      commentId: P:TowerDefense.Affectors.PassiveAffector.targetter
      language: CSharp
      name:
        CSharp: targetter
        VB: targetter
      nameWithType:
        CSharp: PassiveAffector.targetter
        VB: PassiveAffector.targetter
      qualifiedName:
        CSharp: TowerDefense.Affectors.PassiveAffector.targetter
        VB: TowerDefense.Affectors.PassiveAffector.targetter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: targetter
        path: ''
        startLine: 439
      summary: "\nGets the targetter \n"
      example: []
      syntax:
        content:
          CSharp: public Targetter targetter { get; }
          VB: Public ReadOnly Property targetter As Targetter
        parameters: []
        return:
          type: Targetter
      overload: TowerDefense.Affectors.PassiveAffector.targetter*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: TowerDefense.Affectors.SlowAffector
    commentId: T:TowerDefense.Affectors.SlowAffector
    language: CSharp
    name:
      CSharp: SlowAffector
      VB: SlowAffector
    nameWithType:
      CSharp: SlowAffector
      VB: SlowAffector
    qualifiedName:
      CSharp: TowerDefense.Affectors.SlowAffector
      VB: TowerDefense.Affectors.SlowAffector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Affectors
    source:
      id: SlowAffector
      path: ''
      startLine: 454
    summary: "\nUses a trigger to attach and remove <see cref=\"!:AgentSlower\"></see> components to agents\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SlowAffector : PassiveAffector, ITowerRadiusProvider'
        VB: >-
          Public Class SlowAffector

              Inherits PassiveAffector

              Implements ITowerRadiusProvider
    inheritance:
    - System.Object
    - TowerDefense.Affectors.Affector
    - TowerDefense.Affectors.PassiveAffector
    implements:
    - ITowerRadiusProvider
    inheritedMembers:
    - TowerDefense.Affectors.PassiveAffector.radiusEffectColor
    - TowerDefense.Affectors.PassiveAffector.towerTargetter
    - TowerDefense.Affectors.PassiveAffector.effectRadius
    - TowerDefense.Affectors.PassiveAffector.effectColor
    - TowerDefense.Affectors.PassiveAffector.targetter
    - TowerDefense.Affectors.Affector.description
    - TowerDefense.Affectors.Affector.alignment
    - TowerDefense.Affectors.Affector.enemyMask
    - TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
    - TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Affectors.SlowAffector.slowFactor
      commentId: F:TowerDefense.Affectors.SlowAffector.slowFactor
      language: CSharp
      name:
        CSharp: slowFactor
        VB: slowFactor
      nameWithType:
        CSharp: SlowAffector.slowFactor
        VB: SlowAffector.slowFactor
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.slowFactor
        VB: TowerDefense.Affectors.SlowAffector.slowFactor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: slowFactor
        path: ''
        startLine: 460
      summary: "\nA normalized value to slow agents by\n"
      example: []
      syntax:
        content:
          CSharp: public float slowFactor
          VB: Public slowFactor As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.SlowAffector.slowFactorFormat
      commentId: F:TowerDefense.Affectors.SlowAffector.slowFactorFormat
      language: CSharp
      name:
        CSharp: slowFactorFormat
        VB: slowFactorFormat
      nameWithType:
        CSharp: SlowAffector.slowFactorFormat
        VB: SlowAffector.slowFactorFormat
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.slowFactorFormat
        VB: TowerDefense.Affectors.SlowAffector.slowFactorFormat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: slowFactorFormat
        path: ''
        startLine: 465
      summary: "\nThe slow factor for displaying to the UI\n"
      example: []
      syntax:
        content:
          CSharp: public string slowFactorFormat
          VB: Public slowFactorFormat As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.SlowAffector.enterParticleSystem
      commentId: F:TowerDefense.Affectors.SlowAffector.enterParticleSystem
      language: CSharp
      name:
        CSharp: enterParticleSystem
        VB: enterParticleSystem
      nameWithType:
        CSharp: SlowAffector.enterParticleSystem
        VB: SlowAffector.enterParticleSystem
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.enterParticleSystem
        VB: TowerDefense.Affectors.SlowAffector.enterParticleSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: enterParticleSystem
        path: ''
        startLine: 470
      summary: "\nThe particle system that plays when an entity enters the sphere\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem enterParticleSystem
          VB: Public enterParticleSystem As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.SlowAffector.slowFxPrefab
      commentId: F:TowerDefense.Affectors.SlowAffector.slowFxPrefab
      language: CSharp
      name:
        CSharp: slowFxPrefab
        VB: slowFxPrefab
      nameWithType:
        CSharp: SlowAffector.slowFxPrefab
        VB: SlowAffector.slowFxPrefab
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.slowFxPrefab
        VB: TowerDefense.Affectors.SlowAffector.slowFxPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: slowFxPrefab
        path: ''
        startLine: 472
      syntax:
        content:
          CSharp: public GameObject slowFxPrefab
          VB: Public slowFxPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.SlowAffector.audioSource
      commentId: F:TowerDefense.Affectors.SlowAffector.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: SlowAffector.audioSource
        VB: SlowAffector.audioSource
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.audioSource
        VB: TowerDefense.Affectors.SlowAffector.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: audioSource
        path: ''
        startLine: 477
      summary: "\nThe audio source that plays when an entity enters the sphere\n"
      example: []
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Affectors.SlowAffector.Awake
      commentId: M:TowerDefense.Affectors.SlowAffector.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: SlowAffector.Awake()
        VB: SlowAffector.Awake()
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.Awake()
        VB: TowerDefense.Affectors.SlowAffector.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: Awake
        path: ''
        startLine: 482
      summary: "\nSubsribes to the relevant targetter events\n"
      example: []
      syntax:
        content:
          CSharp: protected void Awake()
          VB: Protected Sub Awake
      overload: TowerDefense.Affectors.SlowAffector.Awake*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.SlowAffector.AttachSlowComponent(Agent)
      commentId: M:TowerDefense.Affectors.SlowAffector.AttachSlowComponent(Agent)
      language: CSharp
      name:
        CSharp: AttachSlowComponent(Agent)
        VB: AttachSlowComponent(Agent)
      nameWithType:
        CSharp: SlowAffector.AttachSlowComponent(Agent)
        VB: SlowAffector.AttachSlowComponent(Agent)
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.AttachSlowComponent(Agent)
        VB: TowerDefense.Affectors.SlowAffector.AttachSlowComponent(Agent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: AttachSlowComponent
        path: ''
        startLine: 501
      summary: "\nAttaches a <see cref=\"!:AgentSlower\"></see> to the agent\n"
      example: []
      syntax:
        content:
          CSharp: protected void AttachSlowComponent(Agent target)
          VB: Protected Sub AttachSlowComponent(target As Agent)
        parameters:
        - id: target
          type: Agent
          description: The agent to attach the slower to
      overload: TowerDefense.Affectors.SlowAffector.AttachSlowComponent*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent(Agent)
      commentId: M:TowerDefense.Affectors.SlowAffector.RemoveSlowComponent(Agent)
      language: CSharp
      name:
        CSharp: RemoveSlowComponent(Agent)
        VB: RemoveSlowComponent(Agent)
      nameWithType:
        CSharp: SlowAffector.RemoveSlowComponent(Agent)
        VB: SlowAffector.RemoveSlowComponent(Agent)
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent(Agent)
        VB: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent(Agent)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: RemoveSlowComponent
        path: ''
        startLine: 524
      summary: "\nRemoves the <see cref=\"!:AgentSlower\"></see> from the agent once it leaves the area\n"
      example: []
      syntax:
        content:
          CSharp: protected void RemoveSlowComponent(Agent target)
          VB: Protected Sub RemoveSlowComponent(target As Agent)
        parameters:
        - id: target
          type: Agent
          description: The agent to remove the slower from
      overload: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange(Targetable)
      commentId: M:TowerDefense.Affectors.SlowAffector.OnTargetEntersRange(Targetable)
      language: CSharp
      name:
        CSharp: OnTargetEntersRange(Targetable)
        VB: OnTargetEntersRange(Targetable)
      nameWithType:
        CSharp: SlowAffector.OnTargetEntersRange(Targetable)
        VB: SlowAffector.OnTargetEntersRange(Targetable)
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange(Targetable)
        VB: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange(Targetable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: OnTargetEntersRange
        path: ''
        startLine: 540
      summary: "\nFired when the targetter aquires a new targetable\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnTargetEntersRange(Targetable other)
          VB: Protected Sub OnTargetEntersRange(other As Targetable)
        parameters:
        - id: other
          type: Targetable
      overload: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange(Targetable)
      commentId: M:TowerDefense.Affectors.SlowAffector.OnTargetExitsRange(Targetable)
      language: CSharp
      name:
        CSharp: OnTargetExitsRange(Targetable)
        VB: OnTargetExitsRange(Targetable)
      nameWithType:
        CSharp: SlowAffector.OnTargetExitsRange(Targetable)
        VB: SlowAffector.OnTargetExitsRange(Targetable)
      qualifiedName:
        CSharp: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange(Targetable)
        VB: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange(Targetable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Affectors
      source:
        id: OnTargetExitsRange
        path: ''
        startLine: 553
      summary: "\nFired when the targetter aquires loses a targetable\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnTargetExitsRange(Targetable other)
          VB: Protected Sub OnTargetExitsRange(other As Targetable)
        parameters:
        - id: other
          type: Targetable
      overload: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: TowerDefense.Agents
  commentId: N:TowerDefense.Agents
  language: CSharp
  name:
    CSharp: TowerDefense.Agents
    VB: TowerDefense.Agents
  nameWithType:
    CSharp: TowerDefense.Agents
    VB: TowerDefense.Agents
  qualifiedName:
    CSharp: TowerDefense.Agents
    VB: TowerDefense.Agents
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Agents.Agent
    commentId: T:TowerDefense.Agents.Agent
    language: CSharp
    name:
      CSharp: Agent
      VB: Agent
    nameWithType:
      CSharp: Agent
      VB: Agent
    qualifiedName:
      CSharp: TowerDefense.Agents.Agent
      VB: TowerDefense.Agents.Agent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: Agent
      path: ''
      startLine: 578
    summary: "\nAn agent will follow a path of nodes\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Agent : Targetable'
        VB: >-
          Public MustInherit Class Agent

              Inherits Targetable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Agents.Agent.destinationReached
      commentId: E:TowerDefense.Agents.Agent.destinationReached
      language: CSharp
      name:
        CSharp: destinationReached
        VB: destinationReached
      nameWithType:
        CSharp: Agent.destinationReached
        VB: Agent.destinationReached
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.destinationReached
        VB: TowerDefense.Agents.Agent.destinationReached
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: destinationReached
        path: ''
        startLine: 615
      summary: "\nEvent fired when agent reached its final node\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Node> destinationReached
          VB: Public Event destinationReached As Action(Of Node)
        return:
          type: Action{Node}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.Agent.appliedEffectOffset
      commentId: F:TowerDefense.Agents.Agent.appliedEffectOffset
      language: CSharp
      name:
        CSharp: appliedEffectOffset
        VB: appliedEffectOffset
      nameWithType:
        CSharp: Agent.appliedEffectOffset
        VB: Agent.appliedEffectOffset
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.appliedEffectOffset
        VB: TowerDefense.Agents.Agent.appliedEffectOffset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: appliedEffectOffset
        path: ''
        startLine: 620
      summary: "\nPosition offset for an applied affect\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 appliedEffectOffset
          VB: Public appliedEffectOffset As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.Agent.appliedEffectScale
      commentId: F:TowerDefense.Agents.Agent.appliedEffectScale
      language: CSharp
      name:
        CSharp: appliedEffectScale
        VB: appliedEffectScale
      nameWithType:
        CSharp: Agent.appliedEffectScale
        VB: Agent.appliedEffectScale
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.appliedEffectScale
        VB: TowerDefense.Agents.Agent.appliedEffectScale
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: appliedEffectScale
        path: ''
        startLine: 625
      summary: "\nScale adjustment for an applied affect\n"
      example: []
      syntax:
        content:
          CSharp: public float appliedEffectScale
          VB: Public appliedEffectScale As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.Agent.m_NavMeshAgent
      commentId: F:TowerDefense.Agents.Agent.m_NavMeshAgent
      language: CSharp
      name:
        CSharp: m_NavMeshAgent
        VB: m_NavMeshAgent
      nameWithType:
        CSharp: Agent.m_NavMeshAgent
        VB: Agent.m_NavMeshAgent
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.m_NavMeshAgent
        VB: TowerDefense.Agents.Agent.m_NavMeshAgent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_NavMeshAgent
        path: ''
        startLine: 630
      summary: "\nThe NavMeshAgent component attached to this\n"
      example: []
      syntax:
        content:
          CSharp: protected NavMeshAgent m_NavMeshAgent
          VB: Protected m_NavMeshAgent As NavMeshAgent
        return:
          type: NavMeshAgent
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.Agent.m_CurrentNode
      commentId: F:TowerDefense.Agents.Agent.m_CurrentNode
      language: CSharp
      name:
        CSharp: m_CurrentNode
        VB: m_CurrentNode
      nameWithType:
        CSharp: Agent.m_CurrentNode
        VB: Agent.m_CurrentNode
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.m_CurrentNode
        VB: TowerDefense.Agents.Agent.m_CurrentNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_CurrentNode
        path: ''
        startLine: 635
      summary: "\nThe Current node that the agent must navigate to\n"
      example: []
      syntax:
        content:
          CSharp: protected Node m_CurrentNode
          VB: Protected m_CurrentNode As Node
        return:
          type: Node
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.Agent.m_LevelManager
      commentId: F:TowerDefense.Agents.Agent.m_LevelManager
      language: CSharp
      name:
        CSharp: m_LevelManager
        VB: m_LevelManager
      nameWithType:
        CSharp: Agent.m_LevelManager
        VB: Agent.m_LevelManager
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.m_LevelManager
        VB: TowerDefense.Agents.Agent.m_LevelManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_LevelManager
        path: ''
        startLine: 640
      summary: "\nReference to the level manager\n"
      example: []
      syntax:
        content:
          CSharp: protected LevelManager m_LevelManager
          VB: Protected m_LevelManager As LevelManager
        return:
          type: LevelManager
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.Agent.m_Destination
      commentId: F:TowerDefense.Agents.Agent.m_Destination
      language: CSharp
      name:
        CSharp: m_Destination
        VB: m_Destination
      nameWithType:
        CSharp: Agent.m_Destination
        VB: Agent.m_Destination
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.m_Destination
        VB: TowerDefense.Agents.Agent.m_Destination
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_Destination
        path: ''
        startLine: 645
      summary: "\nStores the Destination to the next node so we don&apos;t need to get new random positions every time\n"
      example: []
      syntax:
        content:
          CSharp: protected Vector3 m_Destination
          VB: Protected m_Destination As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.Agent.velocity
      commentId: P:TowerDefense.Agents.Agent.velocity
      language: CSharp
      name:
        CSharp: velocity
        VB: velocity
      nameWithType:
        CSharp: Agent.velocity
        VB: Agent.velocity
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.velocity
        VB: TowerDefense.Agents.Agent.velocity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: velocity
        path: ''
        startLine: 650
      summary: "\nGets the attached nav mesh agent velocity\n"
      example: []
      syntax:
        content:
          CSharp: public override Vector3 velocity { get; }
          VB: Public Overrides ReadOnly Property velocity As Vector3
        parameters: []
        return:
          type: Vector3
      overload: TowerDefense.Agents.Agent.velocity*
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: TowerDefense.Agents.Agent.state
      commentId: P:TowerDefense.Agents.Agent.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: Agent.state
        VB: Agent.state
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.state
        VB: TowerDefense.Agents.Agent.state
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: state
        path: ''
        startLine: 658
      summary: "\nThe current state of the agent along the path\n"
      example: []
      syntax:
        content:
          CSharp: public Agent.State state { get; protected set; }
          VB: Public Property state As Agent.State
        parameters: []
        return:
          type: TowerDefense.Agents.Agent.State
      overload: TowerDefense.Agents.Agent.state*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Agents.Agent.navMeshNavMeshAgent
      commentId: P:TowerDefense.Agents.Agent.navMeshNavMeshAgent
      language: CSharp
      name:
        CSharp: navMeshNavMeshAgent
        VB: navMeshNavMeshAgent
      nameWithType:
        CSharp: Agent.navMeshNavMeshAgent
        VB: Agent.navMeshNavMeshAgent
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.navMeshNavMeshAgent
        VB: TowerDefense.Agents.Agent.navMeshNavMeshAgent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: navMeshNavMeshAgent
        path: ''
        startLine: 663
      summary: "\nAccessor to <xref href=\"TowerDefense.Agents.Agent.m_NavMeshAgent\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public NavMeshAgent navMeshNavMeshAgent { get; set; }
          VB: Public Property navMeshNavMeshAgent As NavMeshAgent
        parameters: []
        return:
          type: NavMeshAgent
      overload: TowerDefense.Agents.Agent.navMeshNavMeshAgent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
      references:
        TowerDefense.Agents.Agent.m_NavMeshAgent: 
    - id: TowerDefense.Agents.Agent.navMeshMask
      commentId: P:TowerDefense.Agents.Agent.navMeshMask
      language: CSharp
      name:
        CSharp: navMeshMask
        VB: navMeshMask
      nameWithType:
        CSharp: Agent.navMeshMask
        VB: Agent.navMeshMask
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.navMeshMask
        VB: TowerDefense.Agents.Agent.navMeshMask
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: navMeshMask
        path: ''
        startLine: 672
      summary: "\nThe area mask of the attached nav mesh agent\n"
      example: []
      syntax:
        content:
          CSharp: public int navMeshMask { get; }
          VB: Public ReadOnly Property navMeshMask As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Agents.Agent.navMeshMask*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Agents.Agent.originalMovementSpeed
      commentId: P:TowerDefense.Agents.Agent.originalMovementSpeed
      language: CSharp
      name:
        CSharp: originalMovementSpeed
        VB: originalMovementSpeed
      nameWithType:
        CSharp: Agent.originalMovementSpeed
        VB: Agent.originalMovementSpeed
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.originalMovementSpeed
        VB: TowerDefense.Agents.Agent.originalMovementSpeed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: originalMovementSpeed
        path: ''
        startLine: 680
      summary: "\nGets this agent&apos;s original movement speed\n"
      example: []
      syntax:
        content:
          CSharp: public float originalMovementSpeed { get; }
          VB: Public ReadOnly Property originalMovementSpeed As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Agents.Agent.originalMovementSpeed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Agents.Agent.isPathBlocked
      commentId: P:TowerDefense.Agents.Agent.isPathBlocked
      language: CSharp
      name:
        CSharp: isPathBlocked
        VB: isPathBlocked
      nameWithType:
        CSharp: Agent.isPathBlocked
        VB: Agent.isPathBlocked
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.isPathBlocked
        VB: TowerDefense.Agents.Agent.isPathBlocked
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: isPathBlocked
        path: ''
        startLine: 688
      summary: "\nChecks if the path is blocked\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual bool isPathBlocked { get; }
          VB: Protected Overridable ReadOnly Property isPathBlocked As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: "\nThe status of the agent&apos;s path\n"
      overload: TowerDefense.Agents.Agent.isPathBlocked*
      modifiers:
        CSharp:
        - protected
        - virtual
        - get
        VB:
        - Protected
        - Overridable
        - ReadOnly
    - id: TowerDefense.Agents.Agent.isAtDestination
      commentId: P:TowerDefense.Agents.Agent.isAtDestination
      language: CSharp
      name:
        CSharp: isAtDestination
        VB: isAtDestination
      nameWithType:
        CSharp: Agent.isAtDestination
        VB: Agent.isAtDestination
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.isAtDestination
        VB: TowerDefense.Agents.Agent.isAtDestination
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: isAtDestination
        path: ''
        startLine: 696
      summary: "\nIs the Agent close enough to its destination?\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual bool isAtDestination { get; }
          VB: Protected Overridable ReadOnly Property isAtDestination As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.Agents.Agent.isAtDestination*
      modifiers:
        CSharp:
        - protected
        - virtual
        - get
        VB:
        - Protected
        - Overridable
        - ReadOnly
    - id: TowerDefense.Agents.Agent.SetNode(Node)
      commentId: M:TowerDefense.Agents.Agent.SetNode(Node)
      language: CSharp
      name:
        CSharp: SetNode(Node)
        VB: SetNode(Node)
      nameWithType:
        CSharp: Agent.SetNode(Node)
        VB: Agent.SetNode(Node)
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.SetNode(Node)
        VB: TowerDefense.Agents.Agent.SetNode(Node)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: SetNode
        path: ''
        startLine: 705
      summary: "\nSets the node to navigate to\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void SetNode(Node node)
          VB: Public Overridable Sub SetNode(node As Node)
        parameters:
        - id: node
          type: Node
          description: The node that the agent will navigate to
      overload: TowerDefense.Agents.Agent.SetNode*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Agents.Agent.Remove
      commentId: M:TowerDefense.Agents.Agent.Remove
      language: CSharp
      name:
        CSharp: Remove()
        VB: Remove()
      nameWithType:
        CSharp: Agent.Remove()
        VB: Agent.Remove()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.Remove()
        VB: TowerDefense.Agents.Agent.Remove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Remove
        path: ''
        startLine: 713
      summary: "\nStops the navMeshAgent and attempts to return to pool\n"
      example: []
      syntax:
        content:
          CSharp: public override void Remove()
          VB: Public Overrides Sub Remove
      overload: TowerDefense.Agents.Agent.Remove*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Agents.Agent.Initialize
      commentId: M:TowerDefense.Agents.Agent.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: Agent.Initialize()
        VB: Agent.Initialize()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.Initialize()
        VB: TowerDefense.Agents.Agent.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Initialize
        path: ''
        startLine: 730
      summary: "\nSetup all the necessary parameters for this agent from configuration data\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialize()
          VB: Public Overridable Sub Initialize
      overload: TowerDefense.Agents.Agent.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Agents.Agent.GetNextNode(Node)
      commentId: M:TowerDefense.Agents.Agent.GetNextNode(Node)
      language: CSharp
      name:
        CSharp: GetNextNode(Node)
        VB: GetNextNode(Node)
      nameWithType:
        CSharp: Agent.GetNextNode(Node)
        VB: Agent.GetNextNode(Node)
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.GetNextNode(Node)
        VB: TowerDefense.Agents.Agent.GetNextNode(Node)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: GetNextNode
        path: ''
        startLine: 746
      summary: "\nFinds the next node in the path\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void GetNextNode(Node currentlyEnteredNode)
          VB: Public Overridable Sub GetNextNode(currentlyEnteredNode As Node)
        parameters:
        - id: currentlyEnteredNode
          type: Node
      overload: TowerDefense.Agents.Agent.GetNextNode*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Agents.Agent.MoveToNode
      commentId: M:TowerDefense.Agents.Agent.MoveToNode
      language: CSharp
      name:
        CSharp: MoveToNode()
        VB: MoveToNode()
      nameWithType:
        CSharp: Agent.MoveToNode()
        VB: Agent.MoveToNode()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.MoveToNode()
        VB: TowerDefense.Agents.Agent.MoveToNode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: MoveToNode
        path: ''
        startLine: 778
      summary: "\nMoves the agent to a position in the <xref href=\"TowerDefense.Agents.Agent.m_CurrentNode\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void MoveToNode()
          VB: Public Overridable Sub MoveToNode
      overload: TowerDefense.Agents.Agent.MoveToNode*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
      references:
        TowerDefense.Agents.Agent.m_CurrentNode: 
    - id: TowerDefense.Agents.Agent.HandleDestinationReached
      commentId: M:TowerDefense.Agents.Agent.HandleDestinationReached
      language: CSharp
      name:
        CSharp: HandleDestinationReached()
        VB: HandleDestinationReached()
      nameWithType:
        CSharp: Agent.HandleDestinationReached()
        VB: Agent.HandleDestinationReached()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.HandleDestinationReached()
        VB: TowerDefense.Agents.Agent.HandleDestinationReached()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: HandleDestinationReached
        path: ''
        startLine: 789
      summary: "\nThe logic for what happens when the destination is reached\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void HandleDestinationReached()
          VB: Public Overridable Sub HandleDestinationReached
      overload: TowerDefense.Agents.Agent.HandleDestinationReached*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Agents.Agent.Awake
      commentId: M:TowerDefense.Agents.Agent.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: Agent.Awake()
        VB: Agent.Awake()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.Awake()
        VB: TowerDefense.Agents.Agent.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Awake
        path: ''
        startLine: 801
      summary: "\nLazy Load, if necesaary and ensure the NavMeshAgent is disabled\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: TowerDefense.Agents.Agent.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Agents.Agent.Update
      commentId: M:TowerDefense.Agents.Agent.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Agent.Update()
        VB: Agent.Update()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.Update()
        VB: TowerDefense.Agents.Agent.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Update
        path: ''
        startLine: 812
      summary: "\nUpdates the agent in its different states, \nReset destination when path is stale\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Agents.Agent.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Agents.Agent.NavigateTo(Vector3)
      commentId: M:TowerDefense.Agents.Agent.NavigateTo(Vector3)
      language: CSharp
      name:
        CSharp: NavigateTo(Vector3)
        VB: NavigateTo(Vector3)
      nameWithType:
        CSharp: Agent.NavigateTo(Vector3)
        VB: Agent.NavigateTo(Vector3)
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.NavigateTo(Vector3)
        VB: TowerDefense.Agents.Agent.NavigateTo(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: NavigateTo
        path: ''
        startLine: 843
      summary: "\nSet the NavMeshAgent&apos;s destination\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void NavigateTo(Vector3 nextPoint)
          VB: Protected Overridable Sub NavigateTo(nextPoint As Vector3)
        parameters:
        - id: nextPoint
          type: Vector3
          description: The position to navigate to
      overload: TowerDefense.Agents.Agent.NavigateTo*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Agents.Agent.LazyLoad
      commentId: M:TowerDefense.Agents.Agent.LazyLoad
      language: CSharp
      name:
        CSharp: LazyLoad()
        VB: LazyLoad()
      nameWithType:
        CSharp: Agent.LazyLoad()
        VB: Agent.LazyLoad()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.LazyLoad()
        VB: TowerDefense.Agents.Agent.LazyLoad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: LazyLoad
        path: ''
        startLine: 855
      summary: "\nThis is a lazy way of caching several components utilised by the Agent\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void LazyLoad()
          VB: Protected Overridable Sub LazyLoad
      overload: TowerDefense.Agents.Agent.LazyLoad*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Agents.Agent.OnCompletePathUpdate
      commentId: M:TowerDefense.Agents.Agent.OnCompletePathUpdate
      language: CSharp
      name:
        CSharp: OnCompletePathUpdate()
        VB: OnCompletePathUpdate()
      nameWithType:
        CSharp: Agent.OnCompletePathUpdate()
        VB: Agent.OnCompletePathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.OnCompletePathUpdate()
        VB: TowerDefense.Agents.Agent.OnCompletePathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnCompletePathUpdate
        path: ''
        startLine: 871
      summary: "\nMove along the path, change to <xref href=\"TowerDefense.Agents.Agent.State.OnPartialPath\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnCompletePathUpdate()
          VB: Protected Overridable Sub OnCompletePathUpdate
      overload: TowerDefense.Agents.Agent.OnCompletePathUpdate*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Agents.Agent.State.OnPartialPath: 
    - id: TowerDefense.Agents.Agent.PathUpdate
      commentId: M:TowerDefense.Agents.Agent.PathUpdate
      language: CSharp
      name:
        CSharp: PathUpdate()
        VB: PathUpdate()
      nameWithType:
        CSharp: Agent.PathUpdate()
        VB: Agent.PathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.PathUpdate()
        VB: TowerDefense.Agents.Agent.PathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: PathUpdate
        path: ''
        startLine: 882
      summary: "\nPeforms the relevant path update\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void PathUpdate()
          VB: Protected MustOverride Sub PathUpdate
      overload: TowerDefense.Agents.Agent.PathUpdate*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: TowerDefense.Agents.Agent.OnPartialPathUpdate
      commentId: M:TowerDefense.Agents.Agent.OnPartialPathUpdate
      language: CSharp
      name:
        CSharp: OnPartialPathUpdate()
        VB: OnPartialPathUpdate()
      nameWithType:
        CSharp: Agent.OnPartialPathUpdate()
        VB: Agent.OnPartialPathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.OnPartialPathUpdate()
        VB: TowerDefense.Agents.Agent.OnPartialPathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnPartialPathUpdate
        path: ''
        startLine: 887
      summary: "\nThe behaviour for when the agent has been blocked\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract void OnPartialPathUpdate()
          VB: Protected MustOverride Sub OnPartialPathUpdate
      overload: TowerDefense.Agents.Agent.OnPartialPathUpdate*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
  - id: TowerDefense.Agents.Agent.State
    commentId: T:TowerDefense.Agents.Agent.State
    language: CSharp
    name:
      CSharp: Agent.State
      VB: Agent.State
    nameWithType:
      CSharp: Agent.State
      VB: Agent.State
    qualifiedName:
      CSharp: TowerDefense.Agents.Agent.State
      VB: TowerDefense.Agents.Agent.State
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: State
      path: ''
      startLine: 584
    summary: "\nA means of keeping track of the agent along its path\n"
    example: []
    syntax:
      content:
        CSharp: public enum State
        VB: Public Enum State
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.Agents.Agent.State.OnCompletePath
      commentId: F:TowerDefense.Agents.Agent.State.OnCompletePath
      language: CSharp
      name:
        CSharp: OnCompletePath
        VB: OnCompletePath
      nameWithType:
        CSharp: Agent.State.OnCompletePath
        VB: Agent.State.OnCompletePath
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.State.OnCompletePath
        VB: TowerDefense.Agents.Agent.State.OnCompletePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnCompletePath
        path: ''
        startLine: 589
      summary: "\nWhen the agent is on a path that is not blocked\n"
      example: []
      syntax:
        content:
          CSharp: OnCompletePath = 0
          VB: OnCompletePath = 0
        return:
          type: TowerDefense.Agents.Agent.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Agents.Agent.State.OnPartialPath
      commentId: F:TowerDefense.Agents.Agent.State.OnPartialPath
      language: CSharp
      name:
        CSharp: OnPartialPath
        VB: OnPartialPath
      nameWithType:
        CSharp: Agent.State.OnPartialPath
        VB: Agent.State.OnPartialPath
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.State.OnPartialPath
        VB: TowerDefense.Agents.Agent.State.OnPartialPath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnPartialPath
        path: ''
        startLine: 594
      summary: "\nWhen the agent is on a path is blocked\n"
      example: []
      syntax:
        content:
          CSharp: OnPartialPath = 1
          VB: OnPartialPath = 1
        return:
          type: TowerDefense.Agents.Agent.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Agents.Agent.State.Attacking
      commentId: F:TowerDefense.Agents.Agent.State.Attacking
      language: CSharp
      name:
        CSharp: Attacking
        VB: Attacking
      nameWithType:
        CSharp: Agent.State.Attacking
        VB: Agent.State.Attacking
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.State.Attacking
        VB: TowerDefense.Agents.Agent.State.Attacking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Attacking
        path: ''
        startLine: 599
      summary: "\nWhen the agent has reached the end of a blocked path\n"
      example: []
      syntax:
        content:
          CSharp: Attacking = 2
          VB: Attacking = 2
        return:
          type: TowerDefense.Agents.Agent.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Agents.Agent.State.PushingThrough
      commentId: F:TowerDefense.Agents.Agent.State.PushingThrough
      language: CSharp
      name:
        CSharp: PushingThrough
        VB: PushingThrough
      nameWithType:
        CSharp: Agent.State.PushingThrough
        VB: Agent.State.PushingThrough
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.State.PushingThrough
        VB: TowerDefense.Agents.Agent.State.PushingThrough
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: PushingThrough
        path: ''
        startLine: 604
      summary: "\nFor flying agents, when they move over obstacles\n"
      example: []
      syntax:
        content:
          CSharp: PushingThrough = 3
          VB: PushingThrough = 3
        return:
          type: TowerDefense.Agents.Agent.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Agents.Agent.State.PathComplete
      commentId: F:TowerDefense.Agents.Agent.State.PathComplete
      language: CSharp
      name:
        CSharp: PathComplete
        VB: PathComplete
      nameWithType:
        CSharp: Agent.State.PathComplete
        VB: Agent.State.PathComplete
      qualifiedName:
        CSharp: TowerDefense.Agents.Agent.State.PathComplete
        VB: TowerDefense.Agents.Agent.State.PathComplete
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: PathComplete
        path: ''
        startLine: 609
      summary: "\nWhen the agent has completed their path\n"
      example: []
      syntax:
        content:
          CSharp: PathComplete = 4
          VB: PathComplete = 4
        return:
          type: TowerDefense.Agents.Agent.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.Agents.AgentEffect
    commentId: T:TowerDefense.Agents.AgentEffect
    language: CSharp
    name:
      CSharp: AgentEffect
      VB: AgentEffect
    nameWithType:
      CSharp: AgentEffect
      VB: AgentEffect
    qualifiedName:
      CSharp: TowerDefense.Agents.AgentEffect
      VB: TowerDefense.Agents.AgentEffect
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: AgentEffect
      path: ''
      startLine: 920
    summary: "\nA component that will apply various effects on an agent\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AgentEffect : MonoBehaviour'
        VB: >-
          Public MustInherit Class AgentEffect

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Agents.AgentEffect.m_Agent
      commentId: F:TowerDefense.Agents.AgentEffect.m_Agent
      language: CSharp
      name:
        CSharp: m_Agent
        VB: m_Agent
      nameWithType:
        CSharp: AgentEffect.m_Agent
        VB: AgentEffect.m_Agent
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentEffect.m_Agent
        VB: TowerDefense.Agents.AgentEffect.m_Agent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_Agent
        path: ''
        startLine: 925
      summary: "\nReference to the agent that will be affected\n"
      example: []
      syntax:
        content:
          CSharp: protected Agent m_Agent
          VB: Protected m_Agent As Agent
        return:
          type: TowerDefense.Agents.Agent
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AgentEffect.Awake
      commentId: M:TowerDefense.Agents.AgentEffect.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: AgentEffect.Awake()
        VB: AgentEffect.Awake()
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentEffect.Awake()
        VB: TowerDefense.Agents.AgentEffect.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Awake
        path: ''
        startLine: 927
      syntax:
        content:
          CSharp: public virtual void Awake()
          VB: Public Overridable Sub Awake
      overload: TowerDefense.Agents.AgentEffect.Awake*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Agents.AgentEffect.LazyLoad
      commentId: M:TowerDefense.Agents.AgentEffect.LazyLoad
      language: CSharp
      name:
        CSharp: LazyLoad()
        VB: LazyLoad()
      nameWithType:
        CSharp: AgentEffect.LazyLoad()
        VB: AgentEffect.LazyLoad()
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentEffect.LazyLoad()
        VB: TowerDefense.Agents.AgentEffect.LazyLoad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: LazyLoad
        path: ''
        startLine: 935
      summary: "\nA lazy way to ensure that <xref href=\"TowerDefense.Agents.AgentEffect.m_Agent\" data-throw-if-not-resolved=\"false\"></xref> will not be null\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void LazyLoad()
          VB: Public Overridable Sub LazyLoad
      overload: TowerDefense.Agents.AgentEffect.LazyLoad*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
      references:
        TowerDefense.Agents.AgentEffect.m_Agent: 
  - id: TowerDefense.Agents.AgentSlower
    commentId: T:TowerDefense.Agents.AgentSlower
    language: CSharp
    name:
      CSharp: AgentSlower
      VB: AgentSlower
    nameWithType:
      CSharp: AgentSlower
      VB: AgentSlower
    qualifiedName:
      CSharp: TowerDefense.Agents.AgentSlower
      VB: TowerDefense.Agents.AgentSlower
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: AgentSlower
      path: ''
      startLine: 954
    summary: "\nThis effect will get attached to an agent that is within range of the SlowAffector radius\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AgentSlower : AgentEffect'
        VB: >-
          Public Class AgentSlower

              Inherits AgentEffect
    inheritance:
    - System.Object
    - TowerDefense.Agents.AgentEffect
    inheritedMembers:
    - TowerDefense.Agents.AgentEffect.m_Agent
    - TowerDefense.Agents.AgentEffect.Awake
    - TowerDefense.Agents.AgentEffect.LazyLoad
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Agents.AgentSlower.m_SlowFx
      commentId: F:TowerDefense.Agents.AgentSlower.m_SlowFx
      language: CSharp
      name:
        CSharp: m_SlowFx
        VB: m_SlowFx
      nameWithType:
        CSharp: AgentSlower.m_SlowFx
        VB: AgentSlower.m_SlowFx
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentSlower.m_SlowFx
        VB: TowerDefense.Agents.AgentSlower.m_SlowFx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_SlowFx
        path: ''
        startLine: 956
      syntax:
        content:
          CSharp: protected GameObject m_SlowFx
          VB: Protected m_SlowFx As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AgentSlower.m_CurrentEffects
      commentId: F:TowerDefense.Agents.AgentSlower.m_CurrentEffects
      language: CSharp
      name:
        CSharp: m_CurrentEffects
        VB: m_CurrentEffects
      nameWithType:
        CSharp: AgentSlower.m_CurrentEffects
        VB: AgentSlower.m_CurrentEffects
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentSlower.m_CurrentEffects
        VB: TowerDefense.Agents.AgentSlower.m_CurrentEffects
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_CurrentEffects
        path: ''
        startLine: 958
      syntax:
        content:
          CSharp: protected List<float> m_CurrentEffects
          VB: Protected m_CurrentEffects As List(Of Single)
        return:
          type: List{System.Single}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AgentSlower.Initialize(System.Single,GameObject,Vector3,System.Single)
      commentId: M:TowerDefense.Agents.AgentSlower.Initialize(System.Single,GameObject,Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Initialize(Single, GameObject, Vector3, Single)
        VB: Initialize(Single, GameObject, Vector3, Single)
      nameWithType:
        CSharp: AgentSlower.Initialize(Single, GameObject, Vector3, Single)
        VB: AgentSlower.Initialize(Single, GameObject, Vector3, Single)
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentSlower.Initialize(System.Single, GameObject, Vector3, System.Single)
        VB: TowerDefense.Agents.AgentSlower.Initialize(System.Single, GameObject, Vector3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Initialize
        path: ''
        startLine: 967
      summary: "\nInitializes the slower with the parameters configured in the SlowAffector\n"
      example: []
      syntax:
        content:
          CSharp: public void Initialize(float slowFactor, GameObject slowfxPrefab = null, Vector3 position = null, float scale = 1F)
          VB: Public Sub Initialize(slowFactor As Single, slowfxPrefab As GameObject = Nothing, position As Vector3 = Nothing, scale As Single = 1F)
        parameters:
        - id: slowFactor
          type: System.Single
          description: Normalized float that represents the % slowdown applied to the agent
        - id: slowfxPrefab
          type: GameObject
          description: The instantiated object to visualize the slow effect
        - id: position
          type: Vector3
          description: ''
        - id: scale
          type: System.Single
          description: ''
      overload: TowerDefense.Agents.AgentSlower.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.AgentSlower.RemoveSlow(System.Single)
      commentId: M:TowerDefense.Agents.AgentSlower.RemoveSlow(System.Single)
      language: CSharp
      name:
        CSharp: RemoveSlow(Single)
        VB: RemoveSlow(Single)
      nameWithType:
        CSharp: AgentSlower.RemoveSlow(Single)
        VB: AgentSlower.RemoveSlow(Single)
      qualifiedName:
        CSharp: TowerDefense.Agents.AgentSlower.RemoveSlow(System.Single)
        VB: TowerDefense.Agents.AgentSlower.RemoveSlow(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: RemoveSlow
        path: ''
        startLine: 998
      summary: "\nResets the agent&apos;s speed \n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveSlow(float slowFactor)
          VB: Public Sub RemoveSlow(slowFactor As Single)
        parameters:
        - id: slowFactor
          type: System.Single
      overload: TowerDefense.Agents.AgentSlower.RemoveSlow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Agents.AttackingAgent
    commentId: T:TowerDefense.Agents.AttackingAgent
    language: CSharp
    name:
      CSharp: AttackingAgent
      VB: AttackingAgent
    nameWithType:
      CSharp: AttackingAgent
      VB: AttackingAgent
    qualifiedName:
      CSharp: TowerDefense.Agents.AttackingAgent
      VB: TowerDefense.Agents.AttackingAgent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: AttackingAgent
      path: ''
      startLine: 1048
    summary: "\nAn implementation of Agent that will attack \nany Towers that block its path\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AttackingAgent : Agent'
        VB: >-
          Public Class AttackingAgent

              Inherits Agent
    inheritance:
    - System.Object
    - TowerDefense.Agents.Agent
    inheritedMembers:
    - TowerDefense.Agents.Agent.destinationReached
    - TowerDefense.Agents.Agent.appliedEffectOffset
    - TowerDefense.Agents.Agent.appliedEffectScale
    - TowerDefense.Agents.Agent.m_NavMeshAgent
    - TowerDefense.Agents.Agent.m_CurrentNode
    - TowerDefense.Agents.Agent.m_LevelManager
    - TowerDefense.Agents.Agent.m_Destination
    - TowerDefense.Agents.Agent.velocity
    - TowerDefense.Agents.Agent.state
    - TowerDefense.Agents.Agent.navMeshNavMeshAgent
    - TowerDefense.Agents.Agent.navMeshMask
    - TowerDefense.Agents.Agent.originalMovementSpeed
    - TowerDefense.Agents.Agent.isPathBlocked
    - TowerDefense.Agents.Agent.isAtDestination
    - TowerDefense.Agents.Agent.SetNode(Node)
    - TowerDefense.Agents.Agent.GetNextNode(Node)
    - TowerDefense.Agents.Agent.MoveToNode
    - TowerDefense.Agents.Agent.HandleDestinationReached
    - TowerDefense.Agents.Agent.Awake
    - TowerDefense.Agents.Agent.Update
    - TowerDefense.Agents.Agent.NavigateTo(Vector3)
    - TowerDefense.Agents.Agent.OnCompletePathUpdate
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Agents.AttackingAgent.m_TargetTower
      commentId: F:TowerDefense.Agents.AttackingAgent.m_TargetTower
      language: CSharp
      name:
        CSharp: m_TargetTower
        VB: m_TargetTower
      nameWithType:
        CSharp: AttackingAgent.m_TargetTower
        VB: AttackingAgent.m_TargetTower
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.m_TargetTower
        VB: TowerDefense.Agents.AttackingAgent.m_TargetTower
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_TargetTower
        path: ''
        startLine: 1053
      summary: "\nTower to target\n"
      example: []
      syntax:
        content:
          CSharp: protected Tower m_TargetTower
          VB: Protected m_TargetTower As Tower
        return:
          type: Tower
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AttackingAgent.m_AttackAffector
      commentId: F:TowerDefense.Agents.AttackingAgent.m_AttackAffector
      language: CSharp
      name:
        CSharp: m_AttackAffector
        VB: m_AttackAffector
      nameWithType:
        CSharp: AttackingAgent.m_AttackAffector
        VB: AttackingAgent.m_AttackAffector
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.m_AttackAffector
        VB: TowerDefense.Agents.AttackingAgent.m_AttackAffector
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_AttackAffector
        path: ''
        startLine: 1058
      summary: "\nThe attached attack affector\n"
      example: []
      syntax:
        content:
          CSharp: protected AttackAffector m_AttackAffector
          VB: Protected m_AttackAffector As AttackAffector
        return:
          type: AttackAffector
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AttackingAgent.m_IsAttacking
      commentId: F:TowerDefense.Agents.AttackingAgent.m_IsAttacking
      language: CSharp
      name:
        CSharp: m_IsAttacking
        VB: m_IsAttacking
      nameWithType:
        CSharp: AttackingAgent.m_IsAttacking
        VB: AttackingAgent.m_IsAttacking
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.m_IsAttacking
        VB: TowerDefense.Agents.AttackingAgent.m_IsAttacking
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_IsAttacking
        path: ''
        startLine: 1063
      summary: "\nIs this agent currently engaging a tower?\n"
      example: []
      syntax:
        content:
          CSharp: protected bool m_IsAttacking
          VB: Protected m_IsAttacking As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AttackingAgent.Initialize
      commentId: M:TowerDefense.Agents.AttackingAgent.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: AttackingAgent.Initialize()
        VB: AttackingAgent.Initialize()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.Initialize()
        VB: TowerDefense.Agents.AttackingAgent.Initialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Initialize
        path: ''
        startLine: 1065
      syntax:
        content:
          CSharp: public override void Initialize()
          VB: Public Overrides Sub Initialize
      overload: TowerDefense.Agents.AttackingAgent.Initialize*
      overridden: TowerDefense.Agents.Agent.Initialize
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Agents.AttackingAgent.Remove
      commentId: M:TowerDefense.Agents.AttackingAgent.Remove
      language: CSharp
      name:
        CSharp: Remove()
        VB: Remove()
      nameWithType:
        CSharp: AttackingAgent.Remove()
        VB: AttackingAgent.Remove()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.Remove()
        VB: TowerDefense.Agents.AttackingAgent.Remove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Remove
        path: ''
        startLine: 1081
      summary: "\nUnsubscribes from tracked towers removed event\nand disables the attached attack affector\n"
      example: []
      syntax:
        content:
          CSharp: public override void Remove()
          VB: Public Overrides Sub Remove
      overload: TowerDefense.Agents.AttackingAgent.Remove*
      overridden: TowerDefense.Agents.Agent.Remove
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Agents.AttackingAgent.GetClosestTower
      commentId: M:TowerDefense.Agents.AttackingAgent.GetClosestTower
      language: CSharp
      name:
        CSharp: GetClosestTower()
        VB: GetClosestTower()
      nameWithType:
        CSharp: AttackingAgent.GetClosestTower()
        VB: AttackingAgent.GetClosestTower()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.GetClosestTower()
        VB: TowerDefense.Agents.AttackingAgent.GetClosestTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: GetClosestTower
        path: ''
        startLine: 1096
      summary: "\nGets the closest tower to the agent\n"
      example: []
      syntax:
        content:
          CSharp: protected Tower GetClosestTower()
          VB: Protected Function GetClosestTower As Tower
        return:
          type: Tower
          description: The closest tower
      overload: TowerDefense.Agents.AttackingAgent.GetClosestTower*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.AttackingAgent.LazyLoad
      commentId: M:TowerDefense.Agents.AttackingAgent.LazyLoad
      language: CSharp
      name:
        CSharp: LazyLoad()
        VB: LazyLoad()
      nameWithType:
        CSharp: AttackingAgent.LazyLoad()
        VB: AttackingAgent.LazyLoad()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.LazyLoad()
        VB: TowerDefense.Agents.AttackingAgent.LazyLoad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: LazyLoad
        path: ''
        startLine: 1105
      summary: "\nCaches the Attack Affector if necessary\n"
      example: []
      syntax:
        content:
          CSharp: protected override void LazyLoad()
          VB: Protected Overrides Sub LazyLoad
      overload: TowerDefense.Agents.AttackingAgent.LazyLoad*
      overridden: TowerDefense.Agents.Agent.LazyLoad
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed(DamageableBehaviour)
      commentId: M:TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed(DamageableBehaviour)
      language: CSharp
      name:
        CSharp: OnTargetTowerDestroyed(DamageableBehaviour)
        VB: OnTargetTowerDestroyed(DamageableBehaviour)
      nameWithType:
        CSharp: AttackingAgent.OnTargetTowerDestroyed(DamageableBehaviour)
        VB: AttackingAgent.OnTargetTowerDestroyed(DamageableBehaviour)
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed(DamageableBehaviour)
        VB: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed(DamageableBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnTargetTowerDestroyed
        path: ''
        startLine: 1118
      summary: "\nIf the tower is destroyed while other agents attack it, ensure it becomes null\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnTargetTowerDestroyed(DamageableBehaviour tower)
          VB: Protected Overridable Sub OnTargetTowerDestroyed(tower As DamageableBehaviour)
        parameters:
        - id: tower
          type: DamageableBehaviour
          description: The tower that has been destroyed
      overload: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Agents.AttackingAgent.PathUpdate
      commentId: M:TowerDefense.Agents.AttackingAgent.PathUpdate
      language: CSharp
      name:
        CSharp: PathUpdate()
        VB: PathUpdate()
      nameWithType:
        CSharp: AttackingAgent.PathUpdate()
        VB: AttackingAgent.PathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.PathUpdate()
        VB: TowerDefense.Agents.AttackingAgent.PathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: PathUpdate
        path: ''
        startLine: 1131
      summary: "\nPeforms the relevant path update for the states <xref href=\"TowerDefense.Agents.Agent.State.OnCompletePath\" data-throw-if-not-resolved=\"false\"></xref>, \n<xref href=\"TowerDefense.Agents.Agent.State.OnPartialPath\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"TowerDefense.Agents.Agent.State.Attacking\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void PathUpdate()
          VB: Protected Overrides Sub PathUpdate
      overload: TowerDefense.Agents.AttackingAgent.PathUpdate*
      overridden: TowerDefense.Agents.Agent.PathUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
      references:
        TowerDefense.Agents.Agent.State.OnCompletePath: 
        TowerDefense.Agents.Agent.State.OnPartialPath: 
        TowerDefense.Agents.Agent.State.Attacking: 
    - id: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate
      commentId: M:TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate
      language: CSharp
      name:
        CSharp: OnPartialPathUpdate()
        VB: OnPartialPathUpdate()
      nameWithType:
        CSharp: AttackingAgent.OnPartialPathUpdate()
        VB: AttackingAgent.OnPartialPathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate()
        VB: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnPartialPathUpdate
        path: ''
        startLine: 1151
      summary: "\nChange to <xref href=\"TowerDefense.Agents.Agent.State.OnCompletePath\" data-throw-if-not-resolved=\"false\"></xref> when path is no longer blocked or to\n<xref href=\"TowerDefense.Agents.Agent.State.Attacking\" data-throw-if-not-resolved=\"false\"></xref> when the agent reaches <xref href=\"TowerDefense.Agents.AttackingAgent.m_TargetTower\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnPartialPathUpdate()
          VB: Protected Overrides Sub OnPartialPathUpdate
      overload: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate*
      overridden: TowerDefense.Agents.Agent.OnPartialPathUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
      references:
        TowerDefense.Agents.Agent.State.OnCompletePath: 
        TowerDefense.Agents.Agent.State.Attacking: 
        TowerDefense.Agents.AttackingAgent.m_TargetTower: 
    - id: TowerDefense.Agents.AttackingAgent.AttackingUpdate
      commentId: M:TowerDefense.Agents.AttackingAgent.AttackingUpdate
      language: CSharp
      name:
        CSharp: AttackingUpdate()
        VB: AttackingUpdate()
      nameWithType:
        CSharp: AttackingAgent.AttackingUpdate()
        VB: AttackingAgent.AttackingUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.AttackingAgent.AttackingUpdate()
        VB: TowerDefense.Agents.AttackingAgent.AttackingUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: AttackingUpdate
        path: ''
        startLine: 1200
      summary: "\nThe agent attacks until the path is available again or it has killed the target tower\n"
      example: []
      syntax:
        content:
          CSharp: protected void AttackingUpdate()
          VB: Protected Sub AttackingUpdate
      overload: TowerDefense.Agents.AttackingAgent.AttackingUpdate*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.Agents.FlyingAgent
    commentId: T:TowerDefense.Agents.FlyingAgent
    language: CSharp
    name:
      CSharp: FlyingAgent
      VB: FlyingAgent
    nameWithType:
      CSharp: FlyingAgent
      VB: FlyingAgent
    qualifiedName:
      CSharp: TowerDefense.Agents.FlyingAgent
      VB: TowerDefense.Agents.FlyingAgent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: FlyingAgent
      path: ''
      startLine: 1226
    summary: "\nAgent that can pass &quot;over&quot; towers that block the path\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FlyingAgent : Agent'
        VB: >-
          Public Class FlyingAgent

              Inherits Agent
    inheritance:
    - System.Object
    - TowerDefense.Agents.Agent
    inheritedMembers:
    - TowerDefense.Agents.Agent.destinationReached
    - TowerDefense.Agents.Agent.appliedEffectOffset
    - TowerDefense.Agents.Agent.appliedEffectScale
    - TowerDefense.Agents.Agent.m_NavMeshAgent
    - TowerDefense.Agents.Agent.m_CurrentNode
    - TowerDefense.Agents.Agent.m_LevelManager
    - TowerDefense.Agents.Agent.m_Destination
    - TowerDefense.Agents.Agent.velocity
    - TowerDefense.Agents.Agent.state
    - TowerDefense.Agents.Agent.navMeshNavMeshAgent
    - TowerDefense.Agents.Agent.navMeshMask
    - TowerDefense.Agents.Agent.originalMovementSpeed
    - TowerDefense.Agents.Agent.isPathBlocked
    - TowerDefense.Agents.Agent.isAtDestination
    - TowerDefense.Agents.Agent.SetNode(Node)
    - TowerDefense.Agents.Agent.Remove
    - TowerDefense.Agents.Agent.Initialize
    - TowerDefense.Agents.Agent.GetNextNode(Node)
    - TowerDefense.Agents.Agent.MoveToNode
    - TowerDefense.Agents.Agent.HandleDestinationReached
    - TowerDefense.Agents.Agent.Awake
    - TowerDefense.Agents.Agent.Update
    - TowerDefense.Agents.Agent.NavigateTo(Vector3)
    - TowerDefense.Agents.Agent.LazyLoad
    - TowerDefense.Agents.Agent.OnCompletePathUpdate
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Agents.FlyingAgent.m_WaitTime
      commentId: F:TowerDefense.Agents.FlyingAgent.m_WaitTime
      language: CSharp
      name:
        CSharp: m_WaitTime
        VB: m_WaitTime
      nameWithType:
        CSharp: FlyingAgent.m_WaitTime
        VB: FlyingAgent.m_WaitTime
      qualifiedName:
        CSharp: TowerDefense.Agents.FlyingAgent.m_WaitTime
        VB: TowerDefense.Agents.FlyingAgent.m_WaitTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_WaitTime
        path: ''
        startLine: 1231
      summary: "\nTime to wait to clear the navmesh obstacles\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_WaitTime
          VB: Protected m_WaitTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.FlyingAgent.m_CurrentWaitTime
      commentId: F:TowerDefense.Agents.FlyingAgent.m_CurrentWaitTime
      language: CSharp
      name:
        CSharp: m_CurrentWaitTime
        VB: m_CurrentWaitTime
      nameWithType:
        CSharp: FlyingAgent.m_CurrentWaitTime
        VB: FlyingAgent.m_CurrentWaitTime
      qualifiedName:
        CSharp: TowerDefense.Agents.FlyingAgent.m_CurrentWaitTime
        VB: TowerDefense.Agents.FlyingAgent.m_CurrentWaitTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_CurrentWaitTime
        path: ''
        startLine: 1236
      summary: "\nThe current time to wait until we can resume agent movement as normal\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_CurrentWaitTime
          VB: Protected m_CurrentWaitTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate
      commentId: M:TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate
      language: CSharp
      name:
        CSharp: OnPartialPathUpdate()
        VB: OnPartialPathUpdate()
      nameWithType:
        CSharp: FlyingAgent.OnPartialPathUpdate()
        VB: FlyingAgent.OnPartialPathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate()
        VB: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnPartialPathUpdate
        path: ''
        startLine: 1241
      summary: "\nIf flying agents are blocked, they should still move through obstacles\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnPartialPathUpdate()
          VB: Protected Overrides Sub OnPartialPathUpdate
      overload: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate*
      overridden: TowerDefense.Agents.Agent.OnPartialPathUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Agents.FlyingAgent.PathUpdate
      commentId: M:TowerDefense.Agents.FlyingAgent.PathUpdate
      language: CSharp
      name:
        CSharp: PathUpdate()
        VB: PathUpdate()
      nameWithType:
        CSharp: FlyingAgent.PathUpdate()
        VB: FlyingAgent.PathUpdate()
      qualifiedName:
        CSharp: TowerDefense.Agents.FlyingAgent.PathUpdate()
        VB: TowerDefense.Agents.FlyingAgent.PathUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: PathUpdate
        path: ''
        startLine: 1261
      summary: "\nControls behaviour based on the states <xref href=\"TowerDefense.Agents.Agent.State.OnCompletePath\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"TowerDefense.Agents.Agent.State.OnPartialPath\" data-throw-if-not-resolved=\"false\"></xref> \nand <xref href=\"TowerDefense.Agents.Agent.State.PushingThrough\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void PathUpdate()
          VB: Protected Overrides Sub PathUpdate
      overload: TowerDefense.Agents.FlyingAgent.PathUpdate*
      overridden: TowerDefense.Agents.Agent.PathUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
      references:
        TowerDefense.Agents.Agent.State.OnCompletePath: 
        TowerDefense.Agents.Agent.State.OnPartialPath: 
        TowerDefense.Agents.Agent.State.PushingThrough: 
    - id: TowerDefense.Agents.FlyingAgent.PushingThrough
      commentId: M:TowerDefense.Agents.FlyingAgent.PushingThrough
      language: CSharp
      name:
        CSharp: PushingThrough()
        VB: PushingThrough()
      nameWithType:
        CSharp: FlyingAgent.PushingThrough()
        VB: FlyingAgent.PushingThrough()
      qualifiedName:
        CSharp: TowerDefense.Agents.FlyingAgent.PushingThrough()
        VB: TowerDefense.Agents.FlyingAgent.PushingThrough()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: PushingThrough
        path: ''
        startLine: 1281
      summary: "\nWhen flying agents are pushing through, give them a small amount of time to clear the gap and turn on their agent\nonce time elapses\n"
      example: []
      syntax:
        content:
          CSharp: protected void PushingThrough()
          VB: Protected Sub PushingThrough
      overload: TowerDefense.Agents.FlyingAgent.PushingThrough*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.Agents.HomeBaseAttacker
    commentId: T:TowerDefense.Agents.HomeBaseAttacker
    language: CSharp
    name:
      CSharp: HomeBaseAttacker
      VB: HomeBaseAttacker
    nameWithType:
      CSharp: HomeBaseAttacker
      VB: HomeBaseAttacker
    qualifiedName:
      CSharp: TowerDefense.Agents.HomeBaseAttacker
      VB: TowerDefense.Agents.HomeBaseAttacker
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents
    source:
      id: HomeBaseAttacker
      path: ''
      startLine: 1319
    summary: "\nA component that attacks a home base when an agent reaches it \n"
    example: []
    syntax:
      content:
        CSharp: 'public class HomeBaseAttacker : MonoBehaviour'
        VB: >-
          Public Class HomeBaseAttacker

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Agents.HomeBaseAttacker.homeBaseAttackChargeTime
      commentId: F:TowerDefense.Agents.HomeBaseAttacker.homeBaseAttackChargeTime
      language: CSharp
      name:
        CSharp: homeBaseAttackChargeTime
        VB: homeBaseAttackChargeTime
      nameWithType:
        CSharp: HomeBaseAttacker.homeBaseAttackChargeTime
        VB: HomeBaseAttacker.homeBaseAttackChargeTime
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.homeBaseAttackChargeTime
        VB: TowerDefense.Agents.HomeBaseAttacker.homeBaseAttackChargeTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: homeBaseAttackChargeTime
        path: ''
        startLine: 1326
      summary: "\nHow long the agent charges for before it attacks\nthe home base\n"
      example: []
      syntax:
        content:
          CSharp: public float homeBaseAttackChargeTime
          VB: Public homeBaseAttackChargeTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer
      commentId: F:TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer
      language: CSharp
      name:
        CSharp: m_HomeBaseAttackTimer
        VB: m_HomeBaseAttackTimer
      nameWithType:
        CSharp: HomeBaseAttacker.m_HomeBaseAttackTimer
        VB: HomeBaseAttacker.m_HomeBaseAttackTimer
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer
        VB: TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_HomeBaseAttackTimer
        path: ''
        startLine: 1331
      summary: "\nTimer used to stall attack to the home base\n"
      example: []
      syntax:
        content:
          CSharp: protected Timer m_HomeBaseAttackTimer
          VB: Protected m_HomeBaseAttackTimer As Timer
        return:
          type: Timer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.HomeBaseAttacker.m_IsChargingHomeBaseAttack
      commentId: F:TowerDefense.Agents.HomeBaseAttacker.m_IsChargingHomeBaseAttack
      language: CSharp
      name:
        CSharp: m_IsChargingHomeBaseAttack
        VB: m_IsChargingHomeBaseAttack
      nameWithType:
        CSharp: HomeBaseAttacker.m_IsChargingHomeBaseAttack
        VB: HomeBaseAttacker.m_IsChargingHomeBaseAttack
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.m_IsChargingHomeBaseAttack
        VB: TowerDefense.Agents.HomeBaseAttacker.m_IsChargingHomeBaseAttack
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_IsChargingHomeBaseAttack
        path: ''
        startLine: 1336
      summary: "\nIf the agent has reached the Player Home Base and is charging an attack\n"
      example: []
      syntax:
        content:
          CSharp: protected bool m_IsChargingHomeBaseAttack
          VB: Protected m_IsChargingHomeBaseAttack As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.HomeBaseAttacker.m_FinalDestinationDamageableBehaviour
      commentId: F:TowerDefense.Agents.HomeBaseAttacker.m_FinalDestinationDamageableBehaviour
      language: CSharp
      name:
        CSharp: m_FinalDestinationDamageableBehaviour
        VB: m_FinalDestinationDamageableBehaviour
      nameWithType:
        CSharp: HomeBaseAttacker.m_FinalDestinationDamageableBehaviour
        VB: HomeBaseAttacker.m_FinalDestinationDamageableBehaviour
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.m_FinalDestinationDamageableBehaviour
        VB: TowerDefense.Agents.HomeBaseAttacker.m_FinalDestinationDamageableBehaviour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: m_FinalDestinationDamageableBehaviour
        path: ''
        startLine: 1341
      summary: "\nThe DamageableBehaviour on the home base \n"
      example: []
      syntax:
        content:
          CSharp: protected DamageableBehaviour m_FinalDestinationDamageableBehaviour
          VB: Protected m_FinalDestinationDamageableBehaviour As DamageableBehaviour
        return:
          type: DamageableBehaviour
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Agents.HomeBaseAttacker.agent
      commentId: P:TowerDefense.Agents.HomeBaseAttacker.agent
      language: CSharp
      name:
        CSharp: agent
        VB: agent
      nameWithType:
        CSharp: HomeBaseAttacker.agent
        VB: HomeBaseAttacker.agent
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.agent
        VB: TowerDefense.Agents.HomeBaseAttacker.agent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: agent
        path: ''
        startLine: 1346
      summary: "\nThe agent component attached to this gameObject\n"
      example: []
      syntax:
        content:
          CSharp: public Agent agent { get; protected set; }
          VB: Public Property agent As Agent
        parameters: []
        return:
          type: TowerDefense.Agents.Agent
      overload: TowerDefense.Agents.HomeBaseAttacker.agent*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase
      commentId: M:TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase
      language: CSharp
      name:
        CSharp: AttackHomeBase()
        VB: AttackHomeBase()
      nameWithType:
        CSharp: HomeBaseAttacker.AttackHomeBase()
        VB: HomeBaseAttacker.AttackHomeBase()
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase()
        VB: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: AttackHomeBase
        path: ''
        startLine: 1352
      summary: "\nFired on completion of <xref href=\"TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer\" data-throw-if-not-resolved=\"false\"></xref>\nApplies damage to the homebase\n"
      example: []
      syntax:
        content:
          CSharp: protected void AttackHomeBase()
          VB: Protected Sub AttackHomeBase
      overload: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer: 
    - id: TowerDefense.Agents.HomeBaseAttacker.Update
      commentId: M:TowerDefense.Agents.HomeBaseAttacker.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: HomeBaseAttacker.Update()
        VB: HomeBaseAttacker.Update()
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.Update()
        VB: TowerDefense.Agents.HomeBaseAttacker.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Update
        path: ''
        startLine: 1366
      summary: "\nTicks the attack timer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Agents.HomeBaseAttacker.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Agents.HomeBaseAttacker.Awake
      commentId: M:TowerDefense.Agents.HomeBaseAttacker.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: HomeBaseAttacker.Awake()
        VB: HomeBaseAttacker.Awake()
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.Awake()
        VB: TowerDefense.Agents.HomeBaseAttacker.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: Awake
        path: ''
        startLine: 1378
      summary: "\nCaches the attached Agent and subscribes to the destinationReached event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Agents.HomeBaseAttacker.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Agents.HomeBaseAttacker.OnDestroy
      commentId: M:TowerDefense.Agents.HomeBaseAttacker.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: HomeBaseAttacker.OnDestroy()
        VB: HomeBaseAttacker.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.Agents.HomeBaseAttacker.OnDestroy()
        VB: TowerDefense.Agents.HomeBaseAttacker.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents
      source:
        id: OnDestroy
        path: ''
        startLine: 1388
      summary: "\nUnsubscribes from the destinationReached event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.Agents.HomeBaseAttacker.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: TowerDefense.Agents.Data
  commentId: N:TowerDefense.Agents.Data
  language: CSharp
  name:
    CSharp: TowerDefense.Agents.Data
    VB: TowerDefense.Agents.Data
  nameWithType:
    CSharp: TowerDefense.Agents.Data
    VB: TowerDefense.Agents.Data
  qualifiedName:
    CSharp: TowerDefense.Agents.Data
    VB: TowerDefense.Agents.Data
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Agents.Data.AgentConfiguration
    commentId: T:TowerDefense.Agents.Data.AgentConfiguration
    language: CSharp
    name:
      CSharp: AgentConfiguration
      VB: AgentConfiguration
    nameWithType:
      CSharp: AgentConfiguration
      VB: AgentConfiguration
    qualifiedName:
      CSharp: TowerDefense.Agents.Data.AgentConfiguration
      VB: TowerDefense.Agents.Data.AgentConfiguration
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Agents.Data
    source:
      id: AgentConfiguration
      path: ''
      startLine: 1431
    syntax:
      content:
        CSharp: 'public class AgentConfiguration : ScriptableObject'
        VB: >-
          Public Class AgentConfiguration

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Agents.Data.AgentConfiguration.agentName
      commentId: F:TowerDefense.Agents.Data.AgentConfiguration.agentName
      language: CSharp
      name:
        CSharp: agentName
        VB: agentName
      nameWithType:
        CSharp: AgentConfiguration.agentName
        VB: AgentConfiguration.agentName
      qualifiedName:
        CSharp: TowerDefense.Agents.Data.AgentConfiguration.agentName
        VB: TowerDefense.Agents.Data.AgentConfiguration.agentName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents.Data
      source:
        id: agentName
        path: ''
        startLine: 1437
      summary: "\nThe name of the agent\n"
      example: []
      syntax:
        content:
          CSharp: public string agentName
          VB: Public agentName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.Data.AgentConfiguration.agentDescription
      commentId: F:TowerDefense.Agents.Data.AgentConfiguration.agentDescription
      language: CSharp
      name:
        CSharp: agentDescription
        VB: agentDescription
      nameWithType:
        CSharp: AgentConfiguration.agentDescription
        VB: AgentConfiguration.agentDescription
      qualifiedName:
        CSharp: TowerDefense.Agents.Data.AgentConfiguration.agentDescription
        VB: TowerDefense.Agents.Data.AgentConfiguration.agentDescription
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents.Data
      source:
        id: agentDescription
        path: ''
        startLine: 1443
      summary: "\nShort summary of the agent\n"
      example: []
      syntax:
        content:
          CSharp: public string agentDescription
          VB: Public agentDescription As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Agents.Data.AgentConfiguration.agentPrefab
      commentId: F:TowerDefense.Agents.Data.AgentConfiguration.agentPrefab
      language: CSharp
      name:
        CSharp: agentPrefab
        VB: agentPrefab
      nameWithType:
        CSharp: AgentConfiguration.agentPrefab
        VB: AgentConfiguration.agentPrefab
      qualifiedName:
        CSharp: TowerDefense.Agents.Data.AgentConfiguration.agentPrefab
        VB: TowerDefense.Agents.Data.AgentConfiguration.agentPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Agents.Data
      source:
        id: agentPrefab
        path: ''
        startLine: 1448
      summary: "\nThe Agent prefab that will be used on instantiation\n"
      example: []
      syntax:
        content:
          CSharp: public Agent agentPrefab
          VB: Public agentPrefab As Agent
        return:
          type: TowerDefense.Agents.Agent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TowerDefense.Cameras
  commentId: N:TowerDefense.Cameras
  language: CSharp
  name:
    CSharp: TowerDefense.Cameras
    VB: TowerDefense.Cameras
  nameWithType:
    CSharp: TowerDefense.Cameras
    VB: TowerDefense.Cameras
  qualifiedName:
    CSharp: TowerDefense.Cameras
    VB: TowerDefense.Cameras
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Cameras.PostProcessorConfigurationSelector
    commentId: T:TowerDefense.Cameras.PostProcessorConfigurationSelector
    language: CSharp
    name:
      CSharp: PostProcessorConfigurationSelector
      VB: PostProcessorConfigurationSelector
    nameWithType:
      CSharp: PostProcessorConfigurationSelector
      VB: PostProcessorConfigurationSelector
    qualifiedName:
      CSharp: TowerDefense.Cameras.PostProcessorConfigurationSelector
      VB: TowerDefense.Cameras.PostProcessorConfigurationSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Cameras
    source:
      id: PostProcessorConfigurationSelector
      path: ''
      startLine: 1459
    summary: "\nSimple component to select lower quality post processing configurations on mobile\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PostProcessorConfigurationSelector : MonoBehaviour'
        VB: >-
          Public Class PostProcessorConfigurationSelector

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Cameras.PostProcessorConfigurationSelector.highQualityProfile
      commentId: F:TowerDefense.Cameras.PostProcessorConfigurationSelector.highQualityProfile
      language: CSharp
      name:
        CSharp: highQualityProfile
        VB: highQualityProfile
      nameWithType:
        CSharp: PostProcessorConfigurationSelector.highQualityProfile
        VB: PostProcessorConfigurationSelector.highQualityProfile
      qualifiedName:
        CSharp: TowerDefense.Cameras.PostProcessorConfigurationSelector.highQualityProfile
        VB: TowerDefense.Cameras.PostProcessorConfigurationSelector.highQualityProfile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Cameras
      source:
        id: highQualityProfile
        path: ''
        startLine: 1462
      syntax:
        content:
          CSharp: public PostProcessingProfile highQualityProfile
          VB: Public highQualityProfile As PostProcessingProfile
        return:
          type: PostProcessingProfile
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Cameras.PostProcessorConfigurationSelector.lowQualityProfile
      commentId: F:TowerDefense.Cameras.PostProcessorConfigurationSelector.lowQualityProfile
      language: CSharp
      name:
        CSharp: lowQualityProfile
        VB: lowQualityProfile
      nameWithType:
        CSharp: PostProcessorConfigurationSelector.lowQualityProfile
        VB: PostProcessorConfigurationSelector.lowQualityProfile
      qualifiedName:
        CSharp: TowerDefense.Cameras.PostProcessorConfigurationSelector.lowQualityProfile
        VB: TowerDefense.Cameras.PostProcessorConfigurationSelector.lowQualityProfile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Cameras
      source:
        id: lowQualityProfile
        path: ''
        startLine: 1464
      syntax:
        content:
          CSharp: public PostProcessingProfile lowQualityProfile
          VB: Public lowQualityProfile As PostProcessingProfile
        return:
          type: PostProcessingProfile
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake
      commentId: M:TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PostProcessorConfigurationSelector.Awake()
        VB: PostProcessorConfigurationSelector.Awake()
      qualifiedName:
        CSharp: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake()
        VB: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Cameras
      source:
        id: Awake
        path: ''
        startLine: 1466
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: TowerDefense.Economy
  commentId: N:TowerDefense.Economy
  language: CSharp
  name:
    CSharp: TowerDefense.Economy
    VB: TowerDefense.Economy
  nameWithType:
    CSharp: TowerDefense.Economy
    VB: TowerDefense.Economy
  qualifiedName:
    CSharp: TowerDefense.Economy
    VB: TowerDefense.Economy
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Economy.CurrencyChangeInfo
    commentId: T:TowerDefense.Economy.CurrencyChangeInfo
    language: CSharp
    name:
      CSharp: CurrencyChangeInfo
      VB: CurrencyChangeInfo
    nameWithType:
      CSharp: CurrencyChangeInfo
      VB: CurrencyChangeInfo
    qualifiedName:
      CSharp: TowerDefense.Economy.CurrencyChangeInfo
      VB: TowerDefense.Economy.CurrencyChangeInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Economy
    source:
      id: CurrencyChangeInfo
      path: ''
      startLine: 1489
    summary: "\nA struct for holding currency change data\n"
    example: []
    syntax:
      content:
        CSharp: public struct CurrencyChangeInfo
        VB: Public Structure CurrencyChangeInfo
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: TowerDefense.Economy.CurrencyChangeInfo.previousCurrency
      commentId: F:TowerDefense.Economy.CurrencyChangeInfo.previousCurrency
      language: CSharp
      name:
        CSharp: previousCurrency
        VB: previousCurrency
      nameWithType:
        CSharp: CurrencyChangeInfo.previousCurrency
        VB: CurrencyChangeInfo.previousCurrency
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyChangeInfo.previousCurrency
        VB: TowerDefense.Economy.CurrencyChangeInfo.previousCurrency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: previousCurrency
        path: ''
        startLine: 1494
      summary: "\nThe previous value of the currency\n"
      example: []
      syntax:
        content:
          CSharp: public readonly int previousCurrency
          VB: Public ReadOnly previousCurrency As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Economy.CurrencyChangeInfo.currentCurrency
      commentId: F:TowerDefense.Economy.CurrencyChangeInfo.currentCurrency
      language: CSharp
      name:
        CSharp: currentCurrency
        VB: currentCurrency
      nameWithType:
        CSharp: CurrencyChangeInfo.currentCurrency
        VB: CurrencyChangeInfo.currentCurrency
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyChangeInfo.currentCurrency
        VB: TowerDefense.Economy.CurrencyChangeInfo.currentCurrency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: currentCurrency
        path: ''
        startLine: 1499
      summary: "\nThe new value of the currency\n"
      example: []
      syntax:
        content:
          CSharp: public readonly int currentCurrency
          VB: Public ReadOnly currentCurrency As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Economy.CurrencyChangeInfo.difference
      commentId: F:TowerDefense.Economy.CurrencyChangeInfo.difference
      language: CSharp
      name:
        CSharp: difference
        VB: difference
      nameWithType:
        CSharp: CurrencyChangeInfo.difference
        VB: CurrencyChangeInfo.difference
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyChangeInfo.difference
        VB: TowerDefense.Economy.CurrencyChangeInfo.difference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: difference
        path: ''
        startLine: 1504
      summary: "\nThe difference in amount\n"
      example: []
      syntax:
        content:
          CSharp: public readonly int difference
          VB: Public ReadOnly difference As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Economy.CurrencyChangeInfo.absoluteDifference
      commentId: F:TowerDefense.Economy.CurrencyChangeInfo.absoluteDifference
      language: CSharp
      name:
        CSharp: absoluteDifference
        VB: absoluteDifference
      nameWithType:
        CSharp: CurrencyChangeInfo.absoluteDifference
        VB: CurrencyChangeInfo.absoluteDifference
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyChangeInfo.absoluteDifference
        VB: TowerDefense.Economy.CurrencyChangeInfo.absoluteDifference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: absoluteDifference
        path: ''
        startLine: 1509
      summary: "\nGets the absolute difference in amount\n"
      example: []
      syntax:
        content:
          CSharp: public readonly int absoluteDifference
          VB: Public ReadOnly absoluteDifference As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Economy.CurrencyChangeInfo.#ctor(System.Int32,System.Int32)
      commentId: M:TowerDefense.Economy.CurrencyChangeInfo.#ctor(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: CurrencyChangeInfo(Int32, Int32)
        VB: CurrencyChangeInfo(Int32, Int32)
      nameWithType:
        CSharp: CurrencyChangeInfo.CurrencyChangeInfo(Int32, Int32)
        VB: CurrencyChangeInfo.CurrencyChangeInfo(Int32, Int32)
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyChangeInfo.CurrencyChangeInfo(System.Int32, System.Int32)
        VB: TowerDefense.Economy.CurrencyChangeInfo.CurrencyChangeInfo(System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: .ctor
        path: ''
        startLine: 1520
      summary: "\nInitializes the CurrencyChangeInfo\n"
      example: []
      syntax:
        content:
          CSharp: public CurrencyChangeInfo(int previous, int current)
          VB: Public Sub New(previous As Integer, current As Integer)
        parameters:
        - id: previous
          type: System.Int32
          description: "\nThe previous value of the currency\n"
        - id: current
          type: System.Int32
          description: "\nThe current value of the currency\n"
      overload: TowerDefense.Economy.CurrencyChangeInfo.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Economy.CurrencyGainer
    commentId: T:TowerDefense.Economy.CurrencyGainer
    language: CSharp
    name:
      CSharp: CurrencyGainer
      VB: CurrencyGainer
    nameWithType:
      CSharp: CurrencyGainer
      VB: CurrencyGainer
    qualifiedName:
      CSharp: TowerDefense.Economy.CurrencyGainer
      VB: TowerDefense.Economy.CurrencyGainer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Economy
    source:
      id: CurrencyGainer
      path: ''
      startLine: 1539
    summary: "\nA class for currency gain\n"
    example: []
    syntax:
      content:
        CSharp: public class CurrencyGainer
        VB: Public Class CurrencyGainer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Economy.CurrencyGainer.constantCurrencyAddition
      commentId: F:TowerDefense.Economy.CurrencyGainer.constantCurrencyAddition
      language: CSharp
      name:
        CSharp: constantCurrencyAddition
        VB: constantCurrencyAddition
      nameWithType:
        CSharp: CurrencyGainer.constantCurrencyAddition
        VB: CurrencyGainer.constantCurrencyAddition
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.constantCurrencyAddition
        VB: TowerDefense.Economy.CurrencyGainer.constantCurrencyAddition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: constantCurrencyAddition
        path: ''
        startLine: 1545
      summary: "\nThe amount gained with the gain rate\n"
      example: []
      syntax:
        content:
          CSharp: public int constantCurrencyAddition
          VB: Public constantCurrencyAddition As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.constantCurrencyGainRate
      commentId: F:TowerDefense.Economy.CurrencyGainer.constantCurrencyGainRate
      language: CSharp
      name:
        CSharp: constantCurrencyGainRate
        VB: constantCurrencyGainRate
      nameWithType:
        CSharp: CurrencyGainer.constantCurrencyGainRate
        VB: CurrencyGainer.constantCurrencyGainRate
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.constantCurrencyGainRate
        VB: TowerDefense.Economy.CurrencyGainer.constantCurrencyGainRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: constantCurrencyGainRate
        path: ''
        startLine: 1551
      summary: "\nThe speed of currency gain in units-per-second\n"
      example: []
      syntax:
        content:
          CSharp: public float constantCurrencyGainRate
          VB: Public constantCurrencyGainRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.currencyChanged
      commentId: E:TowerDefense.Economy.CurrencyGainer.currencyChanged
      language: CSharp
      name:
        CSharp: currencyChanged
        VB: currencyChanged
      nameWithType:
        CSharp: CurrencyGainer.currencyChanged
        VB: CurrencyGainer.currencyChanged
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.currencyChanged
        VB: TowerDefense.Economy.CurrencyGainer.currencyChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: currencyChanged
        path: ''
        startLine: 1556
      summary: "\nEvent for when the currency is changed\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<CurrencyChangeInfo> currencyChanged
          VB: Public Event currencyChanged As Action(Of CurrencyChangeInfo)
        return:
          type: Action{TowerDefense.Economy.CurrencyChangeInfo}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.m_GainTimer
      commentId: F:TowerDefense.Economy.CurrencyGainer.m_GainTimer
      language: CSharp
      name:
        CSharp: m_GainTimer
        VB: m_GainTimer
      nameWithType:
        CSharp: CurrencyGainer.m_GainTimer
        VB: CurrencyGainer.m_GainTimer
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.m_GainTimer
        VB: TowerDefense.Economy.CurrencyGainer.m_GainTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: m_GainTimer
        path: ''
        startLine: 1561
      summary: "\nThe timer for constant currency gain\n"
      example: []
      syntax:
        content:
          CSharp: protected RepeatingTimer m_GainTimer
          VB: Protected m_GainTimer As RepeatingTimer
        return:
          type: RepeatingTimer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Economy.CurrencyGainer.currency
      commentId: P:TowerDefense.Economy.CurrencyGainer.currency
      language: CSharp
      name:
        CSharp: currency
        VB: currency
      nameWithType:
        CSharp: CurrencyGainer.currency
        VB: CurrencyGainer.currency
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.currency
        VB: TowerDefense.Economy.CurrencyGainer.currency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: currency
        path: ''
        startLine: 1566
      summary: "\nGets the currency that this CurrencyGainer modifes\n"
      example: []
      syntax:
        content:
          CSharp: public Currency currency { get; }
          VB: Public ReadOnly Property currency As Currency
        parameters: []
        return:
          type: Currency
      overload: TowerDefense.Economy.CurrencyGainer.currency*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Economy.CurrencyGainer.Initialize(Currency,System.Int32,System.Single)
      commentId: M:TowerDefense.Economy.CurrencyGainer.Initialize(Currency,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: Initialize(Currency, Int32, Single)
        VB: Initialize(Currency, Int32, Single)
      nameWithType:
        CSharp: CurrencyGainer.Initialize(Currency, Int32, Single)
        VB: CurrencyGainer.Initialize(Currency, Int32, Single)
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.Initialize(Currency, System.Int32, System.Single)
        VB: TowerDefense.Economy.CurrencyGainer.Initialize(Currency, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: Initialize
        path: ''
        startLine: 1580
      summary: "\nInitializes the currency gainer with new data\n"
      example: []
      syntax:
        content:
          CSharp: public void Initialize(Currency currencyController, int gainAddition, float gainRate)
          VB: Public Sub Initialize(currencyController As Currency, gainAddition As Integer, gainRate As Single)
        parameters:
        - id: currencyController
          type: Currency
          description: "\nThe currency controller to modify with this currency gainer\n"
        - id: gainAddition
          type: System.Int32
          description: "\nThe currency gained with each addition\n"
        - id: gainRate
          type: System.Single
          description: "\nThe rate of gain\n"
      overload: TowerDefense.Economy.CurrencyGainer.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.Initialize(Currency)
      commentId: M:TowerDefense.Economy.CurrencyGainer.Initialize(Currency)
      language: CSharp
      name:
        CSharp: Initialize(Currency)
        VB: Initialize(Currency)
      nameWithType:
        CSharp: CurrencyGainer.Initialize(Currency)
        VB: CurrencyGainer.Initialize(Currency)
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.Initialize(Currency)
        VB: TowerDefense.Economy.CurrencyGainer.Initialize(Currency)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: Initialize
        path: ''
        startLine: 1590
      summary: "\nInitializes the currency gainer\n"
      example: []
      syntax:
        content:
          CSharp: public void Initialize(Currency currencyController)
          VB: Public Sub Initialize(currencyController As Currency)
        parameters:
        - id: currencyController
          type: Currency
      overload: TowerDefense.Economy.CurrencyGainer.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.Tick(System.Single)
      commentId: M:TowerDefense.Economy.CurrencyGainer.Tick(System.Single)
      language: CSharp
      name:
        CSharp: Tick(Single)
        VB: Tick(Single)
      nameWithType:
        CSharp: CurrencyGainer.Tick(Single)
        VB: CurrencyGainer.Tick(Single)
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.Tick(System.Single)
        VB: TowerDefense.Economy.CurrencyGainer.Tick(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: Tick
        path: ''
        startLine: 1602
      summary: "\nFor updating the gain timer\n"
      example: []
      syntax:
        content:
          CSharp: public void Tick(float deltaTime)
          VB: Public Sub Tick(deltaTime As Single)
        parameters:
        - id: deltaTime
          type: System.Single
          description: "\nThe change in time to update the timer\n"
      overload: TowerDefense.Economy.CurrencyGainer.Tick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.UpdateGainRate(System.Single)
      commentId: M:TowerDefense.Economy.CurrencyGainer.UpdateGainRate(System.Single)
      language: CSharp
      name:
        CSharp: UpdateGainRate(Single)
        VB: UpdateGainRate(Single)
      nameWithType:
        CSharp: CurrencyGainer.UpdateGainRate(Single)
        VB: CurrencyGainer.UpdateGainRate(Single)
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.UpdateGainRate(System.Single)
        VB: TowerDefense.Economy.CurrencyGainer.UpdateGainRate(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: UpdateGainRate
        path: ''
        startLine: 1617
      summary: "\nSets the currency gain rate and activates the timer\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateGainRate(float currencyGainRate)
          VB: Public Sub UpdateGainRate(currencyGainRate As Single)
        parameters:
        - id: currencyGainRate
          type: System.Single
          description: "\nThe amount to set the constant gain rate to\n"
      overload: TowerDefense.Economy.CurrencyGainer.UpdateGainRate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.CurrencyGainer.ConstantGain
      commentId: M:TowerDefense.Economy.CurrencyGainer.ConstantGain
      language: CSharp
      name:
        CSharp: ConstantGain()
        VB: ConstantGain()
      nameWithType:
        CSharp: CurrencyGainer.ConstantGain()
        VB: CurrencyGainer.ConstantGain()
      qualifiedName:
        CSharp: TowerDefense.Economy.CurrencyGainer.ConstantGain()
        VB: TowerDefense.Economy.CurrencyGainer.ConstantGain()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: ConstantGain
        path: ''
        startLine: 1637
      summary: "\nIncrease the currency by m_ConstantCurrencyAddition\n"
      example: []
      syntax:
        content:
          CSharp: protected void ConstantGain()
          VB: Protected Sub ConstantGain
      overload: TowerDefense.Economy.CurrencyGainer.ConstantGain*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.Economy.LootDrop
    commentId: T:TowerDefense.Economy.LootDrop
    language: CSharp
    name:
      CSharp: LootDrop
      VB: LootDrop
    nameWithType:
      CSharp: LootDrop
      VB: LootDrop
    qualifiedName:
      CSharp: TowerDefense.Economy.LootDrop
      VB: TowerDefense.Economy.LootDrop
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Economy
    source:
      id: LootDrop
      path: ''
      startLine: 1659
    summary: "\nA class that adds money to the currency when the attached DamagableBehaviour dies\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LootDrop : MonoBehaviour'
        VB: >-
          Public Class LootDrop

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Economy.LootDrop.lootDropped
      commentId: F:TowerDefense.Economy.LootDrop.lootDropped
      language: CSharp
      name:
        CSharp: lootDropped
        VB: lootDropped
      nameWithType:
        CSharp: LootDrop.lootDropped
        VB: LootDrop.lootDropped
      qualifiedName:
        CSharp: TowerDefense.Economy.LootDrop.lootDropped
        VB: TowerDefense.Economy.LootDrop.lootDropped
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: lootDropped
        path: ''
        startLine: 1665
      summary: "\nThe amount of loot/currency dropped when object &quot;dies&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public int lootDropped
          VB: Public lootDropped As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Economy.LootDrop.m_DamageableBehaviour
      commentId: F:TowerDefense.Economy.LootDrop.m_DamageableBehaviour
      language: CSharp
      name:
        CSharp: m_DamageableBehaviour
        VB: m_DamageableBehaviour
      nameWithType:
        CSharp: LootDrop.m_DamageableBehaviour
        VB: LootDrop.m_DamageableBehaviour
      qualifiedName:
        CSharp: TowerDefense.Economy.LootDrop.m_DamageableBehaviour
        VB: TowerDefense.Economy.LootDrop.m_DamageableBehaviour
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: m_DamageableBehaviour
        path: ''
        startLine: 1670
      summary: "\nThe attached DamagableBehaviour\n"
      example: []
      syntax:
        content:
          CSharp: protected DamageableBehaviour m_DamageableBehaviour
          VB: Protected m_DamageableBehaviour As DamageableBehaviour
        return:
          type: DamageableBehaviour
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Economy.LootDrop.OnEnable
      commentId: M:TowerDefense.Economy.LootDrop.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: LootDrop.OnEnable()
        VB: LootDrop.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Economy.LootDrop.OnEnable()
        VB: TowerDefense.Economy.LootDrop.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: OnEnable
        path: ''
        startLine: 1675
      summary: "\nCaches attached DamageableBehaviour\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: TowerDefense.Economy.LootDrop.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Economy.LootDrop.OnDisable
      commentId: M:TowerDefense.Economy.LootDrop.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: LootDrop.OnDisable()
        VB: LootDrop.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.Economy.LootDrop.OnDisable()
        VB: TowerDefense.Economy.LootDrop.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: OnDisable
        path: ''
        startLine: 1687
      summary: "\nUnsubscribed from the <xref href=\"TowerDefense.Economy.LootDrop.m_DamageableBehaviour\" data-throw-if-not-resolved=\"false\"></xref> died event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: TowerDefense.Economy.LootDrop.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Economy.LootDrop.m_DamageableBehaviour: 
    - id: TowerDefense.Economy.LootDrop.OnDeath(HealthChangeInfo)
      commentId: M:TowerDefense.Economy.LootDrop.OnDeath(HealthChangeInfo)
      language: CSharp
      name:
        CSharp: OnDeath(HealthChangeInfo)
        VB: OnDeath(HealthChangeInfo)
      nameWithType:
        CSharp: LootDrop.OnDeath(HealthChangeInfo)
        VB: LootDrop.OnDeath(HealthChangeInfo)
      qualifiedName:
        CSharp: TowerDefense.Economy.LootDrop.OnDeath(HealthChangeInfo)
        VB: TowerDefense.Economy.LootDrop.OnDeath(HealthChangeInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Economy
      source:
        id: OnDeath
        path: ''
        startLine: 1696
      summary: "\nThe callback for when the attached object &quot;dies&quot;.\nAdd <xref href=\"TowerDefense.Economy.LootDrop.lootDropped\" data-throw-if-not-resolved=\"false\"></xref> to current currency\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDeath(HealthChangeInfo info)
          VB: Protected Overridable Sub OnDeath(info As HealthChangeInfo)
        parameters:
        - id: info
          type: HealthChangeInfo
      overload: TowerDefense.Economy.LootDrop.OnDeath*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Economy.LootDrop.lootDropped: 
- id: TowerDefense.Effects
  commentId: N:TowerDefense.Effects
  language: CSharp
  name:
    CSharp: TowerDefense.Effects
    VB: TowerDefense.Effects
  nameWithType:
    CSharp: TowerDefense.Effects
    VB: TowerDefense.Effects
  qualifiedName:
    CSharp: TowerDefense.Effects
    VB: TowerDefense.Effects
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Effects.MobileParticleSelector
    commentId: T:TowerDefense.Effects.MobileParticleSelector
    language: CSharp
    name:
      CSharp: MobileParticleSelector
      VB: MobileParticleSelector
    nameWithType:
      CSharp: MobileParticleSelector
      VB: MobileParticleSelector
    qualifiedName:
      CSharp: TowerDefense.Effects.MobileParticleSelector
      VB: TowerDefense.Effects.MobileParticleSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Effects
    source:
      id: MobileParticleSelector
      path: ''
      startLine: 1723
    summary: "\nSimple class to switch between two separate game objects depending on whether we&apos;re\non a mobile platform or not\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MobileParticleSelector : MonoBehaviour'
        VB: >-
          Public Class MobileParticleSelector

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Effects.MobileParticleSelector.defaultParticles
      commentId: F:TowerDefense.Effects.MobileParticleSelector.defaultParticles
      language: CSharp
      name:
        CSharp: defaultParticles
        VB: defaultParticles
      nameWithType:
        CSharp: MobileParticleSelector.defaultParticles
        VB: MobileParticleSelector.defaultParticles
      qualifiedName:
        CSharp: TowerDefense.Effects.MobileParticleSelector.defaultParticles
        VB: TowerDefense.Effects.MobileParticleSelector.defaultParticles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: defaultParticles
        path: ''
        startLine: 1728
      summary: "\nSystem to use on non-mobile platforms\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem defaultParticles
          VB: Public defaultParticles As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Effects.MobileParticleSelector.mobileParticles
      commentId: F:TowerDefense.Effects.MobileParticleSelector.mobileParticles
      language: CSharp
      name:
        CSharp: mobileParticles
        VB: mobileParticles
      nameWithType:
        CSharp: MobileParticleSelector.mobileParticles
        VB: MobileParticleSelector.mobileParticles
      qualifiedName:
        CSharp: TowerDefense.Effects.MobileParticleSelector.mobileParticles
        VB: TowerDefense.Effects.MobileParticleSelector.mobileParticles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: mobileParticles
        path: ''
        startLine: 1732
      summary: "\nSystem to use on mobile platforms\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem mobileParticles
          VB: Public mobileParticles As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Effects.MobileParticleSelector.Awake
      commentId: M:TowerDefense.Effects.MobileParticleSelector.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: MobileParticleSelector.Awake()
        VB: MobileParticleSelector.Awake()
      qualifiedName:
        CSharp: TowerDefense.Effects.MobileParticleSelector.Awake()
        VB: TowerDefense.Effects.MobileParticleSelector.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: Awake
        path: ''
        startLine: 1735
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Effects.MobileParticleSelector.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.Effects.ProjectileEffect
    commentId: T:TowerDefense.Effects.ProjectileEffect
    language: CSharp
    name:
      CSharp: ProjectileEffect
      VB: ProjectileEffect
    nameWithType:
      CSharp: ProjectileEffect
      VB: ProjectileEffect
    qualifiedName:
      CSharp: TowerDefense.Effects.ProjectileEffect
      VB: TowerDefense.Effects.ProjectileEffect
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Effects
    source:
      id: ProjectileEffect
      path: ''
      startLine: 1765
    summary: "\nClass for spawning and managing effects on this projectile. Used for effects that should persist\na little longer after a projectile is destroyed/repooled. Creates the effect on enable, moves it to \nfollow us every frame while we&apos;re active.\n\nOn disable, it&apos;ll try and find a SelfDestroyTimer on the effect to trigger its destruction, otherwise\nrepools it immediately.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ProjectileEffect : MonoBehaviour'
        VB: >-
          Public Class ProjectileEffect

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Effects.ProjectileEffect.effectPrefab
      commentId: F:TowerDefense.Effects.ProjectileEffect.effectPrefab
      language: CSharp
      name:
        CSharp: effectPrefab
        VB: effectPrefab
      nameWithType:
        CSharp: ProjectileEffect.effectPrefab
        VB: ProjectileEffect.effectPrefab
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.effectPrefab
        VB: TowerDefense.Effects.ProjectileEffect.effectPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: effectPrefab
        path: ''
        startLine: 1771
      summary: "\nPreafb that gets spawned when this projectile fires\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject effectPrefab
          VB: Public effectPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Effects.ProjectileEffect.followTransform
      commentId: F:TowerDefense.Effects.ProjectileEffect.followTransform
      language: CSharp
      name:
        CSharp: followTransform
        VB: followTransform
      nameWithType:
        CSharp: ProjectileEffect.followTransform
        VB: ProjectileEffect.followTransform
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.followTransform
        VB: TowerDefense.Effects.ProjectileEffect.followTransform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: followTransform
        path: ''
        startLine: 1776
      summary: "\nTransform the effect follows\n"
      example: []
      syntax:
        content:
          CSharp: public Transform followTransform
          VB: Public followTransform As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Effects.ProjectileEffect.Awake
      commentId: M:TowerDefense.Effects.ProjectileEffect.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: ProjectileEffect.Awake()
        VB: ProjectileEffect.Awake()
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.Awake()
        VB: TowerDefense.Effects.ProjectileEffect.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: Awake
        path: ''
        startLine: 1801
      summary: "\nRegister projectile fire events\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Effects.ProjectileEffect.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Effects.ProjectileEffect.OnDestroy
      commentId: M:TowerDefense.Effects.ProjectileEffect.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: ProjectileEffect.OnDestroy()
        VB: ProjectileEffect.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.OnDestroy()
        VB: TowerDefense.Effects.ProjectileEffect.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: OnDestroy
        path: ''
        startLine: 1814
      summary: "\nUnregister delegates\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.Effects.ProjectileEffect.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Effects.ProjectileEffect.OnFired
      commentId: M:TowerDefense.Effects.ProjectileEffect.OnFired
      language: CSharp
      name:
        CSharp: OnFired()
        VB: OnFired()
      nameWithType:
        CSharp: ProjectileEffect.OnFired()
        VB: ProjectileEffect.OnFired()
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.OnFired()
        VB: TowerDefense.Effects.ProjectileEffect.OnFired()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: OnFired
        path: ''
        startLine: 1822
      summary: "\nSpawn our effect\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnFired()
          VB: Protected Overridable Sub OnFired
      overload: TowerDefense.Effects.ProjectileEffect.OnFired*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Effects.ProjectileEffect.Update
      commentId: M:TowerDefense.Effects.ProjectileEffect.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: ProjectileEffect.Update()
        VB: ProjectileEffect.Update()
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.Update()
        VB: TowerDefense.Effects.ProjectileEffect.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: Update
        path: ''
        startLine: 1848
      summary: "\nMake effect follow us\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Effects.ProjectileEffect.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Effects.ProjectileEffect.OnDisable
      commentId: M:TowerDefense.Effects.ProjectileEffect.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: ProjectileEffect.OnDisable()
        VB: ProjectileEffect.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.Effects.ProjectileEffect.OnDisable()
        VB: TowerDefense.Effects.ProjectileEffect.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Effects
      source:
        id: OnDisable
        path: ''
        startLine: 1861
      summary: "\nDestroy and start destruction of effect\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: TowerDefense.Effects.ProjectileEffect.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: TowerDefense.Game
  commentId: N:TowerDefense.Game
  language: CSharp
  name:
    CSharp: TowerDefense.Game
    VB: TowerDefense.Game
  nameWithType:
    CSharp: TowerDefense.Game
    VB: TowerDefense.Game
  qualifiedName:
    CSharp: TowerDefense.Game
    VB: TowerDefense.Game
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Game.GameDataStore
    commentId: T:TowerDefense.Game.GameDataStore
    language: CSharp
    name:
      CSharp: GameDataStore
      VB: GameDataStore
    nameWithType:
      CSharp: GameDataStore
      VB: GameDataStore
    qualifiedName:
      CSharp: TowerDefense.Game.GameDataStore
      VB: TowerDefense.Game.GameDataStore
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Game
    source:
      id: GameDataStore
      path: ''
      startLine: 1898
    summary: "\nThe data store for TD\n"
    example: []
    syntax:
      content:
        CSharp: 'public sealed class GameDataStore : GameDataStoreBase'
        VB: >-
          Public NotInheritable Class GameDataStore

              Inherits GameDataStoreBase
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - sealed
      - class
      VB:
      - Public
      - NotInheritable
      - Class
    items:
    - id: TowerDefense.Game.GameDataStore.completedLevels
      commentId: F:TowerDefense.Game.GameDataStore.completedLevels
      language: CSharp
      name:
        CSharp: completedLevels
        VB: completedLevels
      nameWithType:
        CSharp: GameDataStore.completedLevels
        VB: GameDataStore.completedLevels
      qualifiedName:
        CSharp: TowerDefense.Game.GameDataStore.completedLevels
        VB: TowerDefense.Game.GameDataStore.completedLevels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: completedLevels
        path: ''
        startLine: 1903
      summary: "\nA list of level IDs for completed levels\n"
      example: []
      syntax:
        content:
          CSharp: public List<LevelSaveData> completedLevels
          VB: Public completedLevels As List(Of LevelSaveData)
        return:
          type: List{TowerDefense.Game.LevelSaveData}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameDataStore.PreSave
      commentId: M:TowerDefense.Game.GameDataStore.PreSave
      language: CSharp
      name:
        CSharp: PreSave()
        VB: PreSave()
      nameWithType:
        CSharp: GameDataStore.PreSave()
        VB: GameDataStore.PreSave()
      qualifiedName:
        CSharp: TowerDefense.Game.GameDataStore.PreSave()
        VB: TowerDefense.Game.GameDataStore.PreSave()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: PreSave
        path: ''
        startLine: 1908
      summary: "\nOutputs to debug\n"
      example: []
      syntax:
        content:
          CSharp: public override void PreSave()
          VB: Public Overrides Sub PreSave
      overload: TowerDefense.Game.GameDataStore.PreSave*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Game.GameDataStore.PostLoad
      commentId: M:TowerDefense.Game.GameDataStore.PostLoad
      language: CSharp
      name:
        CSharp: PostLoad()
        VB: PostLoad()
      nameWithType:
        CSharp: GameDataStore.PostLoad()
        VB: GameDataStore.PostLoad()
      qualifiedName:
        CSharp: TowerDefense.Game.GameDataStore.PostLoad()
        VB: TowerDefense.Game.GameDataStore.PostLoad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: PostLoad
        path: ''
        startLine: 1916
      summary: "\nOutputs to debug\n"
      example: []
      syntax:
        content:
          CSharp: public override void PostLoad()
          VB: Public Overrides Sub PostLoad
      overload: TowerDefense.Game.GameDataStore.PostLoad*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Game.GameDataStore.CompleteLevel(System.String,System.Int32)
      commentId: M:TowerDefense.Game.GameDataStore.CompleteLevel(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: CompleteLevel(String, Int32)
        VB: CompleteLevel(String, Int32)
      nameWithType:
        CSharp: GameDataStore.CompleteLevel(String, Int32)
        VB: GameDataStore.CompleteLevel(String, Int32)
      qualifiedName:
        CSharp: TowerDefense.Game.GameDataStore.CompleteLevel(System.String, System.Int32)
        VB: TowerDefense.Game.GameDataStore.CompleteLevel(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: CompleteLevel
        path: ''
        startLine: 1926
      summary: "\nMarks a level complete\n"
      example: []
      syntax:
        content:
          CSharp: public void CompleteLevel(string levelId, int starsEarned)
          VB: Public Sub CompleteLevel(levelId As String, starsEarned As Integer)
        parameters:
        - id: levelId
          type: System.String
          description: The levelId to mark as complete
        - id: starsEarned
          type: System.Int32
          description: Stars earned
      overload: TowerDefense.Game.GameDataStore.CompleteLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameDataStore.IsLevelCompleted(System.String)
      commentId: M:TowerDefense.Game.GameDataStore.IsLevelCompleted(System.String)
      language: CSharp
      name:
        CSharp: IsLevelCompleted(String)
        VB: IsLevelCompleted(String)
      nameWithType:
        CSharp: GameDataStore.IsLevelCompleted(String)
        VB: GameDataStore.IsLevelCompleted(String)
      qualifiedName:
        CSharp: TowerDefense.Game.GameDataStore.IsLevelCompleted(System.String)
        VB: TowerDefense.Game.GameDataStore.IsLevelCompleted(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: IsLevelCompleted
        path: ''
        startLine: 1944
      summary: "\nDetermines if a specific level is completed\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsLevelCompleted(string levelId)
          VB: Public Function IsLevelCompleted(levelId As String) As Boolean
        parameters:
        - id: levelId
          type: System.String
          description: The level ID to check
        return:
          type: System.Boolean
          description: true if the level is completed
      overload: TowerDefense.Game.GameDataStore.IsLevelCompleted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel(System.String)
      commentId: M:TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel(System.String)
      language: CSharp
      name:
        CSharp: GetNumberOfStarForLevel(String)
        VB: GetNumberOfStarForLevel(String)
      nameWithType:
        CSharp: GameDataStore.GetNumberOfStarForLevel(String)
        VB: GameDataStore.GetNumberOfStarForLevel(String)
      qualifiedName:
        CSharp: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel(System.String)
        VB: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: GetNumberOfStarForLevel
        path: ''
        startLine: 1959
      summary: "\nRetrieves the star count for a given level\n"
      example: []
      syntax:
        content:
          CSharp: public int GetNumberOfStarForLevel(string levelId)
          VB: Public Function GetNumberOfStarForLevel(levelId As String) As Integer
        parameters:
        - id: levelId
          type: System.String
        return:
          type: System.Int32
      overload: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Game.GameManager
    commentId: T:TowerDefense.Game.GameManager
    language: CSharp
    name:
      CSharp: GameManager
      VB: GameManager
    nameWithType:
      CSharp: GameManager
      VB: GameManager
    qualifiedName:
      CSharp: TowerDefense.Game.GameManager
      VB: TowerDefense.Game.GameManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Game
    source:
      id: GameManager
      path: ''
      startLine: 1983
    summary: "\nGame Manager - a persistent single that handles persistence, and level lists, etc.\nThis should be initialized when the game starts.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameManager : GameManagerBase<GameManager, GameDataStore>'
        VB: >-
          Public Class GameManager

              Inherits GameManagerBase(Of GameManager, GameDataStore)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Game.GameManager.levelList
      commentId: F:TowerDefense.Game.GameManager.levelList
      language: CSharp
      name:
        CSharp: levelList
        VB: levelList
      nameWithType:
        CSharp: GameManager.levelList
        VB: GameManager.levelList
      qualifiedName:
        CSharp: TowerDefense.Game.GameManager.levelList
        VB: TowerDefense.Game.GameManager.levelList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: levelList
        path: ''
        startLine: 1988
      summary: "\nScriptable object for list of levels\n"
      example: []
      syntax:
        content:
          CSharp: public LevelList levelList
          VB: Public levelList As LevelList
        return:
          type: LevelList
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameManager.Awake
      commentId: M:TowerDefense.Game.GameManager.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GameManager.Awake()
        VB: GameManager.Awake()
      qualifiedName:
        CSharp: TowerDefense.Game.GameManager.Awake()
        VB: TowerDefense.Game.GameManager.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: Awake
        path: ''
        startLine: 1993
      summary: "\nSet sleep timeout to never sleep\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: TowerDefense.Game.GameManager.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Game.GameManager.CompleteLevel(System.String,System.Int32)
      commentId: M:TowerDefense.Game.GameManager.CompleteLevel(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: CompleteLevel(String, Int32)
        VB: CompleteLevel(String, Int32)
      nameWithType:
        CSharp: GameManager.CompleteLevel(String, Int32)
        VB: GameManager.CompleteLevel(String, Int32)
      qualifiedName:
        CSharp: TowerDefense.Game.GameManager.CompleteLevel(System.String, System.Int32)
        VB: TowerDefense.Game.GameManager.CompleteLevel(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: CompleteLevel
        path: ''
        startLine: 2004
      summary: "\nMethod used for completing the level\n"
      example: []
      syntax:
        content:
          CSharp: public void CompleteLevel(string levelId, int starsEarned)
          VB: Public Sub CompleteLevel(levelId As String, starsEarned As Integer)
        parameters:
        - id: levelId
          type: System.String
          description: The levelId to mark as complete
        - id: starsEarned
          type: System.Int32
          description: ''
      overload: TowerDefense.Game.GameManager.CompleteLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameManager.GetLevelForCurrentScene
      commentId: M:TowerDefense.Game.GameManager.GetLevelForCurrentScene
      language: CSharp
      name:
        CSharp: GetLevelForCurrentScene()
        VB: GetLevelForCurrentScene()
      nameWithType:
        CSharp: GameManager.GetLevelForCurrentScene()
        VB: GameManager.GetLevelForCurrentScene()
      qualifiedName:
        CSharp: TowerDefense.Game.GameManager.GetLevelForCurrentScene()
        VB: TowerDefense.Game.GameManager.GetLevelForCurrentScene()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: GetLevelForCurrentScene
        path: ''
        startLine: 2019
      summary: "\nGets the id for the current level\n"
      example: []
      syntax:
        content:
          CSharp: public LevelItem GetLevelForCurrentScene()
          VB: Public Function GetLevelForCurrentScene As LevelItem
        return:
          type: LevelItem
      overload: TowerDefense.Game.GameManager.GetLevelForCurrentScene*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameManager.IsLevelCompleted(System.String)
      commentId: M:TowerDefense.Game.GameManager.IsLevelCompleted(System.String)
      language: CSharp
      name:
        CSharp: IsLevelCompleted(String)
        VB: IsLevelCompleted(String)
      nameWithType:
        CSharp: GameManager.IsLevelCompleted(String)
        VB: GameManager.IsLevelCompleted(String)
      qualifiedName:
        CSharp: TowerDefense.Game.GameManager.IsLevelCompleted(System.String)
        VB: TowerDefense.Game.GameManager.IsLevelCompleted(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: IsLevelCompleted
        path: ''
        startLine: 2031
      summary: "\nDetermines if a specific level is completed\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsLevelCompleted(string levelId)
          VB: Public Function IsLevelCompleted(levelId As String) As Boolean
        parameters:
        - id: levelId
          type: System.String
          description: The level ID to check
        return:
          type: System.Boolean
          description: true if the level is completed
      overload: TowerDefense.Game.GameManager.IsLevelCompleted*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.GameManager.GetStarsForLevel(System.String)
      commentId: M:TowerDefense.Game.GameManager.GetStarsForLevel(System.String)
      language: CSharp
      name:
        CSharp: GetStarsForLevel(String)
        VB: GetStarsForLevel(String)
      nameWithType:
        CSharp: GameManager.GetStarsForLevel(String)
        VB: GameManager.GetStarsForLevel(String)
      qualifiedName:
        CSharp: TowerDefense.Game.GameManager.GetStarsForLevel(System.String)
        VB: TowerDefense.Game.GameManager.GetStarsForLevel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: GetStarsForLevel
        path: ''
        startLine: 2047
      summary: "\nGets the stars earned on a given level\n"
      example: []
      syntax:
        content:
          CSharp: public int GetStarsForLevel(string levelId)
          VB: Public Function GetStarsForLevel(levelId As String) As Integer
        parameters:
        - id: levelId
          type: System.String
          description: ''
        return:
          type: System.Int32
          description: ''
      overload: TowerDefense.Game.GameManager.GetStarsForLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Game.LevelSaveData
    commentId: T:TowerDefense.Game.LevelSaveData
    language: CSharp
    name:
      CSharp: LevelSaveData
      VB: LevelSaveData
    nameWithType:
      CSharp: LevelSaveData
      VB: LevelSaveData
    qualifiedName:
      CSharp: TowerDefense.Game.LevelSaveData
      VB: TowerDefense.Game.LevelSaveData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Game
    source:
      id: LevelSaveData
      path: ''
      startLine: 2066
    summary: "\nA calss to save level data\n"
    example: []
    syntax:
      content:
        CSharp: public class LevelSaveData
        VB: Public Class LevelSaveData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Game.LevelSaveData.id
      commentId: F:TowerDefense.Game.LevelSaveData.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: LevelSaveData.id
        VB: LevelSaveData.id
      qualifiedName:
        CSharp: TowerDefense.Game.LevelSaveData.id
        VB: TowerDefense.Game.LevelSaveData.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: id
        path: ''
        startLine: 2069
      syntax:
        content:
          CSharp: public string id
          VB: Public id As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.LevelSaveData.numberOfStars
      commentId: F:TowerDefense.Game.LevelSaveData.numberOfStars
      language: CSharp
      name:
        CSharp: numberOfStars
        VB: numberOfStars
      nameWithType:
        CSharp: LevelSaveData.numberOfStars
        VB: LevelSaveData.numberOfStars
      qualifiedName:
        CSharp: TowerDefense.Game.LevelSaveData.numberOfStars
        VB: TowerDefense.Game.LevelSaveData.numberOfStars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: numberOfStars
        path: ''
        startLine: 2070
      syntax:
        content:
          CSharp: public int numberOfStars
          VB: Public numberOfStars As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Game.LevelSaveData.#ctor(System.String,System.Int32)
      commentId: M:TowerDefense.Game.LevelSaveData.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: LevelSaveData(String, Int32)
        VB: LevelSaveData(String, Int32)
      nameWithType:
        CSharp: LevelSaveData.LevelSaveData(String, Int32)
        VB: LevelSaveData.LevelSaveData(String, Int32)
      qualifiedName:
        CSharp: TowerDefense.Game.LevelSaveData.LevelSaveData(System.String, System.Int32)
        VB: TowerDefense.Game.LevelSaveData.LevelSaveData(System.String, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Game
      source:
        id: .ctor
        path: ''
        startLine: 2072
      syntax:
        content:
          CSharp: public LevelSaveData(string levelId, int numberOfStarsEarned)
          VB: Public Sub New(levelId As String, numberOfStarsEarned As Integer)
        parameters:
        - id: levelId
          type: System.String
        - id: numberOfStarsEarned
          type: System.Int32
      overload: TowerDefense.Game.LevelSaveData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TowerDefense.Input
  commentId: N:TowerDefense.Input
  language: CSharp
  name:
    CSharp: TowerDefense.Input
    VB: TowerDefense.Input
  nameWithType:
    CSharp: TowerDefense.Input
    VB: TowerDefense.Input
  qualifiedName:
    CSharp: TowerDefense.Input
    VB: TowerDefense.Input
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput
    commentId: T:TowerDefense.Input.TowerDefenseKeyboardMouseInput
    language: CSharp
    name:
      CSharp: TowerDefenseKeyboardMouseInput
      VB: TowerDefenseKeyboardMouseInput
    nameWithType:
      CSharp: TowerDefenseKeyboardMouseInput
      VB: TowerDefenseKeyboardMouseInput
    qualifiedName:
      CSharp: TowerDefense.Input.TowerDefenseKeyboardMouseInput
      VB: TowerDefense.Input.TowerDefenseKeyboardMouseInput
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Input
    source:
      id: TowerDefenseKeyboardMouseInput
      path: ''
      startLine: 2089
    syntax:
      content:
        CSharp: 'public class TowerDefenseKeyboardMouseInput : KeyboardMouseInput'
        VB: >-
          Public Class TowerDefenseKeyboardMouseInput

              Inherits KeyboardMouseInput
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable
      commentId: M:TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: TowerDefenseKeyboardMouseInput.OnEnable()
        VB: TowerDefenseKeyboardMouseInput.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable()
        VB: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnEnable
        path: ''
        startLine: 2100
      summary: "\nRegister input events\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable
      commentId: M:TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: TowerDefenseKeyboardMouseInput.OnDisable()
        VB: TowerDefenseKeyboardMouseInput.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable()
        VB: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnDisable
        path: ''
        startLine: 2118
      summary: "\nDeregister input events\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update
      commentId: M:TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TowerDefenseKeyboardMouseInput.Update()
        VB: TowerDefenseKeyboardMouseInput.Update()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update()
        VB: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: Update
        path: ''
        startLine: 2134
      summary: "\nHandle camera panning behaviour\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: TowerDefense.Input.TowerDefenseTouchInput
    commentId: T:TowerDefense.Input.TowerDefenseTouchInput
    language: CSharp
    name:
      CSharp: TowerDefenseTouchInput
      VB: TowerDefenseTouchInput
    nameWithType:
      CSharp: TowerDefenseTouchInput
      VB: TowerDefenseTouchInput
    qualifiedName:
      CSharp: TowerDefense.Input.TowerDefenseTouchInput
      VB: TowerDefense.Input.TowerDefenseTouchInput
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Input
    source:
      id: TowerDefenseTouchInput
      path: ''
      startLine: 2255
    syntax:
      content:
        CSharp: 'public class TowerDefenseTouchInput : TouchInput'
        VB: >-
          Public Class TowerDefenseTouchInput

              Inherits TouchInput
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Input.TowerDefenseTouchInput.panAreaScreenPercentage
      commentId: F:TowerDefense.Input.TowerDefenseTouchInput.panAreaScreenPercentage
      language: CSharp
      name:
        CSharp: panAreaScreenPercentage
        VB: panAreaScreenPercentage
      nameWithType:
        CSharp: TowerDefenseTouchInput.panAreaScreenPercentage
        VB: TowerDefenseTouchInput.panAreaScreenPercentage
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.panAreaScreenPercentage
        VB: TowerDefense.Input.TowerDefenseTouchInput.panAreaScreenPercentage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: panAreaScreenPercentage
        path: ''
        startLine: 2262
      summary: "\nA percentage of the screen where panning occurs while dragging\n"
      example: []
      syntax:
        content:
          CSharp: public float panAreaScreenPercentage
          VB: Public panAreaScreenPercentage As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Input.TowerDefenseTouchInput.confirmationButtons
      commentId: F:TowerDefense.Input.TowerDefenseTouchInput.confirmationButtons
      language: CSharp
      name:
        CSharp: confirmationButtons
        VB: confirmationButtons
      nameWithType:
        CSharp: TowerDefenseTouchInput.confirmationButtons
        VB: TowerDefenseTouchInput.confirmationButtons
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.confirmationButtons
        VB: TowerDefense.Input.TowerDefenseTouchInput.confirmationButtons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: confirmationButtons
        path: ''
        startLine: 2267
      summary: "\nThe object that holds the confirmation buttons\n"
      example: []
      syntax:
        content:
          CSharp: public MovingCanvas confirmationButtons
          VB: Public confirmationButtons As MovingCanvas
        return:
          type: MovingCanvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Input.TowerDefenseTouchInput.invalidButtons
      commentId: F:TowerDefense.Input.TowerDefenseTouchInput.invalidButtons
      language: CSharp
      name:
        CSharp: invalidButtons
        VB: invalidButtons
      nameWithType:
        CSharp: TowerDefenseTouchInput.invalidButtons
        VB: TowerDefenseTouchInput.invalidButtons
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.invalidButtons
        VB: TowerDefense.Input.TowerDefenseTouchInput.invalidButtons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: invalidButtons
        path: ''
        startLine: 2272
      summary: "\nThe object that holds the invalid selection\n"
      example: []
      syntax:
        content:
          CSharp: public MovingCanvas invalidButtons
          VB: Public invalidButtons As MovingCanvas
        return:
          type: MovingCanvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation
      language: CSharp
      name:
        CSharp: OnTowerPlacementConfirmation()
        VB: OnTowerPlacementConfirmation()
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnTowerPlacementConfirmation()
        VB: TowerDefenseTouchInput.OnTowerPlacementConfirmation()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation()
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnTowerPlacementConfirmation
        path: ''
        startLine: 2292
      summary: "\nCalled by the confirm button on the UI\n"
      example: []
      syntax:
        content:
          CSharp: public void OnTowerPlacementConfirmation()
          VB: Public Sub OnTowerPlacementConfirmation
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Input.TowerDefenseTouchInput.Cancel
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.Cancel
      language: CSharp
      name:
        CSharp: Cancel()
        VB: Cancel()
      nameWithType:
        CSharp: TowerDefenseTouchInput.Cancel()
        VB: TowerDefenseTouchInput.Cancel()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.Cancel()
        VB: TowerDefense.Input.TowerDefenseTouchInput.Cancel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: Cancel
        path: ''
        startLine: 2305
      summary: "\nCalled by the close button on the UI\n"
      example: []
      syntax:
        content:
          CSharp: public void Cancel()
          VB: Public Sub Cancel
      overload: TowerDefense.Input.TowerDefenseTouchInput.Cancel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnEnable
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnEnable()
        VB: TowerDefenseTouchInput.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnEnable()
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnEnable
        path: ''
        startLine: 2315
      summary: "\nRegister input events\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnEnable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnDisable
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnDisable()
        VB: TowerDefenseTouchInput.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnDisable()
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnDisable
        path: ''
        startLine: 2340
      summary: "\nDeregister input events\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnDisable*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseTouchInput.Awake
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: TowerDefenseTouchInput.Awake()
        VB: TowerDefenseTouchInput.Awake()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.Awake()
        VB: TowerDefense.Input.TowerDefenseTouchInput.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: Awake
        path: ''
        startLine: 2367
      summary: "\nHide UI \n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Input.TowerDefenseTouchInput.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Input.TowerDefenseTouchInput.Update
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TowerDefenseTouchInput.Update()
        VB: TowerDefenseTouchInput.Update()
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.Update()
        VB: TowerDefense.Input.TowerDefenseTouchInput.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: Update
        path: ''
        startLine: 2382
      summary: "\nDecay flick\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: TowerDefense.Input.TowerDefenseTouchInput.Update*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnPress(PointerActionInfo)
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnPress(PointerActionInfo)
      language: CSharp
      name:
        CSharp: OnPress(PointerActionInfo)
        VB: OnPress(PointerActionInfo)
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnPress(PointerActionInfo)
        VB: TowerDefenseTouchInput.OnPress(PointerActionInfo)
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnPress(PointerActionInfo)
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnPress(PointerActionInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnPress
        path: ''
        startLine: 2416
      summary: "\nCalled on input press\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnPress(PointerActionInfo pointer)
          VB: Protected Overrides Sub OnPress(pointer As PointerActionInfo)
        parameters:
        - id: pointer
          type: PointerActionInfo
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnPress*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnRelease(PointerActionInfo)
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnRelease(PointerActionInfo)
      language: CSharp
      name:
        CSharp: OnRelease(PointerActionInfo)
        VB: OnRelease(PointerActionInfo)
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnRelease(PointerActionInfo)
        VB: TowerDefenseTouchInput.OnRelease(PointerActionInfo)
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnRelease(PointerActionInfo)
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnRelease(PointerActionInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnRelease
        path: ''
        startLine: 2437
      summary: "\nCalled on input release, for flicks\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnRelease(PointerActionInfo pointer)
          VB: Protected Overrides Sub OnRelease(pointer As PointerActionInfo)
        parameters:
        - id: pointer
          type: PointerActionInfo
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnRelease*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnTap(PointerActionInfo)
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnTap(PointerActionInfo)
      language: CSharp
      name:
        CSharp: OnTap(PointerActionInfo)
        VB: OnTap(PointerActionInfo)
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnTap(PointerActionInfo)
        VB: TowerDefenseTouchInput.OnTap(PointerActionInfo)
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnTap(PointerActionInfo)
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnTap(PointerActionInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnTap
        path: ''
        startLine: 2486
      summary: "\nCalled on tap,\ncalls confirmation of tower placement\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnTap(PointerActionInfo pointerActionInfo)
          VB: Protected Overridable Sub OnTap(pointerActionInfo As PointerActionInfo)
        parameters:
        - id: pointerActionInfo
          type: PointerActionInfo
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnTap*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag(PointerActionInfo)
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag(PointerActionInfo)
      language: CSharp
      name:
        CSharp: OnStartDrag(PointerActionInfo)
        VB: OnStartDrag(PointerActionInfo)
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnStartDrag(PointerActionInfo)
        VB: TowerDefenseTouchInput.OnStartDrag(PointerActionInfo)
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag(PointerActionInfo)
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag(PointerActionInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnStartDrag
        path: ''
        startLine: 2518
      summary: "\nAssigns the drag pointer and sets the UI into drag mode\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnStartDrag(PointerActionInfo pointer)
          VB: Protected Overridable Sub OnStartDrag(pointer As PointerActionInfo)
        parameters:
        - id: pointer
          type: PointerActionInfo
          description: ''
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Input.TowerDefenseTouchInput.OnDrag(PointerActionInfo)
      commentId: M:TowerDefense.Input.TowerDefenseTouchInput.OnDrag(PointerActionInfo)
      language: CSharp
      name:
        CSharp: OnDrag(PointerActionInfo)
        VB: OnDrag(PointerActionInfo)
      nameWithType:
        CSharp: TowerDefenseTouchInput.OnDrag(PointerActionInfo)
        VB: TowerDefenseTouchInput.OnDrag(PointerActionInfo)
      qualifiedName:
        CSharp: TowerDefense.Input.TowerDefenseTouchInput.OnDrag(PointerActionInfo)
        VB: TowerDefense.Input.TowerDefenseTouchInput.OnDrag(PointerActionInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Input
      source:
        id: OnDrag
        path: ''
        startLine: 2535
      summary: "\nCalled when we drag\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnDrag(PointerActionInfo pointer)
          VB: Protected Overrides Sub OnDrag(pointer As PointerActionInfo)
        parameters:
        - id: pointer
          type: PointerActionInfo
      overload: TowerDefense.Input.TowerDefenseTouchInput.OnDrag*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: TowerDefense.Level
  commentId: N:TowerDefense.Level
  language: CSharp
  name:
    CSharp: TowerDefense.Level
    VB: TowerDefense.Level
  nameWithType:
    CSharp: TowerDefense.Level
    VB: TowerDefense.Level
  qualifiedName:
    CSharp: TowerDefense.Level
    VB: TowerDefense.Level
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Level.LevelIntro
    commentId: T:TowerDefense.Level.LevelIntro
    language: CSharp
    name:
      CSharp: LevelIntro
      VB: LevelIntro
    nameWithType:
      CSharp: LevelIntro
      VB: LevelIntro
    qualifiedName:
      CSharp: TowerDefense.Level.LevelIntro
      VB: TowerDefense.Level.LevelIntro
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: LevelIntro
      path: ''
      startLine: 2660
    summary: "\nAbstract base class representing a level intro\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class LevelIntro : MonoBehaviour'
        VB: >-
          Public MustInherit Class LevelIntro

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Level.LevelIntro.introCompleted
      commentId: E:TowerDefense.Level.LevelIntro.introCompleted
      language: CSharp
      name:
        CSharp: introCompleted
        VB: introCompleted
      nameWithType:
        CSharp: LevelIntro.introCompleted
        VB: LevelIntro.introCompleted
      qualifiedName:
        CSharp: TowerDefense.Level.LevelIntro.introCompleted
        VB: TowerDefense.Level.LevelIntro.introCompleted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: introCompleted
        path: ''
        startLine: 2665
      summary: "\nCalled when the Intro is completed\n"
      example: []
      syntax:
        content:
          CSharp: public event Action introCompleted
          VB: Public Event introCompleted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
      commentId: M:TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
      language: CSharp
      name:
        CSharp: SafelyCallIntroCompleted()
        VB: SafelyCallIntroCompleted()
      nameWithType:
        CSharp: LevelIntro.SafelyCallIntroCompleted()
        VB: LevelIntro.SafelyCallIntroCompleted()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted()
        VB: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SafelyCallIntroCompleted
        path: ''
        startLine: 2670
      summary: "\nShould be fired by the derived classes to mark that the intro is completed\n"
      example: []
      syntax:
        content:
          CSharp: protected void SafelyCallIntroCompleted()
          VB: Protected Sub SafelyCallIntroCompleted
      overload: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.Level.LevelManager
    commentId: T:TowerDefense.Level.LevelManager
    language: CSharp
    name:
      CSharp: LevelManager
      VB: LevelManager
    nameWithType:
      CSharp: LevelManager
      VB: LevelManager
    qualifiedName:
      CSharp: TowerDefense.Level.LevelManager
      VB: TowerDefense.Level.LevelManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: LevelManager
      path: ''
      startLine: 2692
    summary: "\nThe level manager - handles the level states and tracks the player&apos;s currency\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LevelManager : Singleton<LevelManager>'
        VB: >-
          Public Class LevelManager

              Inherits Singleton(Of LevelManager)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.LevelManager.intro
      commentId: F:TowerDefense.Level.LevelManager.intro
      language: CSharp
      name:
        CSharp: intro
        VB: intro
      nameWithType:
        CSharp: LevelManager.intro
        VB: LevelManager.intro
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.intro
        VB: TowerDefense.Level.LevelManager.intro
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: intro
        path: ''
        startLine: 2698
      summary: "\nThe configured level intro. If this is null the LevelManager will fall through to the gameplay state (i.e. SpawningEnemies)\n"
      example: []
      syntax:
        content:
          CSharp: public LevelIntro intro
          VB: Public intro As LevelIntro
        return:
          type: TowerDefense.Level.LevelIntro
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.towerLibrary
      commentId: F:TowerDefense.Level.LevelManager.towerLibrary
      language: CSharp
      name:
        CSharp: towerLibrary
        VB: towerLibrary
      nameWithType:
        CSharp: LevelManager.towerLibrary
        VB: LevelManager.towerLibrary
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.towerLibrary
        VB: TowerDefense.Level.LevelManager.towerLibrary
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: towerLibrary
        path: ''
        startLine: 2703
      summary: "\nThe tower library for this level\n"
      example: []
      syntax:
        content:
          CSharp: public TowerLibrary towerLibrary
          VB: Public towerLibrary As TowerLibrary
        return:
          type: TowerLibrary
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.startingCurrency
      commentId: F:TowerDefense.Level.LevelManager.startingCurrency
      language: CSharp
      name:
        CSharp: startingCurrency
        VB: startingCurrency
      nameWithType:
        CSharp: LevelManager.startingCurrency
        VB: LevelManager.startingCurrency
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.startingCurrency
        VB: TowerDefense.Level.LevelManager.startingCurrency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: startingCurrency
        path: ''
        startLine: 2708
      summary: "\nThe currency that the player starts with\n"
      example: []
      syntax:
        content:
          CSharp: public int startingCurrency
          VB: Public startingCurrency As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.currencyGainer
      commentId: F:TowerDefense.Level.LevelManager.currencyGainer
      language: CSharp
      name:
        CSharp: currencyGainer
        VB: currencyGainer
      nameWithType:
        CSharp: LevelManager.currencyGainer
        VB: LevelManager.currencyGainer
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.currencyGainer
        VB: TowerDefense.Level.LevelManager.currencyGainer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: currencyGainer
        path: ''
        startLine: 2713
      summary: "\nThe controller for gaining currency\n"
      example: []
      syntax:
        content:
          CSharp: public CurrencyGainer currencyGainer
          VB: Public currencyGainer As CurrencyGainer
        return:
          type: CurrencyGainer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.alwaysGainCurrency
      commentId: F:TowerDefense.Level.LevelManager.alwaysGainCurrency
      language: CSharp
      name:
        CSharp: alwaysGainCurrency
        VB: alwaysGainCurrency
      nameWithType:
        CSharp: LevelManager.alwaysGainCurrency
        VB: LevelManager.alwaysGainCurrency
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.alwaysGainCurrency
        VB: TowerDefense.Level.LevelManager.alwaysGainCurrency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: alwaysGainCurrency
        path: ''
        startLine: 2719
      summary: "\nConfiguration for if the player gains currency even in pre-build phase\n"
      example: []
      syntax:
        content:
          CSharp: public bool alwaysGainCurrency
          VB: Public alwaysGainCurrency As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.homeBases
      commentId: F:TowerDefense.Level.LevelManager.homeBases
      language: CSharp
      name:
        CSharp: homeBases
        VB: homeBases
      nameWithType:
        CSharp: LevelManager.homeBases
        VB: LevelManager.homeBases
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.homeBases
        VB: TowerDefense.Level.LevelManager.homeBases
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: homeBases
        path: ''
        startLine: 2724
      summary: "\nThe home bases that the player must defend\n"
      example: []
      syntax:
        content:
          CSharp: public PlayerHomeBase[] homeBases
          VB: Public homeBases As PlayerHomeBase()
        return:
          type: TowerDefense.Level.PlayerHomeBase[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.environmentColliders
      commentId: F:TowerDefense.Level.LevelManager.environmentColliders
      language: CSharp
      name:
        CSharp: environmentColliders
        VB: environmentColliders
      nameWithType:
        CSharp: LevelManager.environmentColliders
        VB: LevelManager.environmentColliders
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.environmentColliders
        VB: TowerDefense.Level.LevelManager.environmentColliders
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: environmentColliders
        path: ''
        startLine: 2726
      syntax:
        content:
          CSharp: public Collider[] environmentColliders
          VB: Public environmentColliders As Collider()
        return:
          type: Collider[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.waveManager
      commentId: P:TowerDefense.Level.LevelManager.waveManager
      language: CSharp
      name:
        CSharp: waveManager
        VB: waveManager
      nameWithType:
        CSharp: LevelManager.waveManager
        VB: LevelManager.waveManager
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.waveManager
        VB: TowerDefense.Level.LevelManager.waveManager
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: waveManager
        path: ''
        startLine: 2731
      summary: "\nThe attached wave manager\n"
      example: []
      syntax:
        content:
          CSharp: public WaveManager waveManager { get; protected set; }
          VB: Public Property waveManager As WaveManager
        parameters: []
        return:
          type: TowerDefense.Level.WaveManager
      overload: TowerDefense.Level.LevelManager.waveManager*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Level.LevelManager.numberOfEnemies
      commentId: P:TowerDefense.Level.LevelManager.numberOfEnemies
      language: CSharp
      name:
        CSharp: numberOfEnemies
        VB: numberOfEnemies
      nameWithType:
        CSharp: LevelManager.numberOfEnemies
        VB: LevelManager.numberOfEnemies
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.numberOfEnemies
        VB: TowerDefense.Level.LevelManager.numberOfEnemies
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: numberOfEnemies
        path: ''
        startLine: 2736
      summary: "\nNumber of enemies currently in the level\n"
      example: []
      syntax:
        content:
          CSharp: public int numberOfEnemies { get; protected set; }
          VB: Public Property numberOfEnemies As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Level.LevelManager.numberOfEnemies*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Level.LevelManager.levelState
      commentId: P:TowerDefense.Level.LevelManager.levelState
      language: CSharp
      name:
        CSharp: levelState
        VB: levelState
      nameWithType:
        CSharp: LevelManager.levelState
        VB: LevelManager.levelState
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.levelState
        VB: TowerDefense.Level.LevelManager.levelState
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: levelState
        path: ''
        startLine: 2741
      summary: "\nThe current state of the level\n"
      example: []
      syntax:
        content:
          CSharp: public LevelState levelState { get; protected set; }
          VB: Public Property levelState As LevelState
        parameters: []
        return:
          type: TowerDefense.Level.LevelState
      overload: TowerDefense.Level.LevelManager.levelState*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Level.LevelManager.currency
      commentId: P:TowerDefense.Level.LevelManager.currency
      language: CSharp
      name:
        CSharp: currency
        VB: currency
      nameWithType:
        CSharp: LevelManager.currency
        VB: LevelManager.currency
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.currency
        VB: TowerDefense.Level.LevelManager.currency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: currency
        path: ''
        startLine: 2746
      summary: "\nThe currency controller\n"
      example: []
      syntax:
        content:
          CSharp: public Currency currency { get; protected set; }
          VB: Public Property currency As Currency
        parameters: []
        return:
          type: Currency
      overload: TowerDefense.Level.LevelManager.currency*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
      commentId: P:TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
      language: CSharp
      name:
        CSharp: numberOfHomeBasesLeft
        VB: numberOfHomeBasesLeft
      nameWithType:
        CSharp: LevelManager.numberOfHomeBasesLeft
        VB: LevelManager.numberOfHomeBasesLeft
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
        VB: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: numberOfHomeBasesLeft
        path: ''
        startLine: 2751
      summary: "\nNumber of home bases left\n"
      example: []
      syntax:
        content:
          CSharp: public int numberOfHomeBasesLeft { get; protected set; }
          VB: Public Property numberOfHomeBasesLeft As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Level.LevelManager.numberOfHomeBases
      commentId: P:TowerDefense.Level.LevelManager.numberOfHomeBases
      language: CSharp
      name:
        CSharp: numberOfHomeBases
        VB: numberOfHomeBases
      nameWithType:
        CSharp: LevelManager.numberOfHomeBases
        VB: LevelManager.numberOfHomeBases
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.numberOfHomeBases
        VB: TowerDefense.Level.LevelManager.numberOfHomeBases
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: numberOfHomeBases
        path: ''
        startLine: 2756
      summary: "\nStarting number of home bases\n"
      example: []
      syntax:
        content:
          CSharp: public int numberOfHomeBases { get; protected set; }
          VB: Public Property numberOfHomeBases As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Level.LevelManager.numberOfHomeBases*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Level.LevelManager.playerHomeBases
      commentId: P:TowerDefense.Level.LevelManager.playerHomeBases
      language: CSharp
      name:
        CSharp: playerHomeBases
        VB: playerHomeBases
      nameWithType:
        CSharp: LevelManager.playerHomeBases
        VB: LevelManager.playerHomeBases
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.playerHomeBases
        VB: TowerDefense.Level.LevelManager.playerHomeBases
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: playerHomeBases
        path: ''
        startLine: 2761
      summary: "\nAn accessor for the home bases\n"
      example: []
      syntax:
        content:
          CSharp: public PlayerHomeBase[] playerHomeBases { get; }
          VB: Public ReadOnly Property playerHomeBases As PlayerHomeBase()
        parameters: []
        return:
          type: TowerDefense.Level.PlayerHomeBase[]
      overload: TowerDefense.Level.LevelManager.playerHomeBases*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Level.LevelManager.isGameOver
      commentId: P:TowerDefense.Level.LevelManager.isGameOver
      language: CSharp
      name:
        CSharp: isGameOver
        VB: isGameOver
      nameWithType:
        CSharp: LevelManager.isGameOver
        VB: LevelManager.isGameOver
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.isGameOver
        VB: TowerDefense.Level.LevelManager.isGameOver
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: isGameOver
        path: ''
        startLine: 2769
      summary: "\nIf the game is over\n"
      example: []
      syntax:
        content:
          CSharp: public bool isGameOver { get; }
          VB: Public ReadOnly Property isGameOver As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.Level.LevelManager.isGameOver*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Level.LevelManager.levelCompleted
      commentId: E:TowerDefense.Level.LevelManager.levelCompleted
      language: CSharp
      name:
        CSharp: levelCompleted
        VB: levelCompleted
      nameWithType:
        CSharp: LevelManager.levelCompleted
        VB: LevelManager.levelCompleted
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.levelCompleted
        VB: TowerDefense.Level.LevelManager.levelCompleted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: levelCompleted
        path: ''
        startLine: 2777
      summary: "\nFired when all the waves are done and there are no more enemies left\n"
      example: []
      syntax:
        content:
          CSharp: public event Action levelCompleted
          VB: Public Event levelCompleted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.levelFailed
      commentId: E:TowerDefense.Level.LevelManager.levelFailed
      language: CSharp
      name:
        CSharp: levelFailed
        VB: levelFailed
      nameWithType:
        CSharp: LevelManager.levelFailed
        VB: LevelManager.levelFailed
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.levelFailed
        VB: TowerDefense.Level.LevelManager.levelFailed
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: levelFailed
        path: ''
        startLine: 2782
      summary: "\nFired when all of the home bases are destroyed\n"
      example: []
      syntax:
        content:
          CSharp: public event Action levelFailed
          VB: Public Event levelFailed As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.levelStateChanged
      commentId: E:TowerDefense.Level.LevelManager.levelStateChanged
      language: CSharp
      name:
        CSharp: levelStateChanged
        VB: levelStateChanged
      nameWithType:
        CSharp: LevelManager.levelStateChanged
        VB: LevelManager.levelStateChanged
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.levelStateChanged
        VB: TowerDefense.Level.LevelManager.levelStateChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: levelStateChanged
        path: ''
        startLine: 2787
      summary: "\nFired when the level state is changed - first parameter is the old state, second parameter is the new state\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<LevelState, LevelState> levelStateChanged
          VB: Public Event levelStateChanged As Action(Of LevelState, LevelState)
        return:
          type: Action{TowerDefense.Level.LevelState,TowerDefense.Level.LevelState}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.numberOfEnemiesChanged
      commentId: E:TowerDefense.Level.LevelManager.numberOfEnemiesChanged
      language: CSharp
      name:
        CSharp: numberOfEnemiesChanged
        VB: numberOfEnemiesChanged
      nameWithType:
        CSharp: LevelManager.numberOfEnemiesChanged
        VB: LevelManager.numberOfEnemiesChanged
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.numberOfEnemiesChanged
        VB: TowerDefense.Level.LevelManager.numberOfEnemiesChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: numberOfEnemiesChanged
        path: ''
        startLine: 2792
      summary: "\nFired when the number of enemies has changed\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<int> numberOfEnemiesChanged
          VB: Public Event numberOfEnemiesChanged As Action(Of Integer)
        return:
          type: Action{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.homeBaseDestroyed
      commentId: E:TowerDefense.Level.LevelManager.homeBaseDestroyed
      language: CSharp
      name:
        CSharp: homeBaseDestroyed
        VB: homeBaseDestroyed
      nameWithType:
        CSharp: LevelManager.homeBaseDestroyed
        VB: LevelManager.homeBaseDestroyed
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.homeBaseDestroyed
        VB: TowerDefense.Level.LevelManager.homeBaseDestroyed
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: homeBaseDestroyed
        path: ''
        startLine: 2797
      summary: "\nEvent for home base being destroyed\n"
      example: []
      syntax:
        content:
          CSharp: public event Action homeBaseDestroyed
          VB: Public Event homeBaseDestroyed As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies
      commentId: M:TowerDefense.Level.LevelManager.IncrementNumberOfEnemies
      language: CSharp
      name:
        CSharp: IncrementNumberOfEnemies()
        VB: IncrementNumberOfEnemies()
      nameWithType:
        CSharp: LevelManager.IncrementNumberOfEnemies()
        VB: LevelManager.IncrementNumberOfEnemies()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies()
        VB: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: IncrementNumberOfEnemies
        path: ''
        startLine: 2802
      summary: "\nIncrements the number of enemies. Called on Agent spawn\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void IncrementNumberOfEnemies()
          VB: Public Overridable Sub IncrementNumberOfEnemies
      overload: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth
      commentId: M:TowerDefense.Level.LevelManager.GetAllHomeBasesHealth
      language: CSharp
      name:
        CSharp: GetAllHomeBasesHealth()
        VB: GetAllHomeBasesHealth()
      nameWithType:
        CSharp: LevelManager.GetAllHomeBasesHealth()
        VB: LevelManager.GetAllHomeBasesHealth()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth()
        VB: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: GetAllHomeBasesHealth
        path: ''
        startLine: 2811
      summary: "\nReturns the sum of all HomeBases&apos; health\n"
      example: []
      syntax:
        content:
          CSharp: public float GetAllHomeBasesHealth()
          VB: Public Function GetAllHomeBasesHealth As Single
        return:
          type: System.Single
      overload: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies
      commentId: M:TowerDefense.Level.LevelManager.DecrementNumberOfEnemies
      language: CSharp
      name:
        CSharp: DecrementNumberOfEnemies()
        VB: DecrementNumberOfEnemies()
      nameWithType:
        CSharp: LevelManager.DecrementNumberOfEnemies()
        VB: LevelManager.DecrementNumberOfEnemies()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies()
        VB: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: DecrementNumberOfEnemies
        path: ''
        startLine: 2824
      summary: "\nDecrements the number of enemies. Called on Agent death\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void DecrementNumberOfEnemies()
          VB: Public Overridable Sub DecrementNumberOfEnemies
      overload: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Level.LevelManager.BuildingCompleted
      commentId: M:TowerDefense.Level.LevelManager.BuildingCompleted
      language: CSharp
      name:
        CSharp: BuildingCompleted()
        VB: BuildingCompleted()
      nameWithType:
        CSharp: LevelManager.BuildingCompleted()
        VB: LevelManager.BuildingCompleted()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.BuildingCompleted()
        VB: TowerDefense.Level.LevelManager.BuildingCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: BuildingCompleted
        path: ''
        startLine: 2843
      summary: "\nCompletes building phase, setting state to spawn enemies\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void BuildingCompleted()
          VB: Public Overridable Sub BuildingCompleted
      overload: TowerDefense.Level.LevelManager.BuildingCompleted*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Level.LevelManager.Awake
      commentId: M:TowerDefense.Level.LevelManager.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: LevelManager.Awake()
        VB: LevelManager.Awake()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.Awake()
        VB: TowerDefense.Level.LevelManager.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Awake
        path: ''
        startLine: 2852
      summary: "\nCaches the attached wave manager and subscribes to the spawning completed event\nSets the level state to intro and ensures that the number of enemies is set to 0\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: TowerDefense.Level.LevelManager.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Level.LevelManager.Update
      commentId: M:TowerDefense.Level.LevelManager.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: LevelManager.Update()
        VB: LevelManager.Update()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.Update()
        VB: TowerDefense.Level.LevelManager.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Update
        path: ''
        startLine: 2888
      summary: "\nUpdates the currency gain controller\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Level.LevelManager.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.LevelManager.OnDestroy
      commentId: M:TowerDefense.Level.LevelManager.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: LevelManager.OnDestroy()
        VB: LevelManager.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.OnDestroy()
        VB: TowerDefense.Level.LevelManager.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: OnDestroy
        path: ''
        startLine: 2900
      summary: "\nUnsubscribes from events\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnDestroy()
          VB: Protected Overrides Sub OnDestroy
      overload: TowerDefense.Level.LevelManager.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.Level.LevelManager.IntroCompleted
      commentId: M:TowerDefense.Level.LevelManager.IntroCompleted
      language: CSharp
      name:
        CSharp: IntroCompleted()
        VB: IntroCompleted()
      nameWithType:
        CSharp: LevelManager.IntroCompleted()
        VB: LevelManager.IntroCompleted()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.IntroCompleted()
        VB: TowerDefense.Level.LevelManager.IntroCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: IntroCompleted
        path: ''
        startLine: 2922
      summary: "\nFired when Intro is completed or immediately, if no intro is specified\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void IntroCompleted()
          VB: Protected Overridable Sub IntroCompleted
      overload: TowerDefense.Level.LevelManager.IntroCompleted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.LevelManager.OnSpawningCompleted
      commentId: M:TowerDefense.Level.LevelManager.OnSpawningCompleted
      language: CSharp
      name:
        CSharp: OnSpawningCompleted()
        VB: OnSpawningCompleted()
      nameWithType:
        CSharp: LevelManager.OnSpawningCompleted()
        VB: LevelManager.OnSpawningCompleted()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.OnSpawningCompleted()
        VB: TowerDefense.Level.LevelManager.OnSpawningCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: OnSpawningCompleted
        path: ''
        startLine: 2930
      summary: "\nFired when the WaveManager has finished spawning enemies\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnSpawningCompleted()
          VB: Protected Overridable Sub OnSpawningCompleted
      overload: TowerDefense.Level.LevelManager.OnSpawningCompleted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.LevelManager.ChangeLevelState(TowerDefense.Level.LevelState)
      commentId: M:TowerDefense.Level.LevelManager.ChangeLevelState(TowerDefense.Level.LevelState)
      language: CSharp
      name:
        CSharp: ChangeLevelState(LevelState)
        VB: ChangeLevelState(LevelState)
      nameWithType:
        CSharp: LevelManager.ChangeLevelState(LevelState)
        VB: LevelManager.ChangeLevelState(LevelState)
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.ChangeLevelState(TowerDefense.Level.LevelState)
        VB: TowerDefense.Level.LevelManager.ChangeLevelState(TowerDefense.Level.LevelState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: ChangeLevelState
        path: ''
        startLine: 2939
      summary: "\nChanges the state and broadcasts the event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void ChangeLevelState(LevelState newState)
          VB: Protected Overridable Sub ChangeLevelState(newState As LevelState)
        parameters:
        - id: newState
          type: TowerDefense.Level.LevelState
          description: The new state to transitioned to
      overload: TowerDefense.Level.LevelManager.ChangeLevelState*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed(DamageableBehaviour)
      commentId: M:TowerDefense.Level.LevelManager.OnHomeBaseDestroyed(DamageableBehaviour)
      language: CSharp
      name:
        CSharp: OnHomeBaseDestroyed(DamageableBehaviour)
        VB: OnHomeBaseDestroyed(DamageableBehaviour)
      nameWithType:
        CSharp: LevelManager.OnHomeBaseDestroyed(DamageableBehaviour)
        VB: LevelManager.OnHomeBaseDestroyed(DamageableBehaviour)
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed(DamageableBehaviour)
        VB: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed(DamageableBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: OnHomeBaseDestroyed
        path: ''
        startLine: 2978
      summary: "\nFired when a home base is destroyed\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnHomeBaseDestroyed(DamageableBehaviour homeBase)
          VB: Protected Overridable Sub OnHomeBaseDestroyed(homeBase As DamageableBehaviour)
        parameters:
        - id: homeBase
          type: DamageableBehaviour
      overload: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted
      commentId: M:TowerDefense.Level.LevelManager.SafelyCallLevelCompleted
      language: CSharp
      name:
        CSharp: SafelyCallLevelCompleted()
        VB: SafelyCallLevelCompleted()
      nameWithType:
        CSharp: LevelManager.SafelyCallLevelCompleted()
        VB: LevelManager.SafelyCallLevelCompleted()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted()
        VB: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SafelyCallLevelCompleted
        path: ''
        startLine: 2999
      summary: "\nCalls the <xref href=\"TowerDefense.Level.LevelManager.levelCompleted\" data-throw-if-not-resolved=\"false\"></xref> event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SafelyCallLevelCompleted()
          VB: Protected Overridable Sub SafelyCallLevelCompleted
      overload: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Level.LevelManager.levelCompleted: 
    - id: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged
      commentId: M:TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged
      language: CSharp
      name:
        CSharp: SafelyCallNumberOfEnemiesChanged()
        VB: SafelyCallNumberOfEnemiesChanged()
      nameWithType:
        CSharp: LevelManager.SafelyCallNumberOfEnemiesChanged()
        VB: LevelManager.SafelyCallNumberOfEnemiesChanged()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged()
        VB: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SafelyCallNumberOfEnemiesChanged
        path: ''
        startLine: 3010
      summary: "\nCalls the <xref href=\"TowerDefense.Level.LevelManager.numberOfEnemiesChanged\" data-throw-if-not-resolved=\"false\"></xref> event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SafelyCallNumberOfEnemiesChanged()
          VB: Protected Overridable Sub SafelyCallNumberOfEnemiesChanged
      overload: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Level.LevelManager.numberOfEnemiesChanged: 
    - id: TowerDefense.Level.LevelManager.SafelyCallLevelFailed
      commentId: M:TowerDefense.Level.LevelManager.SafelyCallLevelFailed
      language: CSharp
      name:
        CSharp: SafelyCallLevelFailed()
        VB: SafelyCallLevelFailed()
      nameWithType:
        CSharp: LevelManager.SafelyCallLevelFailed()
        VB: LevelManager.SafelyCallLevelFailed()
      qualifiedName:
        CSharp: TowerDefense.Level.LevelManager.SafelyCallLevelFailed()
        VB: TowerDefense.Level.LevelManager.SafelyCallLevelFailed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SafelyCallLevelFailed
        path: ''
        startLine: 3021
      summary: "\nCalls the <xref href=\"TowerDefense.Level.LevelManager.levelFailed\" data-throw-if-not-resolved=\"false\"></xref> event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SafelyCallLevelFailed()
          VB: Protected Overridable Sub SafelyCallLevelFailed
      overload: TowerDefense.Level.LevelManager.SafelyCallLevelFailed*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Level.LevelManager.levelFailed: 
  - id: TowerDefense.Level.LevelState
    commentId: T:TowerDefense.Level.LevelState
    language: CSharp
    name:
      CSharp: LevelState
      VB: LevelState
    nameWithType:
      CSharp: LevelState
      VB: LevelState
    qualifiedName:
      CSharp: TowerDefense.Level.LevelState
      VB: TowerDefense.Level.LevelState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: LevelState
      path: ''
      startLine: 3035
    summary: "\nAn enum to represent the different level states\n"
    example: []
    syntax:
      content:
        CSharp: public enum LevelState
        VB: Public Enum LevelState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.Level.LevelState.Intro
      commentId: F:TowerDefense.Level.LevelState.Intro
      language: CSharp
      name:
        CSharp: Intro
        VB: Intro
      nameWithType:
        CSharp: LevelState.Intro
        VB: LevelState.Intro
      qualifiedName:
        CSharp: TowerDefense.Level.LevelState.Intro
        VB: TowerDefense.Level.LevelState.Intro
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Intro
        path: ''
        startLine: 3037
      syntax:
        content:
          CSharp: Intro = 0
          VB: Intro = 0
        return:
          type: TowerDefense.Level.LevelState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Level.LevelState.Building
      commentId: F:TowerDefense.Level.LevelState.Building
      language: CSharp
      name:
        CSharp: Building
        VB: Building
      nameWithType:
        CSharp: LevelState.Building
        VB: LevelState.Building
      qualifiedName:
        CSharp: TowerDefense.Level.LevelState.Building
        VB: TowerDefense.Level.LevelState.Building
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Building
        path: ''
        startLine: 3038
      syntax:
        content:
          CSharp: Building = 1
          VB: Building = 1
        return:
          type: TowerDefense.Level.LevelState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Level.LevelState.SpawningEnemies
      commentId: F:TowerDefense.Level.LevelState.SpawningEnemies
      language: CSharp
      name:
        CSharp: SpawningEnemies
        VB: SpawningEnemies
      nameWithType:
        CSharp: LevelState.SpawningEnemies
        VB: LevelState.SpawningEnemies
      qualifiedName:
        CSharp: TowerDefense.Level.LevelState.SpawningEnemies
        VB: TowerDefense.Level.LevelState.SpawningEnemies
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SpawningEnemies
        path: ''
        startLine: 3039
      syntax:
        content:
          CSharp: SpawningEnemies = 2
          VB: SpawningEnemies = 2
        return:
          type: TowerDefense.Level.LevelState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Level.LevelState.AllEnemiesSpawned
      commentId: F:TowerDefense.Level.LevelState.AllEnemiesSpawned
      language: CSharp
      name:
        CSharp: AllEnemiesSpawned
        VB: AllEnemiesSpawned
      nameWithType:
        CSharp: LevelState.AllEnemiesSpawned
        VB: LevelState.AllEnemiesSpawned
      qualifiedName:
        CSharp: TowerDefense.Level.LevelState.AllEnemiesSpawned
        VB: TowerDefense.Level.LevelState.AllEnemiesSpawned
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: AllEnemiesSpawned
        path: ''
        startLine: 3040
      syntax:
        content:
          CSharp: AllEnemiesSpawned = 3
          VB: AllEnemiesSpawned = 3
        return:
          type: TowerDefense.Level.LevelState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Level.LevelState.Lose
      commentId: F:TowerDefense.Level.LevelState.Lose
      language: CSharp
      name:
        CSharp: Lose
        VB: Lose
      nameWithType:
        CSharp: LevelState.Lose
        VB: LevelState.Lose
      qualifiedName:
        CSharp: TowerDefense.Level.LevelState.Lose
        VB: TowerDefense.Level.LevelState.Lose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Lose
        path: ''
        startLine: 3041
      syntax:
        content:
          CSharp: Lose = 4
          VB: Lose = 4
        return:
          type: TowerDefense.Level.LevelState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Level.LevelState.Win
      commentId: F:TowerDefense.Level.LevelState.Win
      language: CSharp
      name:
        CSharp: Win
        VB: Win
      nameWithType:
        CSharp: LevelState.Win
        VB: LevelState.Win
      qualifiedName:
        CSharp: TowerDefense.Level.LevelState.Win
        VB: TowerDefense.Level.LevelState.Win
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Win
        path: ''
        startLine: 3042
      syntax:
        content:
          CSharp: Win = 5
          VB: Win = 5
        return:
          type: TowerDefense.Level.LevelState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.Level.PlayerHomeBase
    commentId: T:TowerDefense.Level.PlayerHomeBase
    language: CSharp
    name:
      CSharp: PlayerHomeBase
      VB: PlayerHomeBase
    nameWithType:
      CSharp: PlayerHomeBase
      VB: PlayerHomeBase
    qualifiedName:
      CSharp: TowerDefense.Level.PlayerHomeBase
      VB: TowerDefense.Level.PlayerHomeBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: PlayerHomeBase
      path: ''
      startLine: 3056
    summary: "\nA class representing the home base that players must defend\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerHomeBase : DamageableBehaviour'
        VB: >-
          Public Class PlayerHomeBase

              Inherits DamageableBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.PlayerHomeBase.chargePfx
      commentId: F:TowerDefense.Level.PlayerHomeBase.chargePfx
      language: CSharp
      name:
        CSharp: chargePfx
        VB: chargePfx
      nameWithType:
        CSharp: PlayerHomeBase.chargePfx
        VB: PlayerHomeBase.chargePfx
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.chargePfx
        VB: TowerDefense.Level.PlayerHomeBase.chargePfx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: chargePfx
        path: ''
        startLine: 3061
      summary: "\nThe particle system when an attack is charging\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem chargePfx
          VB: Public chargePfx As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.PlayerHomeBase.chargeSound
      commentId: F:TowerDefense.Level.PlayerHomeBase.chargeSound
      language: CSharp
      name:
        CSharp: chargeSound
        VB: chargeSound
      nameWithType:
        CSharp: PlayerHomeBase.chargeSound
        VB: PlayerHomeBase.chargeSound
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.chargeSound
        VB: TowerDefense.Level.PlayerHomeBase.chargeSound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: chargeSound
        path: ''
        startLine: 3066
      summary: "\nSound to play when charge effect starts\n"
      example: []
      syntax:
        content:
          CSharp: public RandomAudioSource chargeSound
          VB: Public chargeSound As RandomAudioSource
        return:
          type: RandomAudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.PlayerHomeBase.attackPfx
      commentId: F:TowerDefense.Level.PlayerHomeBase.attackPfx
      language: CSharp
      name:
        CSharp: attackPfx
        VB: attackPfx
      nameWithType:
        CSharp: PlayerHomeBase.attackPfx
        VB: PlayerHomeBase.attackPfx
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.attackPfx
        VB: TowerDefense.Level.PlayerHomeBase.attackPfx
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: attackPfx
        path: ''
        startLine: 3071
      summary: "\nThe particle system for an attack\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem attackPfx
          VB: Public attackPfx As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.PlayerHomeBase.attackSound
      commentId: F:TowerDefense.Level.PlayerHomeBase.attackSound
      language: CSharp
      name:
        CSharp: attackSound
        VB: attackSound
      nameWithType:
        CSharp: PlayerHomeBase.attackSound
        VB: PlayerHomeBase.attackSound
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.attackSound
        VB: TowerDefense.Level.PlayerHomeBase.attackSound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: attackSound
        path: ''
        startLine: 3076
      summary: "\nSound to play when attack effect starts\n"
      example: []
      syntax:
        content:
          CSharp: public RandomAudioSource attackSound
          VB: Public attackSound As RandomAudioSource
        return:
          type: RandomAudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.PlayerHomeBase.m_CurrentAgentsInside
      commentId: F:TowerDefense.Level.PlayerHomeBase.m_CurrentAgentsInside
      language: CSharp
      name:
        CSharp: m_CurrentAgentsInside
        VB: m_CurrentAgentsInside
      nameWithType:
        CSharp: PlayerHomeBase.m_CurrentAgentsInside
        VB: PlayerHomeBase.m_CurrentAgentsInside
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.m_CurrentAgentsInside
        VB: TowerDefense.Level.PlayerHomeBase.m_CurrentAgentsInside
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: m_CurrentAgentsInside
        path: ''
        startLine: 3081
      summary: "\nThe current Agents within the home base attack zone\n"
      example: []
      syntax:
        content:
          CSharp: protected List<Agent> m_CurrentAgentsInside
          VB: Protected m_CurrentAgentsInside As List(Of Agent)
        return:
          type: List{Agent}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.PlayerHomeBase.Start
      commentId: M:TowerDefense.Level.PlayerHomeBase.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PlayerHomeBase.Start()
        VB: PlayerHomeBase.Start()
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.Start()
        VB: TowerDefense.Level.PlayerHomeBase.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Start
        path: ''
        startLine: 3086
      summary: "\nSubscribes to damaged event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.Level.PlayerHomeBase.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.PlayerHomeBase.OnDestroy
      commentId: M:TowerDefense.Level.PlayerHomeBase.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: PlayerHomeBase.OnDestroy()
        VB: PlayerHomeBase.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.OnDestroy()
        VB: TowerDefense.Level.PlayerHomeBase.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: OnDestroy
        path: ''
        startLine: 3094
      summary: "\nUnsubscribes to damaged event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.Level.PlayerHomeBase.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.PlayerHomeBase.OnDamaged(HealthChangeInfo)
      commentId: M:TowerDefense.Level.PlayerHomeBase.OnDamaged(HealthChangeInfo)
      language: CSharp
      name:
        CSharp: OnDamaged(HealthChangeInfo)
        VB: OnDamaged(HealthChangeInfo)
      nameWithType:
        CSharp: PlayerHomeBase.OnDamaged(HealthChangeInfo)
        VB: PlayerHomeBase.OnDamaged(HealthChangeInfo)
      qualifiedName:
        CSharp: TowerDefense.Level.PlayerHomeBase.OnDamaged(HealthChangeInfo)
        VB: TowerDefense.Level.PlayerHomeBase.OnDamaged(HealthChangeInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: OnDamaged
        path: ''
        startLine: 3102
      summary: "\nPlays <xref href=\"TowerDefense.Level.PlayerHomeBase.attackPfx\" data-throw-if-not-resolved=\"false\"></xref> if assigned\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDamaged(HealthChangeInfo obj)
          VB: Protected Overridable Sub OnDamaged(obj As HealthChangeInfo)
        parameters:
        - id: obj
          type: HealthChangeInfo
      overload: TowerDefense.Level.PlayerHomeBase.OnDamaged*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Level.PlayerHomeBase.attackPfx: 
  - id: TowerDefense.Level.SpawnInstruction
    commentId: T:TowerDefense.Level.SpawnInstruction
    language: CSharp
    name:
      CSharp: SpawnInstruction
      VB: SpawnInstruction
    nameWithType:
      CSharp: SpawnInstruction
      VB: SpawnInstruction
    qualifiedName:
      CSharp: TowerDefense.Level.SpawnInstruction
      VB: TowerDefense.Level.SpawnInstruction
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: SpawnInstruction
      path: ''
      startLine: 3193
    summary: "\nSerializable class for specifying properties of spawning an agent\n"
    example: []
    syntax:
      content:
        CSharp: public class SpawnInstruction
        VB: Public Class SpawnInstruction
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.SpawnInstruction.agentConfiguration
      commentId: F:TowerDefense.Level.SpawnInstruction.agentConfiguration
      language: CSharp
      name:
        CSharp: agentConfiguration
        VB: agentConfiguration
      nameWithType:
        CSharp: SpawnInstruction.agentConfiguration
        VB: SpawnInstruction.agentConfiguration
      qualifiedName:
        CSharp: TowerDefense.Level.SpawnInstruction.agentConfiguration
        VB: TowerDefense.Level.SpawnInstruction.agentConfiguration
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: agentConfiguration
        path: ''
        startLine: 3199
      summary: "\nThe agent to spawn - i.e. the monster for the wave\n"
      example: []
      syntax:
        content:
          CSharp: public AgentConfiguration agentConfiguration
          VB: Public agentConfiguration As AgentConfiguration
        return:
          type: AgentConfiguration
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.SpawnInstruction.delayToSpawn
      commentId: F:TowerDefense.Level.SpawnInstruction.delayToSpawn
      language: CSharp
      name:
        CSharp: delayToSpawn
        VB: delayToSpawn
      nameWithType:
        CSharp: SpawnInstruction.delayToSpawn
        VB: SpawnInstruction.delayToSpawn
      qualifiedName:
        CSharp: TowerDefense.Level.SpawnInstruction.delayToSpawn
        VB: TowerDefense.Level.SpawnInstruction.delayToSpawn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: delayToSpawn
        path: ''
        startLine: 3205
      summary: "\nThe delay from the previous spawn until when this agent is spawned\n"
      example: []
      syntax:
        content:
          CSharp: public float delayToSpawn
          VB: Public delayToSpawn As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.SpawnInstruction.startingNode
      commentId: F:TowerDefense.Level.SpawnInstruction.startingNode
      language: CSharp
      name:
        CSharp: startingNode
        VB: startingNode
      nameWithType:
        CSharp: SpawnInstruction.startingNode
        VB: SpawnInstruction.startingNode
      qualifiedName:
        CSharp: TowerDefense.Level.SpawnInstruction.startingNode
        VB: TowerDefense.Level.SpawnInstruction.startingNode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: startingNode
        path: ''
        startLine: 3210
      summary: "\nThe starting node, where the agent is spawned\n"
      example: []
      syntax:
        content:
          CSharp: public Node startingNode
          VB: Public startingNode As Node
        return:
          type: Node
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Level.TimedLevelIntro
    commentId: T:TowerDefense.Level.TimedLevelIntro
    language: CSharp
    name:
      CSharp: TimedLevelIntro
      VB: TimedLevelIntro
    nameWithType:
      CSharp: TimedLevelIntro
      VB: TimedLevelIntro
    qualifiedName:
      CSharp: TowerDefense.Level.TimedLevelIntro
      VB: TowerDefense.Level.TimedLevelIntro
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: TimedLevelIntro
      path: ''
      startLine: 3221
    summary: "\nBasic implementation of intro: a delay\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TimedLevelIntro : LevelIntro'
        VB: >-
          Public Class TimedLevelIntro

              Inherits LevelIntro
    inheritance:
    - System.Object
    - TowerDefense.Level.LevelIntro
    inheritedMembers:
    - TowerDefense.Level.LevelIntro.introCompleted
    - TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.TimedLevelIntro.time
      commentId: F:TowerDefense.Level.TimedLevelIntro.time
      language: CSharp
      name:
        CSharp: time
        VB: time
      nameWithType:
        CSharp: TimedLevelIntro.time
        VB: TimedLevelIntro.time
      qualifiedName:
        CSharp: TowerDefense.Level.TimedLevelIntro.time
        VB: TowerDefense.Level.TimedLevelIntro.time
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: time
        path: ''
        startLine: 3226
      summary: "\nThe delay\n"
      example: []
      syntax:
        content:
          CSharp: public float time
          VB: Public time As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.TimedLevelIntro.m_Timer
      commentId: F:TowerDefense.Level.TimedLevelIntro.m_Timer
      language: CSharp
      name:
        CSharp: m_Timer
        VB: m_Timer
      nameWithType:
        CSharp: TimedLevelIntro.m_Timer
        VB: TimedLevelIntro.m_Timer
      qualifiedName:
        CSharp: TowerDefense.Level.TimedLevelIntro.m_Timer
        VB: TowerDefense.Level.TimedLevelIntro.m_Timer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: m_Timer
        path: ''
        startLine: 3231
      summary: "\nTimer object used to track the delayed\n"
      example: []
      syntax:
        content:
          CSharp: protected Timer m_Timer
          VB: Protected m_Timer As Timer
        return:
          type: Timer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.TimedLevelIntro.Awake
      commentId: M:TowerDefense.Level.TimedLevelIntro.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: TimedLevelIntro.Awake()
        VB: TimedLevelIntro.Awake()
      qualifiedName:
        CSharp: TowerDefense.Level.TimedLevelIntro.Awake()
        VB: TowerDefense.Level.TimedLevelIntro.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Awake
        path: ''
        startLine: 3236
      summary: "\nSet up the timer and make it fire the SafelyCallIntroCompleted event\n"
      example: []
      syntax:
        content:
          CSharp: protected void Awake()
          VB: Protected Sub Awake
      overload: TowerDefense.Level.TimedLevelIntro.Awake*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.TimedLevelIntro.Update
      commentId: M:TowerDefense.Level.TimedLevelIntro.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TimedLevelIntro.Update()
        VB: TimedLevelIntro.Update()
      qualifiedName:
        CSharp: TowerDefense.Level.TimedLevelIntro.Update()
        VB: TowerDefense.Level.TimedLevelIntro.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Update
        path: ''
        startLine: 3244
      summary: "\nTick the timer and disable it on completion\n"
      example: []
      syntax:
        content:
          CSharp: protected void Update()
          VB: Protected Sub Update
      overload: TowerDefense.Level.TimedLevelIntro.Update*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.Level.TimedWave
    commentId: T:TowerDefense.Level.TimedWave
    language: CSharp
    name:
      CSharp: TimedWave
      VB: TimedWave
    nameWithType:
      CSharp: TimedWave
      VB: TimedWave
    qualifiedName:
      CSharp: TowerDefense.Level.TimedWave
      VB: TowerDefense.Level.TimedWave
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: TimedWave
      path: ''
      startLine: 3264
    summary: "\nA wave implementation that triggers the waveCompleted event after an elapsed amount of time\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TimedWave : Wave'
        VB: >-
          Public Class TimedWave

              Inherits Wave
    inheritance:
    - System.Object
    - TowerDefense.Level.Wave
    inheritedMembers:
    - TowerDefense.Level.Wave.spawnInstructions
    - TowerDefense.Level.Wave.m_CurrentIndex
    - TowerDefense.Level.Wave.m_SpawnTimer
    - TowerDefense.Level.Wave.waveCompleted
    - TowerDefense.Level.Wave.Spawn
    - TowerDefense.Level.Wave.TrySetupNextSpawn
    - TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node)
    - TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.TimedWave.timeToNextWave
      commentId: F:TowerDefense.Level.TimedWave.timeToNextWave
      language: CSharp
      name:
        CSharp: timeToNextWave
        VB: timeToNextWave
      nameWithType:
        CSharp: TimedWave.timeToNextWave
        VB: TimedWave.timeToNextWave
      qualifiedName:
        CSharp: TowerDefense.Level.TimedWave.timeToNextWave
        VB: TowerDefense.Level.TimedWave.timeToNextWave
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: timeToNextWave
        path: ''
        startLine: 3270
      summary: "\nThe time until the next wave is started\n"
      example: []
      syntax:
        content:
          CSharp: public float timeToNextWave
          VB: Public timeToNextWave As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.TimedWave.m_WaveTimer
      commentId: F:TowerDefense.Level.TimedWave.m_WaveTimer
      language: CSharp
      name:
        CSharp: m_WaveTimer
        VB: m_WaveTimer
      nameWithType:
        CSharp: TimedWave.m_WaveTimer
        VB: TimedWave.m_WaveTimer
      qualifiedName:
        CSharp: TowerDefense.Level.TimedWave.m_WaveTimer
        VB: TowerDefense.Level.TimedWave.m_WaveTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: m_WaveTimer
        path: ''
        startLine: 3275
      summary: "\nThe timer used to start the next wave\n"
      example: []
      syntax:
        content:
          CSharp: protected Timer m_WaveTimer
          VB: Protected m_WaveTimer As Timer
        return:
          type: Timer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.TimedWave.progress
      commentId: P:TowerDefense.Level.TimedWave.progress
      language: CSharp
      name:
        CSharp: progress
        VB: progress
      nameWithType:
        CSharp: TimedWave.progress
        VB: TimedWave.progress
      qualifiedName:
        CSharp: TowerDefense.Level.TimedWave.progress
        VB: TowerDefense.Level.TimedWave.progress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: progress
        path: ''
        startLine: 3277
      syntax:
        content:
          CSharp: public override float progress { get; }
          VB: Public Overrides ReadOnly Property progress As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Level.TimedWave.progress*
      overridden: TowerDefense.Level.Wave.progress
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: TowerDefense.Level.TimedWave.Init
      commentId: M:TowerDefense.Level.TimedWave.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: TimedWave.Init()
        VB: TimedWave.Init()
      qualifiedName:
        CSharp: TowerDefense.Level.TimedWave.Init()
        VB: TowerDefense.Level.TimedWave.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Init
        path: ''
        startLine: 3285
      summary: "\nInitializes the Wave\n"
      example: []
      syntax:
        content:
          CSharp: public override void Init()
          VB: Public Overrides Sub Init
      overload: TowerDefense.Level.TimedWave.Init*
      overridden: TowerDefense.Level.Wave.Init
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Level.TimedWave.SpawnCurrent
      commentId: M:TowerDefense.Level.TimedWave.SpawnCurrent
      language: CSharp
      name:
        CSharp: SpawnCurrent()
        VB: SpawnCurrent()
      nameWithType:
        CSharp: TimedWave.SpawnCurrent()
        VB: TimedWave.SpawnCurrent()
      qualifiedName:
        CSharp: TowerDefense.Level.TimedWave.SpawnCurrent()
        VB: TowerDefense.Level.TimedWave.SpawnCurrent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SpawnCurrent
        path: ''
        startLine: 3299
      summary: "\nHandles spawning the current agent and sets up the next agent for spawning\n"
      example: []
      syntax:
        content:
          CSharp: protected override void SpawnCurrent()
          VB: Protected Overrides Sub SpawnCurrent
      overload: TowerDefense.Level.TimedWave.SpawnCurrent*
      overridden: TowerDefense.Level.Wave.SpawnCurrent
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: TowerDefense.Level.Wave
    commentId: T:TowerDefense.Level.Wave
    language: CSharp
    name:
      CSharp: Wave
      VB: Wave
    nameWithType:
      CSharp: Wave
      VB: Wave
    qualifiedName:
      CSharp: TowerDefense.Level.Wave
      VB: TowerDefense.Level.Wave
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: Wave
      path: ''
      startLine: 3323
    summary: "\nA Wave is a TimedBehaviour, that uses the RepeatingTimer to spawn enemies\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Wave : TimedBehaviour'
        VB: >-
          Public Class Wave

              Inherits TimedBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.Wave.spawnInstructions
      commentId: F:TowerDefense.Level.Wave.spawnInstructions
      language: CSharp
      name:
        CSharp: spawnInstructions
        VB: spawnInstructions
      nameWithType:
        CSharp: Wave.spawnInstructions
        VB: Wave.spawnInstructions
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.spawnInstructions
        VB: TowerDefense.Level.Wave.spawnInstructions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: spawnInstructions
        path: ''
        startLine: 3328
      summary: "\nA list of instructions on how to spawn enemies\n"
      example: []
      syntax:
        content:
          CSharp: public List<SpawnInstruction> spawnInstructions
          VB: Public spawnInstructions As List(Of SpawnInstruction)
        return:
          type: List{TowerDefense.Level.SpawnInstruction}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.Wave.m_CurrentIndex
      commentId: F:TowerDefense.Level.Wave.m_CurrentIndex
      language: CSharp
      name:
        CSharp: m_CurrentIndex
        VB: m_CurrentIndex
      nameWithType:
        CSharp: Wave.m_CurrentIndex
        VB: Wave.m_CurrentIndex
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.m_CurrentIndex
        VB: TowerDefense.Level.Wave.m_CurrentIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: m_CurrentIndex
        path: ''
        startLine: 3333
      summary: "\nThe index of the current enemy to spawn\n"
      example: []
      syntax:
        content:
          CSharp: protected int m_CurrentIndex
          VB: Protected m_CurrentIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.Wave.m_SpawnTimer
      commentId: F:TowerDefense.Level.Wave.m_SpawnTimer
      language: CSharp
      name:
        CSharp: m_SpawnTimer
        VB: m_SpawnTimer
      nameWithType:
        CSharp: Wave.m_SpawnTimer
        VB: Wave.m_SpawnTimer
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.m_SpawnTimer
        VB: TowerDefense.Level.Wave.m_SpawnTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: m_SpawnTimer
        path: ''
        startLine: 3338
      summary: "\nThe RepeatingTimer used to spawn enemies\n"
      example: []
      syntax:
        content:
          CSharp: protected RepeatingTimer m_SpawnTimer
          VB: Protected m_SpawnTimer As RepeatingTimer
        return:
          type: RepeatingTimer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.Wave.waveCompleted
      commentId: E:TowerDefense.Level.Wave.waveCompleted
      language: CSharp
      name:
        CSharp: waveCompleted
        VB: waveCompleted
      nameWithType:
        CSharp: Wave.waveCompleted
        VB: Wave.waveCompleted
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.waveCompleted
        VB: TowerDefense.Level.Wave.waveCompleted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: waveCompleted
        path: ''
        startLine: 3343
      summary: "\nThe event that is fired when a Wave is completed\n"
      example: []
      syntax:
        content:
          CSharp: public event Action waveCompleted
          VB: Public Event waveCompleted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.Wave.progress
      commentId: P:TowerDefense.Level.Wave.progress
      language: CSharp
      name:
        CSharp: progress
        VB: progress
      nameWithType:
        CSharp: Wave.progress
        VB: Wave.progress
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.progress
        VB: TowerDefense.Level.Wave.progress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: progress
        path: ''
        startLine: 3345
      syntax:
        content:
          CSharp: public virtual float progress { get; }
          VB: Public Overridable ReadOnly Property progress As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Level.Wave.progress*
      modifiers:
        CSharp:
        - public
        - virtual
        - get
        VB:
        - Public
        - Overridable
        - ReadOnly
    - id: TowerDefense.Level.Wave.Init
      commentId: M:TowerDefense.Level.Wave.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: Wave.Init()
        VB: Wave.Init()
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.Init()
        VB: TowerDefense.Level.Wave.Init()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Init
        path: ''
        startLine: 3353
      summary: "\nInitializes the Wave\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Init()
          VB: Public Overridable Sub Init
      overload: TowerDefense.Level.Wave.Init*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Level.Wave.SpawnCurrent
      commentId: M:TowerDefense.Level.Wave.SpawnCurrent
      language: CSharp
      name:
        CSharp: SpawnCurrent()
        VB: SpawnCurrent()
      nameWithType:
        CSharp: Wave.SpawnCurrent()
        VB: Wave.SpawnCurrent()
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.SpawnCurrent()
        VB: TowerDefense.Level.Wave.SpawnCurrent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SpawnCurrent
        path: ''
        startLine: 3370
      summary: "\nHandles spawning the current agent and sets up the next agent for spawning\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SpawnCurrent()
          VB: Protected Overridable Sub SpawnCurrent
      overload: TowerDefense.Level.Wave.SpawnCurrent*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.Wave.Spawn
      commentId: M:TowerDefense.Level.Wave.Spawn
      language: CSharp
      name:
        CSharp: Spawn()
        VB: Spawn()
      nameWithType:
        CSharp: Wave.Spawn()
        VB: Wave.Spawn()
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.Spawn()
        VB: TowerDefense.Level.Wave.Spawn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Spawn
        path: ''
        startLine: 3385
      summary: "\nSpawns the current agent\n"
      example: []
      syntax:
        content:
          CSharp: protected void Spawn()
          VB: Protected Sub Spawn
      overload: TowerDefense.Level.Wave.Spawn*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.Wave.TrySetupNextSpawn
      commentId: M:TowerDefense.Level.Wave.TrySetupNextSpawn
      language: CSharp
      name:
        CSharp: TrySetupNextSpawn()
        VB: TrySetupNextSpawn()
      nameWithType:
        CSharp: Wave.TrySetupNextSpawn()
        VB: Wave.TrySetupNextSpawn()
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.TrySetupNextSpawn()
        VB: TowerDefense.Level.Wave.TrySetupNextSpawn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: TrySetupNextSpawn
        path: ''
        startLine: 3395
      summary: "\nTries to setup the next spawn\n"
      example: []
      syntax:
        content:
          CSharp: protected bool TrySetupNextSpawn()
          VB: Protected Function TrySetupNextSpawn As Boolean
        return:
          type: System.Boolean
          description: true if there is another spawn instruction, false if not
      overload: TowerDefense.Level.Wave.TrySetupNextSpawn*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node)
      commentId: M:TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node)
      language: CSharp
      name:
        CSharp: SpawnAgent(AgentConfiguration, Node)
        VB: SpawnAgent(AgentConfiguration, Node)
      nameWithType:
        CSharp: Wave.SpawnAgent(AgentConfiguration, Node)
        VB: Wave.SpawnAgent(AgentConfiguration, Node)
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration, Node)
        VB: TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration, Node)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SpawnAgent
        path: ''
        startLine: 3419
      summary: "\nSpawns the agent\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SpawnAgent(AgentConfiguration agentConfig, Node node)
          VB: Protected Overridable Sub SpawnAgent(agentConfig As AgentConfiguration, node As Node)
        parameters:
        - id: agentConfig
          type: AgentConfiguration
          description: The agent to spawn
        - id: node
          type: Node
          description: The starting node that the agent uses
      overload: TowerDefense.Level.Wave.SpawnAgent*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
      commentId: M:TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
      language: CSharp
      name:
        CSharp: SafelyBroadcastWaveCompletedEvent()
        VB: SafelyBroadcastWaveCompletedEvent()
      nameWithType:
        CSharp: Wave.SafelyBroadcastWaveCompletedEvent()
        VB: Wave.SafelyBroadcastWaveCompletedEvent()
      qualifiedName:
        CSharp: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent()
        VB: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SafelyBroadcastWaveCompletedEvent
        path: ''
        startLine: 3438
      summary: "\nLaunch the waveCompleted event\n"
      example: []
      syntax:
        content:
          CSharp: protected void SafelyBroadcastWaveCompletedEvent()
          VB: Protected Sub SafelyBroadcastWaveCompletedEvent
      overload: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.Level.WaveManager
    commentId: T:TowerDefense.Level.WaveManager
    language: CSharp
    name:
      CSharp: WaveManager
      VB: WaveManager
    nameWithType:
      CSharp: WaveManager
      VB: WaveManager
    qualifiedName:
      CSharp: TowerDefense.Level.WaveManager
      VB: TowerDefense.Level.WaveManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level
    source:
      id: WaveManager
      path: ''
      startLine: 3457
    summary: "\nWaveManager - handles wave initialisation and completion\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WaveManager : MonoBehaviour'
        VB: >-
          Public Class WaveManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.WaveManager.m_CurrentIndex
      commentId: F:TowerDefense.Level.WaveManager.m_CurrentIndex
      language: CSharp
      name:
        CSharp: m_CurrentIndex
        VB: m_CurrentIndex
      nameWithType:
        CSharp: WaveManager.m_CurrentIndex
        VB: WaveManager.m_CurrentIndex
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.m_CurrentIndex
        VB: TowerDefense.Level.WaveManager.m_CurrentIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: m_CurrentIndex
        path: ''
        startLine: 3462
      summary: "\nCurrent wave being used\n"
      example: []
      syntax:
        content:
          CSharp: protected int m_CurrentIndex
          VB: Protected m_CurrentIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Level.WaveManager.startWavesOnAwake
      commentId: F:TowerDefense.Level.WaveManager.startWavesOnAwake
      language: CSharp
      name:
        CSharp: startWavesOnAwake
        VB: startWavesOnAwake
      nameWithType:
        CSharp: WaveManager.startWavesOnAwake
        VB: WaveManager.startWavesOnAwake
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.startWavesOnAwake
        VB: TowerDefense.Level.WaveManager.startWavesOnAwake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: startWavesOnAwake
        path: ''
        startLine: 3467
      summary: "\nWhether the WaveManager starts waves on Awake - defaulted to null since the LevelManager should call this function\n"
      example: []
      syntax:
        content:
          CSharp: public bool startWavesOnAwake
          VB: Public startWavesOnAwake As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.WaveManager.waves
      commentId: F:TowerDefense.Level.WaveManager.waves
      language: CSharp
      name:
        CSharp: waves
        VB: waves
      nameWithType:
        CSharp: WaveManager.waves
        VB: WaveManager.waves
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.waves
        VB: TowerDefense.Level.WaveManager.waves
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: waves
        path: ''
        startLine: 3473
      summary: "\nThe waves to run in order\n"
      example: []
      syntax:
        content:
          CSharp: public List<Wave> waves
          VB: Public waves As List(Of Wave)
        return:
          type: List{TowerDefense.Level.Wave}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.WaveManager.waveNumber
      commentId: P:TowerDefense.Level.WaveManager.waveNumber
      language: CSharp
      name:
        CSharp: waveNumber
        VB: waveNumber
      nameWithType:
        CSharp: WaveManager.waveNumber
        VB: WaveManager.waveNumber
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.waveNumber
        VB: TowerDefense.Level.WaveManager.waveNumber
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: waveNumber
        path: ''
        startLine: 3478
      summary: "\nThe current wave number\n"
      example: []
      syntax:
        content:
          CSharp: public int waveNumber { get; }
          VB: Public ReadOnly Property waveNumber As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Level.WaveManager.waveNumber*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Level.WaveManager.totalWaves
      commentId: P:TowerDefense.Level.WaveManager.totalWaves
      language: CSharp
      name:
        CSharp: totalWaves
        VB: totalWaves
      nameWithType:
        CSharp: WaveManager.totalWaves
        VB: WaveManager.totalWaves
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.totalWaves
        VB: TowerDefense.Level.WaveManager.totalWaves
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: totalWaves
        path: ''
        startLine: 3486
      summary: "\nThe total number of waves\n"
      example: []
      syntax:
        content:
          CSharp: public int totalWaves { get; }
          VB: Public ReadOnly Property totalWaves As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Level.WaveManager.totalWaves*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Level.WaveManager.waveProgress
      commentId: P:TowerDefense.Level.WaveManager.waveProgress
      language: CSharp
      name:
        CSharp: waveProgress
        VB: waveProgress
      nameWithType:
        CSharp: WaveManager.waveProgress
        VB: WaveManager.waveProgress
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.waveProgress
        VB: TowerDefense.Level.WaveManager.waveProgress
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: waveProgress
        path: ''
        startLine: 3491
      syntax:
        content:
          CSharp: public float waveProgress { get; }
          VB: Public ReadOnly Property waveProgress As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Level.WaveManager.waveProgress*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Level.WaveManager.waveChanged
      commentId: E:TowerDefense.Level.WaveManager.waveChanged
      language: CSharp
      name:
        CSharp: waveChanged
        VB: waveChanged
      nameWithType:
        CSharp: WaveManager.waveChanged
        VB: WaveManager.waveChanged
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.waveChanged
        VB: TowerDefense.Level.WaveManager.waveChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: waveChanged
        path: ''
        startLine: 3506
      summary: "\nCalled when a wave begins\n"
      example: []
      syntax:
        content:
          CSharp: public event Action waveChanged
          VB: Public Event waveChanged As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.WaveManager.spawningCompleted
      commentId: E:TowerDefense.Level.WaveManager.spawningCompleted
      language: CSharp
      name:
        CSharp: spawningCompleted
        VB: spawningCompleted
      nameWithType:
        CSharp: WaveManager.spawningCompleted
        VB: WaveManager.spawningCompleted
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.spawningCompleted
        VB: TowerDefense.Level.WaveManager.spawningCompleted
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: spawningCompleted
        path: ''
        startLine: 3511
      summary: "\nCalled when all waves are finished\n"
      example: []
      syntax:
        content:
          CSharp: public event Action spawningCompleted
          VB: Public Event spawningCompleted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Level.WaveManager.StartWaves
      commentId: M:TowerDefense.Level.WaveManager.StartWaves
      language: CSharp
      name:
        CSharp: StartWaves()
        VB: StartWaves()
      nameWithType:
        CSharp: WaveManager.StartWaves()
        VB: WaveManager.StartWaves()
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.StartWaves()
        VB: TowerDefense.Level.WaveManager.StartWaves()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: StartWaves
        path: ''
        startLine: 3516
      summary: "\nStarts the waves\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void StartWaves()
          VB: Public Overridable Sub StartWaves
      overload: TowerDefense.Level.WaveManager.StartWaves*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Level.WaveManager.Awake
      commentId: M:TowerDefense.Level.WaveManager.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: WaveManager.Awake()
        VB: WaveManager.Awake()
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.Awake()
        VB: TowerDefense.Level.WaveManager.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: Awake
        path: ''
        startLine: 3532
      summary: "\nInits the first wave\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Level.WaveManager.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.WaveManager.NextWave
      commentId: M:TowerDefense.Level.WaveManager.NextWave
      language: CSharp
      name:
        CSharp: NextWave()
        VB: NextWave()
      nameWithType:
        CSharp: WaveManager.NextWave()
        VB: WaveManager.NextWave()
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.NextWave()
        VB: TowerDefense.Level.WaveManager.NextWave()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: NextWave
        path: ''
        startLine: 3543
      summary: "\nSets up the next wave\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void NextWave()
          VB: Protected Overridable Sub NextWave
      overload: TowerDefense.Level.WaveManager.NextWave*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.WaveManager.InitCurrentWave
      commentId: M:TowerDefense.Level.WaveManager.InitCurrentWave
      language: CSharp
      name:
        CSharp: InitCurrentWave()
        VB: InitCurrentWave()
      nameWithType:
        CSharp: WaveManager.InitCurrentWave()
        VB: WaveManager.InitCurrentWave()
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.InitCurrentWave()
        VB: TowerDefense.Level.WaveManager.InitCurrentWave()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: InitCurrentWave
        path: ''
        startLine: 3559
      summary: "\nInitialize the current wave\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void InitCurrentWave()
          VB: Protected Overridable Sub InitCurrentWave
      overload: TowerDefense.Level.WaveManager.InitCurrentWave*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted
      commentId: M:TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted
      language: CSharp
      name:
        CSharp: SafelyCallSpawningCompleted()
        VB: SafelyCallSpawningCompleted()
      nameWithType:
        CSharp: WaveManager.SafelyCallSpawningCompleted()
        VB: WaveManager.SafelyCallSpawningCompleted()
      qualifiedName:
        CSharp: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted()
        VB: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level
      source:
        id: SafelyCallSpawningCompleted
        path: ''
        startLine: 3573
      summary: "\nCalls spawningCompleted event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void SafelyCallSpawningCompleted()
          VB: Protected Overridable Sub SafelyCallSpawningCompleted
      overload: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: TowerDefense.Level.Editor
  commentId: N:TowerDefense.Level.Editor
  language: CSharp
  name:
    CSharp: TowerDefense.Level.Editor
    VB: TowerDefense.Level.Editor
  nameWithType:
    CSharp: TowerDefense.Level.Editor
    VB: TowerDefense.Level.Editor
  qualifiedName:
    CSharp: TowerDefense.Level.Editor
    VB: TowerDefense.Level.Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Level.Editor.WaveEditor
    commentId: T:TowerDefense.Level.Editor.WaveEditor
    language: CSharp
    name:
      CSharp: WaveEditor
      VB: WaveEditor
    nameWithType:
      CSharp: WaveEditor
      VB: WaveEditor
    qualifiedName:
      CSharp: TowerDefense.Level.Editor.WaveEditor
      VB: TowerDefense.Level.Editor.WaveEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Level.Editor
    source:
      id: WaveEditor
      path: ''
      startLine: 3591
    summary: "\nCustom editor to display wave time sum\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WaveEditor : UnityEditor.Editor'
        VB: >-
          Public Class WaveEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI
      commentId: M:TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: WaveEditor.OnInspectorGUI()
        VB: WaveEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI()
        VB: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Level.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 3601
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: TowerDefense.MeshCreator
  commentId: N:TowerDefense.MeshCreator
  language: CSharp
  name:
    CSharp: TowerDefense.MeshCreator
    VB: TowerDefense.MeshCreator
  nameWithType:
    CSharp: TowerDefense.MeshCreator
    VB: TowerDefense.MeshCreator
  qualifiedName:
    CSharp: TowerDefense.MeshCreator
    VB: TowerDefense.MeshCreator
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.MeshCreator.AreaMeshCreator
    commentId: T:TowerDefense.MeshCreator.AreaMeshCreator
    language: CSharp
    name:
      CSharp: AreaMeshCreator
      VB: AreaMeshCreator
    nameWithType:
      CSharp: AreaMeshCreator
      VB: AreaMeshCreator
    qualifiedName:
      CSharp: TowerDefense.MeshCreator.AreaMeshCreator
      VB: TowerDefense.MeshCreator.AreaMeshCreator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.MeshCreator
    source:
      id: AreaMeshCreator
      path: ''
      startLine: 3646
    summary: "\nCreates a Mesh that represents an area\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AreaMeshCreator : MonoBehaviour'
        VB: >-
          Public Class AreaMeshCreator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.MeshCreator.AreaMeshCreator.meshObject
      commentId: F:TowerDefense.MeshCreator.AreaMeshCreator.meshObject
      language: CSharp
      name:
        CSharp: meshObject
        VB: meshObject
      nameWithType:
        CSharp: AreaMeshCreator.meshObject
        VB: AreaMeshCreator.meshObject
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.AreaMeshCreator.meshObject
        VB: TowerDefense.MeshCreator.AreaMeshCreator.meshObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: meshObject
        path: ''
        startLine: 3650
      syntax:
        content:
          CSharp: public MeshObject meshObject
          VB: Public meshObject As MeshObject
        return:
          type: TowerDefense.MeshCreator.MeshObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.AreaMeshCreator.outSidePointsParent
      commentId: F:TowerDefense.MeshCreator.AreaMeshCreator.outSidePointsParent
      language: CSharp
      name:
        CSharp: outSidePointsParent
        VB: outSidePointsParent
      nameWithType:
        CSharp: AreaMeshCreator.outSidePointsParent
        VB: AreaMeshCreator.outSidePointsParent
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.AreaMeshCreator.outSidePointsParent
        VB: TowerDefense.MeshCreator.AreaMeshCreator.outSidePointsParent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: outSidePointsParent
        path: ''
        startLine: 3652
      syntax:
        content:
          CSharp: public Transform outSidePointsParent
          VB: Public outSidePointsParent As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
      commentId: P:TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
      language: CSharp
      name:
        CSharp: pointsCenter
        VB: pointsCenter
      nameWithType:
        CSharp: AreaMeshCreator.pointsCenter
        VB: AreaMeshCreator.pointsCenter
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
        VB: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: pointsCenter
        path: ''
        startLine: 3657
      summary: "\nThe parent transform of points in the mesh\n"
      example: []
      syntax:
        content:
          CSharp: public Transform pointsCenter { get; }
          VB: Public ReadOnly Property pointsCenter As Transform
        parameters: []
        return:
          type: Transform
      overload: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints
      commentId: M:TowerDefense.MeshCreator.AreaMeshCreator.GetPoints
      language: CSharp
      name:
        CSharp: GetPoints()
        VB: GetPoints()
      nameWithType:
        CSharp: AreaMeshCreator.GetPoints()
        VB: AreaMeshCreator.GetPoints()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints()
        VB: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: GetPoints
        path: ''
        startLine: 3698
      summary: "\nGet a list of Vector3s that correspond to the positions of the points in this mesh\n"
      example: []
      syntax:
        content:
          CSharp: public List<Vector3> GetPoints()
          VB: Public Function GetPoints As List(Of Vector3)
        return:
          type: List{Vector3}
          description: List of Points
      overload: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside
      commentId: M:TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside
      language: CSharp
      name:
        CSharp: GetRandomPointInside()
        VB: GetRandomPointInside()
      nameWithType:
        CSharp: AreaMeshCreator.GetRandomPointInside()
        VB: AreaMeshCreator.GetRandomPointInside()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside()
        VB: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: GetRandomPointInside
        path: ''
        startLine: 3707
      summary: "\nGets a random Vector3 that lies inside the mesh object\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetRandomPointInside()
          VB: Public Function GetRandomPointInside As Vector3
        return:
          type: Vector3
          description: Random point
      overload: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat
      commentId: M:TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat
      language: CSharp
      name:
        CSharp: ForcePointsFlat()
        VB: ForcePointsFlat()
      nameWithType:
        CSharp: AreaMeshCreator.ForcePointsFlat()
        VB: AreaMeshCreator.ForcePointsFlat()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat()
        VB: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: ForcePointsFlat
        path: ''
        startLine: 3716
      summary: "\nForces all points to have a local &quot;y&quot; position of 0\nMakes them coplanar\n"
      example: []
      syntax:
        content:
          CSharp: public void ForcePointsFlat()
          VB: Public Sub ForcePointsFlat
      overload: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.MeshCreator.Triangle
    commentId: T:TowerDefense.MeshCreator.Triangle
    language: CSharp
    name:
      CSharp: Triangle
      VB: Triangle
    nameWithType:
      CSharp: Triangle
      VB: Triangle
    qualifiedName:
      CSharp: TowerDefense.MeshCreator.Triangle
      VB: TowerDefense.MeshCreator.Triangle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.MeshCreator
    source:
      id: Triangle
      path: ''
      startLine: 3757
    syntax:
      content:
        CSharp: public class Triangle
        VB: Public Class Triangle
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.MeshCreator.Triangle.v0
      commentId: F:TowerDefense.MeshCreator.Triangle.v0
      language: CSharp
      name:
        CSharp: v0
        VB: v0
      nameWithType:
        CSharp: Triangle.v0
        VB: Triangle.v0
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangle.v0
        VB: TowerDefense.MeshCreator.Triangle.v0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: v0
        path: ''
        startLine: 3760
      syntax:
        content:
          CSharp: public Vector3 v0
          VB: Public v0 As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.Triangle.v1
      commentId: F:TowerDefense.MeshCreator.Triangle.v1
      language: CSharp
      name:
        CSharp: v1
        VB: v1
      nameWithType:
        CSharp: Triangle.v1
        VB: Triangle.v1
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangle.v1
        VB: TowerDefense.MeshCreator.Triangle.v1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: v1
        path: ''
        startLine: 3762
      syntax:
        content:
          CSharp: public Vector3 v1
          VB: Public v1 As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.Triangle.v2
      commentId: F:TowerDefense.MeshCreator.Triangle.v2
      language: CSharp
      name:
        CSharp: v2
        VB: v2
      nameWithType:
        CSharp: Triangle.v2
        VB: Triangle.v2
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangle.v2
        VB: TowerDefense.MeshCreator.Triangle.v2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: v2
        path: ''
        startLine: 3764
      syntax:
        content:
          CSharp: public Vector3 v2
          VB: Public v2 As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.Triangle.area
      commentId: F:TowerDefense.MeshCreator.Triangle.area
      language: CSharp
      name:
        CSharp: area
        VB: area
      nameWithType:
        CSharp: Triangle.area
        VB: Triangle.area
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangle.area
        VB: TowerDefense.MeshCreator.Triangle.area
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: area
        path: ''
        startLine: 3766
      syntax:
        content:
          CSharp: public float area
          VB: Public area As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.Triangle.#ctor(Vector3,Vector3,Vector3)
      commentId: M:TowerDefense.MeshCreator.Triangle.#ctor(Vector3,Vector3,Vector3)
      language: CSharp
      name:
        CSharp: Triangle(Vector3, Vector3, Vector3)
        VB: Triangle(Vector3, Vector3, Vector3)
      nameWithType:
        CSharp: Triangle.Triangle(Vector3, Vector3, Vector3)
        VB: Triangle.Triangle(Vector3, Vector3, Vector3)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangle.Triangle(Vector3, Vector3, Vector3)
        VB: TowerDefense.MeshCreator.Triangle.Triangle(Vector3, Vector3, Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: .ctor
        path: ''
        startLine: 3774
      summary: "\nRepresents a Triangle in a mesh\n"
      example: []
      syntax:
        content:
          CSharp: public Triangle(Vector3 v0, Vector3 v1, Vector3 v2)
          VB: Public Sub New(v0 As Vector3, v1 As Vector3, v2 As Vector3)
        parameters:
        - id: v0
          type: Vector3
          description: First Point
        - id: v1
          type: Vector3
          description: Second Point
        - id: v2
          type: Vector3
          description: Third Point
      overload: TowerDefense.MeshCreator.Triangle.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.MeshCreator.MeshObject
    commentId: T:TowerDefense.MeshCreator.MeshObject
    language: CSharp
    name:
      CSharp: MeshObject
      VB: MeshObject
    nameWithType:
      CSharp: MeshObject
      VB: MeshObject
    qualifiedName:
      CSharp: TowerDefense.MeshCreator.MeshObject
      VB: TowerDefense.MeshCreator.MeshObject
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.MeshCreator
    source:
      id: MeshObject
      path: ''
      startLine: 3792
    summary: "\nContains the triangles of the mesh\nCalculates the mesh area\nCan get a random point within the mesh area\n"
    example: []
    syntax:
      content:
        CSharp: public class MeshObject
        VB: Public Class MeshObject
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.MeshCreator.MeshObject.triangles
      commentId: F:TowerDefense.MeshCreator.MeshObject.triangles
      language: CSharp
      name:
        CSharp: triangles
        VB: triangles
      nameWithType:
        CSharp: MeshObject.triangles
        VB: MeshObject.triangles
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.MeshObject.triangles
        VB: TowerDefense.MeshCreator.MeshObject.triangles
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: triangles
        path: ''
        startLine: 3795
      syntax:
        content:
          CSharp: public List<Triangle> triangles
          VB: Public triangles As List(Of Triangle)
        return:
          type: List{TowerDefense.MeshCreator.Triangle}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.MeshObject.completeArea
      commentId: F:TowerDefense.MeshCreator.MeshObject.completeArea
      language: CSharp
      name:
        CSharp: completeArea
        VB: completeArea
      nameWithType:
        CSharp: MeshObject.completeArea
        VB: MeshObject.completeArea
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.MeshObject.completeArea
        VB: TowerDefense.MeshCreator.MeshObject.completeArea
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: completeArea
        path: ''
        startLine: 3797
      syntax:
        content:
          CSharp: public float completeArea
          VB: Public completeArea As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.MeshObject.#ctor(List{TowerDefense.MeshCreator.Triangle})
      commentId: M:TowerDefense.MeshCreator.MeshObject.#ctor(List{TowerDefense.MeshCreator.Triangle})
      language: CSharp
      name:
        CSharp: MeshObject(List<Triangle>)
        VB: MeshObject(List(Of Triangle))
      nameWithType:
        CSharp: MeshObject.MeshObject(List<Triangle>)
        VB: MeshObject.MeshObject(List(Of Triangle))
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.MeshObject.MeshObject(List<TowerDefense.MeshCreator.Triangle>)
        VB: TowerDefense.MeshCreator.MeshObject.MeshObject(List(Of TowerDefense.MeshCreator.Triangle))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: .ctor
        path: ''
        startLine: 3799
      syntax:
        content:
          CSharp: public MeshObject(List<Triangle> triangles)
          VB: Public Sub New(triangles As List(Of Triangle))
        parameters:
        - id: triangles
          type: List{TowerDefense.MeshCreator.Triangle}
      overload: TowerDefense.MeshCreator.MeshObject.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh
      commentId: M:TowerDefense.MeshCreator.MeshObject.RandomPointInMesh
      language: CSharp
      name:
        CSharp: RandomPointInMesh()
        VB: RandomPointInMesh()
      nameWithType:
        CSharp: MeshObject.RandomPointInMesh()
        VB: MeshObject.RandomPointInMesh()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh()
        VB: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: RandomPointInMesh
        path: ''
        startLine: 3809
      summary: "\nGets a random point in the mesh\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 RandomPointInMesh()
          VB: Public Function RandomPointInMesh As Vector3
        return:
          type: Vector3
          description: Random point
      overload: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.MeshCreator.Triangulator
    commentId: T:TowerDefense.MeshCreator.Triangulator
    language: CSharp
    name:
      CSharp: Triangulator
      VB: Triangulator
    nameWithType:
      CSharp: Triangulator
      VB: Triangulator
    qualifiedName:
      CSharp: TowerDefense.MeshCreator.Triangulator
      VB: TowerDefense.MeshCreator.Triangulator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.MeshCreator
    source:
      id: Triangulator
      path: ''
      startLine: 3832
    syntax:
      content:
        CSharp: public class Triangulator
        VB: Public Class Triangulator
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.MeshCreator.Triangulator.#ctor(Vector2[])
      commentId: M:TowerDefense.MeshCreator.Triangulator.#ctor(Vector2[])
      language: CSharp
      name:
        CSharp: Triangulator(Vector2[])
        VB: Triangulator(Vector2())
      nameWithType:
        CSharp: Triangulator.Triangulator(Vector2[])
        VB: Triangulator.Triangulator(Vector2())
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangulator.Triangulator(Vector2[])
        VB: TowerDefense.MeshCreator.Triangulator.Triangulator(Vector2())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: .ctor
        path: ''
        startLine: 3836
      syntax:
        content:
          CSharp: public Triangulator(Vector2[] points)
          VB: Public Sub New(points As Vector2())
        parameters:
        - id: points
          type: Vector2[]
      overload: TowerDefense.MeshCreator.Triangulator.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.MeshCreator.Triangulator.Triangulate
      commentId: M:TowerDefense.MeshCreator.Triangulator.Triangulate
      language: CSharp
      name:
        CSharp: Triangulate()
        VB: Triangulate()
      nameWithType:
        CSharp: Triangulator.Triangulate()
        VB: Triangulator.Triangulate()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Triangulator.Triangulate()
        VB: TowerDefense.MeshCreator.Triangulator.Triangulate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator
      source:
        id: Triangulate
        path: ''
        startLine: 3845
      summary: "\nTriangulates the mesh\n"
      example: []
      syntax:
        content:
          CSharp: public int[] Triangulate()
          VB: Public Function Triangulate As Integer()
        return:
          type: System.Int32[]
          description: Array of triangle indices
      overload: TowerDefense.MeshCreator.Triangulator.Triangulate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TowerDefense.MeshCreator.Editor
  commentId: N:TowerDefense.MeshCreator.Editor
  language: CSharp
  name:
    CSharp: TowerDefense.MeshCreator.Editor
    VB: TowerDefense.MeshCreator.Editor
  nameWithType:
    CSharp: TowerDefense.MeshCreator.Editor
    VB: TowerDefense.MeshCreator.Editor
  qualifiedName:
    CSharp: TowerDefense.MeshCreator.Editor
    VB: TowerDefense.MeshCreator.Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
    commentId: T:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
    language: CSharp
    name:
      CSharp: AreaMeshCreatorEditor
      VB: AreaMeshCreatorEditor
    nameWithType:
      CSharp: AreaMeshCreatorEditor
      VB: AreaMeshCreatorEditor
    qualifiedName:
      CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
      VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.MeshCreator.Editor
    source:
      id: AreaMeshCreatorEditor
      path: ''
      startLine: 4000
    syntax:
      content:
        CSharp: 'public class AreaMeshCreatorEditor : UnityEditor.Editor'
        VB: >-
          Public Class AreaMeshCreatorEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_AreaMeshCreator
      commentId: F:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_AreaMeshCreator
      language: CSharp
      name:
        CSharp: m_AreaMeshCreator
        VB: m_AreaMeshCreator
      nameWithType:
        CSharp: AreaMeshCreatorEditor.m_AreaMeshCreator
        VB: AreaMeshCreatorEditor.m_AreaMeshCreator
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_AreaMeshCreator
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_AreaMeshCreator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: m_AreaMeshCreator
        path: ''
        startLine: 4003
      syntax:
        content:
          CSharp: protected AreaMeshCreator m_AreaMeshCreator
          VB: Protected m_AreaMeshCreator As AreaMeshCreator
        return:
          type: TowerDefense.MeshCreator.AreaMeshCreator
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_CurrentMeshObject
      commentId: F:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_CurrentMeshObject
      language: CSharp
      name:
        CSharp: m_CurrentMeshObject
        VB: m_CurrentMeshObject
      nameWithType:
        CSharp: AreaMeshCreatorEditor.m_CurrentMeshObject
        VB: AreaMeshCreatorEditor.m_CurrentMeshObject
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_CurrentMeshObject
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_CurrentMeshObject
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: m_CurrentMeshObject
        path: ''
        startLine: 4004
      syntax:
        content:
          CSharp: protected MeshObject m_CurrentMeshObject
          VB: Protected m_CurrentMeshObject As MeshObject
        return:
          type: TowerDefense.MeshCreator.MeshObject
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_SquareSideLength
      commentId: F:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_SquareSideLength
      language: CSharp
      name:
        CSharp: m_SquareSideLength
        VB: m_SquareSideLength
      nameWithType:
        CSharp: AreaMeshCreatorEditor.m_SquareSideLength
        VB: AreaMeshCreatorEditor.m_SquareSideLength
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_SquareSideLength
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_SquareSideLength
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: m_SquareSideLength
        path: ''
        startLine: 4006
      syntax:
        content:
          CSharp: protected float m_SquareSideLength
          VB: Protected m_SquareSideLength As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_OctagonRadius
      commentId: F:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_OctagonRadius
      language: CSharp
      name:
        CSharp: m_OctagonRadius
        VB: m_OctagonRadius
      nameWithType:
        CSharp: AreaMeshCreatorEditor.m_OctagonRadius
        VB: AreaMeshCreatorEditor.m_OctagonRadius
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_OctagonRadius
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.m_OctagonRadius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: m_OctagonRadius
        path: ''
        startLine: 4007
      syntax:
        content:
          CSharp: protected float m_OctagonRadius
          VB: Protected m_OctagonRadius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: AreaMeshCreatorEditor.OnEnable()
        VB: AreaMeshCreatorEditor.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable()
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 4012
      summary: "\nRecreates the mesh when this script becomes active\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnEnable()
          VB: Protected Sub OnEnable
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: AreaMeshCreatorEditor.OnInspectorGUI()
        VB: AreaMeshCreatorEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI()
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 4021
      summary: "\nInspector GUI\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh
      language: CSharp
      name:
        CSharp: CreateMesh()
        VB: CreateMesh()
      nameWithType:
        CSharp: AreaMeshCreatorEditor.CreateMesh()
        VB: AreaMeshCreatorEditor.CreateMesh()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh()
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: CreateMesh
        path: ''
        startLine: 4055
      summary: "\nCreates the mesh from the points currently in the mesh creator\n"
      example: []
      syntax:
        content:
          CSharp: protected void CreateMesh()
          VB: Protected Sub CreateMesh
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat
      language: CSharp
      name:
        CSharp: ForcePointsFlat()
        VB: ForcePointsFlat()
      nameWithType:
        CSharp: AreaMeshCreatorEditor.ForcePointsFlat()
        VB: AreaMeshCreatorEditor.ForcePointsFlat()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat()
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: ForcePointsFlat
        path: ''
        startLine: 4107
      summary: "\nMakes points coplanar\n"
      example: []
      syntax:
        content:
          CSharp: protected void ForcePointsFlat()
          VB: Protected Sub ForcePointsFlat
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint(Transform,Transform)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint(Transform,Transform)
      language: CSharp
      name:
        CSharp: AddPoint(Transform, Transform)
        VB: AddPoint(Transform, Transform)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.AddPoint(Transform, Transform)
        VB: AreaMeshCreatorEditor.AddPoint(Transform, Transform)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint(Transform, Transform)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint(Transform, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: AddPoint
        path: ''
        startLine: 4117
      summary: "\nAdds a new point at the midpoint of 2 other points\n"
      example: []
      syntax:
        content:
          CSharp: protected void AddPoint(Transform point1, Transform point2)
          VB: Protected Sub AddPoint(point1 As Transform, point2 As Transform)
        parameters:
        - id: point1
          type: Transform
          description: First point
        - id: point2
          type: Transform
          description: Second point
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI
      language: CSharp
      name:
        CSharp: OnSceneGUI()
        VB: OnSceneGUI()
      nameWithType:
        CSharp: AreaMeshCreatorEditor.OnSceneGUI()
        VB: AreaMeshCreatorEditor.OnSceneGUI()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI()
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: OnSceneGUI
        path: ''
        startLine: 4143
      summary: "\nDraws and handles input for manipulating the mesh in scene\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnSceneGUI()
          VB: Protected Sub OnSceneGUI
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints(Vector3)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints(Vector3)
      language: CSharp
      name:
        CSharp: GetClosestTwoPoints(Vector3)
        VB: GetClosestTwoPoints(Vector3)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.GetClosestTwoPoints(Vector3)
        VB: AreaMeshCreatorEditor.GetClosestTwoPoints(Vector3)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints(Vector3)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: GetClosestTwoPoints
        path: ''
        startLine: 4226
      summary: "\nGets the 2 closest points to the specified (cursor) position\n"
      example: []
      syntax:
        content:
          CSharp: protected Transform[] GetClosestTwoPoints(Vector3 position)
          VB: Protected Function GetClosestTwoPoints(position As Vector3) As Transform()
        parameters:
        - id: position
          type: Vector3
          description: The position of the cursor
        return:
          type: Transform[]
          description: The 2 closest points to the cursor
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint(Vector3)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint(Vector3)
      language: CSharp
      name:
        CSharp: GetClosetsPoint(Vector3)
        VB: GetClosetsPoint(Vector3)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.GetClosetsPoint(Vector3)
        VB: AreaMeshCreatorEditor.GetClosetsPoint(Vector3)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint(Vector3)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: GetClosetsPoint
        path: ''
        startLine: 4250
      summary: "\nFinds the closest point to the specified (cursor) position\n"
      example: []
      syntax:
        content:
          CSharp: protected Transform GetClosetsPoint(Vector3 position)
          VB: Protected Function GetClosetsPoint(position As Vector3) As Transform
        parameters:
        - id: position
          type: Vector3
          description: The position of the cursor
        return:
          type: Transform
          description: The closest point to the cursor
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint(Transform)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint(Transform)
      language: CSharp
      name:
        CSharp: DeletePoint(Transform)
        VB: DeletePoint(Transform)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.DeletePoint(Transform)
        VB: AreaMeshCreatorEditor.DeletePoint(Transform)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint(Transform)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint(Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: DeletePoint
        path: ''
        startLine: 4260
      summary: "\nDeletes the selected point Transform.\n"
      example: []
      syntax:
        content:
          CSharp: protected void DeletePoint(Transform point)
          VB: Protected Sub DeletePoint(point As Transform)
        parameters:
        - id: point
          type: Transform
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint(Vector3,Vector3)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint(Vector3,Vector3)
      language: CSharp
      name:
        CSharp: Midpoint(Vector3, Vector3)
        VB: Midpoint(Vector3, Vector3)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.Midpoint(Vector3, Vector3)
        VB: AreaMeshCreatorEditor.Midpoint(Vector3, Vector3)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint(Vector3, Vector3)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint(Vector3, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: Midpoint
        path: ''
        startLine: 4271
      summary: "\nGets the midpoint between 2 Vector3&apos;s\n"
      example: []
      syntax:
        content:
          CSharp: protected static Vector3 Midpoint(Vector3 first, Vector3 last)
          VB: Protected Shared Function Midpoint(first As Vector3, last As Vector3) As Vector3
        parameters:
        - id: first
          type: Vector3
          description: First point
        - id: last
          type: Vector3
          description: Last point
        return:
          type: Vector3
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint*
      modifiers:
        CSharp:
        - protected
        - static
        VB:
        - Protected
        - Shared
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints
      language: CSharp
      name:
        CSharp: ClearCurrentPoints()
        VB: ClearCurrentPoints()
      nameWithType:
        CSharp: AreaMeshCreatorEditor.ClearCurrentPoints()
        VB: AreaMeshCreatorEditor.ClearCurrentPoints()
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints()
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: ClearCurrentPoints
        path: ''
        startLine: 4279
      summary: "\nDestroys the current points in the mesh\n"
      example: []
      syntax:
        content:
          CSharp: protected void ClearCurrentPoints()
          VB: Protected Sub ClearCurrentPoints
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint(Vector3)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint(Vector3)
      language: CSharp
      name:
        CSharp: CreateNewPoint(Vector3)
        VB: CreateNewPoint(Vector3)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.CreateNewPoint(Vector3)
        VB: AreaMeshCreatorEditor.CreateNewPoint(Vector3)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint(Vector3)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: CreateNewPoint
        path: ''
        startLine: 4293
      summary: "\nCreates a new point at the specified position\n"
      example: []
      syntax:
        content:
          CSharp: protected void CreateNewPoint(Vector3 position)
          VB: Protected Sub CreateNewPoint(position As Vector3)
        parameters:
        - id: position
          type: Vector3
          description: Position to create the point at
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare(System.Single)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare(System.Single)
      language: CSharp
      name:
        CSharp: SetSquare(Single)
        VB: SetSquare(Single)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.SetSquare(Single)
        VB: AreaMeshCreatorEditor.SetSquare(Single)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare(System.Single)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: SetSquare
        path: ''
        startLine: 4305
      summary: "\nCreates a basic square\n"
      example: []
      syntax:
        content:
          CSharp: protected void SetSquare(float sideLength)
          VB: Protected Sub SetSquare(sideLength As Single)
        parameters:
        - id: sideLength
          type: System.Single
          description: Length of the sides of the square
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon(System.Single)
      commentId: M:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon(System.Single)
      language: CSharp
      name:
        CSharp: SetOctagon(Single)
        VB: SetOctagon(Single)
      nameWithType:
        CSharp: AreaMeshCreatorEditor.SetOctagon(Single)
        VB: AreaMeshCreatorEditor.SetOctagon(Single)
      qualifiedName:
        CSharp: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon(System.Single)
        VB: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.MeshCreator.Editor
      source:
        id: SetOctagon
        path: ''
        startLine: 4321
      summary: "\nCreates an octagon\n"
      example: []
      syntax:
        content:
          CSharp: protected void SetOctagon(float radius)
          VB: Protected Sub SetOctagon(radius As Single)
        parameters:
        - id: radius
          type: System.Single
          description: Radius of the Octagon
      overload: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: TowerDefense.Nodes
  commentId: N:TowerDefense.Nodes
  language: CSharp
  name:
    CSharp: TowerDefense.Nodes
    VB: TowerDefense.Nodes
  nameWithType:
    CSharp: TowerDefense.Nodes
    VB: TowerDefense.Nodes
  qualifiedName:
    CSharp: TowerDefense.Nodes
    VB: TowerDefense.Nodes
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Nodes.FixedNodeSelector
    commentId: T:TowerDefense.Nodes.FixedNodeSelector
    language: CSharp
    name:
      CSharp: FixedNodeSelector
      VB: FixedNodeSelector
    nameWithType:
      CSharp: FixedNodeSelector
      VB: FixedNodeSelector
    qualifiedName:
      CSharp: TowerDefense.Nodes.FixedNodeSelector
      VB: TowerDefense.Nodes.FixedNodeSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Nodes
    source:
      id: FixedNodeSelector
      path: ''
      startLine: 4368
    summary: "\nDeterministically selects a node in the order it appears on the list\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FixedNodeSelector : NodeSelector'
        VB: >-
          Public Class FixedNodeSelector

              Inherits NodeSelector
    inheritance:
    - System.Object
    - TowerDefense.Nodes.NodeSelector
    inheritedMembers:
    - TowerDefense.Nodes.NodeSelector.linkedNodes
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex
      commentId: F:TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex
      language: CSharp
      name:
        CSharp: m_NodeIndex
        VB: m_NodeIndex
      nameWithType:
        CSharp: FixedNodeSelector.m_NodeIndex
        VB: FixedNodeSelector.m_NodeIndex
      qualifiedName:
        CSharp: TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex
        VB: TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: m_NodeIndex
        path: ''
        startLine: 4373
      summary: "\nIndex to keep track of what node should be selected next\n"
      example: []
      syntax:
        content:
          CSharp: protected int m_NodeIndex
          VB: Protected m_NodeIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Nodes.FixedNodeSelector.GetNextNode
      commentId: M:TowerDefense.Nodes.FixedNodeSelector.GetNextNode
      language: CSharp
      name:
        CSharp: GetNextNode()
        VB: GetNextNode()
      nameWithType:
        CSharp: FixedNodeSelector.GetNextNode()
        VB: FixedNodeSelector.GetNextNode()
      qualifiedName:
        CSharp: TowerDefense.Nodes.FixedNodeSelector.GetNextNode()
        VB: TowerDefense.Nodes.FixedNodeSelector.GetNextNode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: GetNextNode
        path: ''
        startLine: 4379
      summary: "\nSelects the next node using <xref href=\"TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public override Node GetNextNode()
          VB: Public Overrides Function GetNextNode As Node
        return:
          type: TowerDefense.Nodes.Node
          description: The next selected node, or null if there are no valid nodes
      overload: TowerDefense.Nodes.FixedNodeSelector.GetNextNode*
      overridden: TowerDefense.Nodes.NodeSelector.GetNextNode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
      references:
        TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex: 
  - id: TowerDefense.Nodes.Node
    commentId: T:TowerDefense.Nodes.Node
    language: CSharp
    name:
      CSharp: Node
      VB: Node
    nameWithType:
      CSharp: Node
      VB: Node
    qualifiedName:
      CSharp: TowerDefense.Nodes.Node
      VB: TowerDefense.Nodes.Node
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Nodes
    source:
      id: Node
      path: ''
      startLine: 4407
    summary: "\nA point along the path which agents will navigate towards before recieving the next instruction from the NodeSelector\nRequires a collider to be added manually.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Node : MonoBehaviour'
        VB: >-
          Public Class Node

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Nodes.Node.areaMesh
      commentId: F:TowerDefense.Nodes.Node.areaMesh
      language: CSharp
      name:
        CSharp: areaMesh
        VB: areaMesh
      nameWithType:
        CSharp: Node.areaMesh
        VB: Node.areaMesh
      qualifiedName:
        CSharp: TowerDefense.Nodes.Node.areaMesh
        VB: TowerDefense.Nodes.Node.areaMesh
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: areaMesh
        path: ''
        startLine: 4414
      summary: "\nReference to the MeshObject created by an AreaMeshCreator\n"
      example: []
      syntax:
        content:
          CSharp: public AreaMeshCreator areaMesh
          VB: Public areaMesh As AreaMeshCreator
        return:
          type: AreaMeshCreator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Nodes.Node.weight
      commentId: F:TowerDefense.Nodes.Node.weight
      language: CSharp
      name:
        CSharp: weight
        VB: weight
      nameWithType:
        CSharp: Node.weight
        VB: Node.weight
      qualifiedName:
        CSharp: TowerDefense.Nodes.Node.weight
        VB: TowerDefense.Nodes.Node.weight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: weight
        path: ''
        startLine: 4419
      summary: "\nSelection weight of the node\n"
      example: []
      syntax:
        content:
          CSharp: public int weight
          VB: Public weight As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Nodes.Node.GetNextNode
      commentId: M:TowerDefense.Nodes.Node.GetNextNode
      language: CSharp
      name:
        CSharp: GetNextNode()
        VB: GetNextNode()
      nameWithType:
        CSharp: Node.GetNextNode()
        VB: Node.GetNextNode()
      qualifiedName:
        CSharp: TowerDefense.Nodes.Node.GetNextNode()
        VB: TowerDefense.Nodes.Node.GetNextNode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: GetNextNode
        path: ''
        startLine: 4425
      summary: "\nGets the next node from the selector\n"
      example: []
      syntax:
        content:
          CSharp: public Node GetNextNode()
          VB: Public Function GetNextNode As Node
        return:
          type: TowerDefense.Nodes.Node
          description: Next node, or null if this is the terminating node
      overload: TowerDefense.Nodes.Node.GetNextNode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Nodes.Node.GetRandomPointInNodeArea
      commentId: M:TowerDefense.Nodes.Node.GetRandomPointInNodeArea
      language: CSharp
      name:
        CSharp: GetRandomPointInNodeArea()
        VB: GetRandomPointInNodeArea()
      nameWithType:
        CSharp: Node.GetRandomPointInNodeArea()
        VB: Node.GetRandomPointInNodeArea()
      qualifiedName:
        CSharp: TowerDefense.Nodes.Node.GetRandomPointInNodeArea()
        VB: TowerDefense.Nodes.Node.GetRandomPointInNodeArea()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: GetRandomPointInNodeArea
        path: ''
        startLine: 4439
      summary: "\nGets a random point inside the area defined by a node&apos;s meshcreator\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetRandomPointInNodeArea()
          VB: Public Function GetRandomPointInNodeArea As Vector3
        return:
          type: Vector3
          description: A random point within the MeshObject&apos;s area
      overload: TowerDefense.Nodes.Node.GetRandomPointInNodeArea*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Nodes.Node.OnTriggerEnter(Collider)
      commentId: M:TowerDefense.Nodes.Node.OnTriggerEnter(Collider)
      language: CSharp
      name:
        CSharp: OnTriggerEnter(Collider)
        VB: OnTriggerEnter(Collider)
      nameWithType:
        CSharp: Node.OnTriggerEnter(Collider)
        VB: Node.OnTriggerEnter(Collider)
      qualifiedName:
        CSharp: TowerDefense.Nodes.Node.OnTriggerEnter(Collider)
        VB: TowerDefense.Nodes.Node.OnTriggerEnter(Collider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: OnTriggerEnter
        path: ''
        startLine: 4448
      summary: "\nWhen agent enters the node area, get the next node\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnTriggerEnter(Collider other)
          VB: Public Overridable Sub OnTriggerEnter(other As Collider)
        parameters:
        - id: other
          type: Collider
      overload: TowerDefense.Nodes.Node.OnTriggerEnter*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: TowerDefense.Nodes.NodeSelector
    commentId: T:TowerDefense.Nodes.NodeSelector
    language: CSharp
    name:
      CSharp: NodeSelector
      VB: NodeSelector
    nameWithType:
      CSharp: NodeSelector
      VB: NodeSelector
    qualifiedName:
      CSharp: TowerDefense.Nodes.NodeSelector
      VB: TowerDefense.Nodes.NodeSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Nodes
    source:
      id: NodeSelector
      path: ''
      startLine: 4491
    summary: "\nProvides a way to select a node for agents to navigate towards\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class NodeSelector : MonoBehaviour'
        VB: >-
          Public MustInherit Class NodeSelector

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Nodes.NodeSelector.linkedNodes
      commentId: F:TowerDefense.Nodes.NodeSelector.linkedNodes
      language: CSharp
      name:
        CSharp: linkedNodes
        VB: linkedNodes
      nameWithType:
        CSharp: NodeSelector.linkedNodes
        VB: NodeSelector.linkedNodes
      qualifiedName:
        CSharp: TowerDefense.Nodes.NodeSelector.linkedNodes
        VB: TowerDefense.Nodes.NodeSelector.linkedNodes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: linkedNodes
        path: ''
        startLine: 4496
      summary: "\nA list of Nodes that can be selected by this NodeSelector\n"
      example: []
      syntax:
        content:
          CSharp: public List<Node> linkedNodes
          VB: Public linkedNodes As List(Of Node)
        return:
          type: List{TowerDefense.Nodes.Node}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Nodes.NodeSelector.GetNextNode
      commentId: M:TowerDefense.Nodes.NodeSelector.GetNextNode
      language: CSharp
      name:
        CSharp: GetNextNode()
        VB: GetNextNode()
      nameWithType:
        CSharp: NodeSelector.GetNextNode()
        VB: NodeSelector.GetNextNode()
      qualifiedName:
        CSharp: TowerDefense.Nodes.NodeSelector.GetNextNode()
        VB: TowerDefense.Nodes.NodeSelector.GetNextNode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: GetNextNode
        path: ''
        startLine: 4502
      summary: "\nGets the next node in the fixed list of nodes\n"
      example: []
      syntax:
        content:
          CSharp: public abstract Node GetNextNode()
          VB: Public MustOverride Function GetNextNode As Node
        return:
          type: TowerDefense.Nodes.Node
          description: The next node in the list of Nodes, null if the node is the endpoint
      overload: TowerDefense.Nodes.NodeSelector.GetNextNode*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: TowerDefense.Nodes.RandomNodeSelector
    commentId: T:TowerDefense.Nodes.RandomNodeSelector
    language: CSharp
    name:
      CSharp: RandomNodeSelector
      VB: RandomNodeSelector
    nameWithType:
      CSharp: RandomNodeSelector
      VB: RandomNodeSelector
    qualifiedName:
      CSharp: TowerDefense.Nodes.RandomNodeSelector
      VB: TowerDefense.Nodes.RandomNodeSelector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Nodes
    source:
      id: RandomNodeSelector
      path: ''
      startLine: 4537
    summary: "\nRandomly selects the next node\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RandomNodeSelector : NodeSelector'
        VB: >-
          Public Class RandomNodeSelector

              Inherits NodeSelector
    inheritance:
    - System.Object
    - TowerDefense.Nodes.NodeSelector
    inheritedMembers:
    - TowerDefense.Nodes.NodeSelector.linkedNodes
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Nodes.RandomNodeSelector.m_WeightSum
      commentId: F:TowerDefense.Nodes.RandomNodeSelector.m_WeightSum
      language: CSharp
      name:
        CSharp: m_WeightSum
        VB: m_WeightSum
      nameWithType:
        CSharp: RandomNodeSelector.m_WeightSum
        VB: RandomNodeSelector.m_WeightSum
      qualifiedName:
        CSharp: TowerDefense.Nodes.RandomNodeSelector.m_WeightSum
        VB: TowerDefense.Nodes.RandomNodeSelector.m_WeightSum
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: m_WeightSum
        path: ''
        startLine: 4542
      summary: "\nThe sum of all Node weights in m_LinkedNodes\n"
      example: []
      syntax:
        content:
          CSharp: protected int m_WeightSum
          VB: Protected m_WeightSum As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Nodes.RandomNodeSelector.GetNextNode
      commentId: M:TowerDefense.Nodes.RandomNodeSelector.GetNextNode
      language: CSharp
      name:
        CSharp: GetNextNode()
        VB: GetNextNode()
      nameWithType:
        CSharp: RandomNodeSelector.GetNextNode()
        VB: RandomNodeSelector.GetNextNode()
      qualifiedName:
        CSharp: TowerDefense.Nodes.RandomNodeSelector.GetNextNode()
        VB: TowerDefense.Nodes.RandomNodeSelector.GetNextNode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: GetNextNode
        path: ''
        startLine: 4548
      summary: "\nGets a random node in the list\n"
      example: []
      syntax:
        content:
          CSharp: public override Node GetNextNode()
          VB: Public Overrides Function GetNextNode As Node
        return:
          type: TowerDefense.Nodes.Node
          description: The randomly selected node
      overload: TowerDefense.Nodes.RandomNodeSelector.GetNextNode*
      overridden: TowerDefense.Nodes.NodeSelector.GetNextNode
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Nodes.RandomNodeSelector.Awake
      commentId: M:TowerDefense.Nodes.RandomNodeSelector.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: RandomNodeSelector.Awake()
        VB: RandomNodeSelector.Awake()
      qualifiedName:
        CSharp: TowerDefense.Nodes.RandomNodeSelector.Awake()
        VB: TowerDefense.Nodes.RandomNodeSelector.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: Awake
        path: ''
        startLine: 4558
      syntax:
        content:
          CSharp: protected void Awake()
          VB: Protected Sub Awake
      overload: TowerDefense.Nodes.RandomNodeSelector.Awake*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights
      commentId: M:TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights
      language: CSharp
      name:
        CSharp: TotalLinkedNodeWeights()
        VB: TotalLinkedNodeWeights()
      nameWithType:
        CSharp: RandomNodeSelector.TotalLinkedNodeWeights()
        VB: RandomNodeSelector.TotalLinkedNodeWeights()
      qualifiedName:
        CSharp: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights()
        VB: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes
      source:
        id: TotalLinkedNodeWeights
        path: ''
        startLine: 4574
      summary: "\nSums up the weights of the linked nodes for random selection\n"
      example: []
      syntax:
        content:
          CSharp: protected int TotalLinkedNodeWeights()
          VB: Protected Function TotalLinkedNodeWeights As Integer
        return:
          type: System.Int32
          description: Weight Sum of Linked Nodes
      overload: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: TowerDefense.Nodes.Editor
  commentId: N:TowerDefense.Nodes.Editor
  language: CSharp
  name:
    CSharp: TowerDefense.Nodes.Editor
    VB: TowerDefense.Nodes.Editor
  nameWithType:
    CSharp: TowerDefense.Nodes.Editor
    VB: TowerDefense.Nodes.Editor
  qualifiedName:
    CSharp: TowerDefense.Nodes.Editor
    VB: TowerDefense.Nodes.Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Nodes.Editor.NodeEditor
    commentId: T:TowerDefense.Nodes.Editor.NodeEditor
    language: CSharp
    name:
      CSharp: NodeEditor
      VB: NodeEditor
    nameWithType:
      CSharp: NodeEditor
      VB: NodeEditor
    qualifiedName:
      CSharp: TowerDefense.Nodes.Editor.NodeEditor
      VB: TowerDefense.Nodes.Editor.NodeEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Nodes.Editor
    source:
      id: NodeEditor
      path: ''
      startLine: 4595
    summary: "\nEditor for Node\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NodeEditor : UnityEditor.Editor'
        VB: >-
          Public Class NodeEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Nodes.Editor.NodeEditor.m_Node
      commentId: F:TowerDefense.Nodes.Editor.NodeEditor.m_Node
      language: CSharp
      name:
        CSharp: m_Node
        VB: m_Node
      nameWithType:
        CSharp: NodeEditor.m_Node
        VB: NodeEditor.m_Node
      qualifiedName:
        CSharp: TowerDefense.Nodes.Editor.NodeEditor.m_Node
        VB: TowerDefense.Nodes.Editor.NodeEditor.m_Node
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes.Editor
      source:
        id: m_Node
        path: ''
        startLine: 4598
      syntax:
        content:
          CSharp: protected Node m_Node
          VB: Protected m_Node As Node
        return:
          type: TowerDefense.Nodes.Node
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Nodes.Editor.NodeEditor.OnEnable
      commentId: M:TowerDefense.Nodes.Editor.NodeEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: NodeEditor.OnEnable()
        VB: NodeEditor.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Nodes.Editor.NodeEditor.OnEnable()
        VB: TowerDefense.Nodes.Editor.NodeEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 4600
      syntax:
        content:
          CSharp: protected void OnEnable()
          VB: Protected Sub OnEnable
      overload: TowerDefense.Nodes.Editor.NodeEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI
      commentId: M:TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: NodeEditor.OnInspectorGUI()
        VB: NodeEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI()
        VB: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 4605
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator
      commentId: M:TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator
      language: CSharp
      name:
        CSharp: AddMeshCreator()
        VB: AddMeshCreator()
      nameWithType:
        CSharp: NodeEditor.AddMeshCreator()
        VB: NodeEditor.AddMeshCreator()
      qualifiedName:
        CSharp: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator()
        VB: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Nodes.Editor
      source:
        id: AddMeshCreator
        path: ''
        startLine: 4618
      summary: "\nCreates a new AreaMeshCreator object as a child of the node\n"
      example: []
      syntax:
        content:
          CSharp: protected void AddMeshCreator()
          VB: Protected Sub AddMeshCreator
      overload: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: TowerDefense.Targetting
  commentId: N:TowerDefense.Targetting
  language: CSharp
  name:
    CSharp: TowerDefense.Targetting
    VB: TowerDefense.Targetting
  nameWithType:
    CSharp: TowerDefense.Targetting
    VB: TowerDefense.Targetting
  qualifiedName:
    CSharp: TowerDefense.Targetting
    VB: TowerDefense.Targetting
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Targetting.Targetter
    commentId: T:TowerDefense.Targetting.Targetter
    language: CSharp
    name:
      CSharp: Targetter
      VB: Targetter
    nameWithType:
      CSharp: Targetter
      VB: Targetter
    qualifiedName:
      CSharp: TowerDefense.Targetting.Targetter
      VB: TowerDefense.Targetting.Targetter
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Targetting
    source:
      id: Targetter
      path: ''
      startLine: 4650
    summary: "\nClass used to track targets for an affector\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Targetter : MonoBehaviour'
        VB: >-
          Public Class Targetter

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Targetting.Targetter.targetEntersRange
      commentId: E:TowerDefense.Targetting.Targetter.targetEntersRange
      language: CSharp
      name:
        CSharp: targetEntersRange
        VB: targetEntersRange
      nameWithType:
        CSharp: Targetter.targetEntersRange
        VB: Targetter.targetEntersRange
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.targetEntersRange
        VB: TowerDefense.Targetting.Targetter.targetEntersRange
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: targetEntersRange
        path: ''
        startLine: 4655
      summary: "\nFires when a targetable enters the target collider\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Targetable> targetEntersRange
          VB: Public Event targetEntersRange As Action(Of Targetable)
        return:
          type: Action{Targetable}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.targetExitsRange
      commentId: E:TowerDefense.Targetting.Targetter.targetExitsRange
      language: CSharp
      name:
        CSharp: targetExitsRange
        VB: targetExitsRange
      nameWithType:
        CSharp: Targetter.targetExitsRange
        VB: Targetter.targetExitsRange
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.targetExitsRange
        VB: TowerDefense.Targetting.Targetter.targetExitsRange
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: targetExitsRange
        path: ''
        startLine: 4660
      summary: "\nFires when a targetable exits the target collider\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Targetable> targetExitsRange
          VB: Public Event targetExitsRange As Action(Of Targetable)
        return:
          type: Action{Targetable}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.acquiredTarget
      commentId: E:TowerDefense.Targetting.Targetter.acquiredTarget
      language: CSharp
      name:
        CSharp: acquiredTarget
        VB: acquiredTarget
      nameWithType:
        CSharp: Targetter.acquiredTarget
        VB: Targetter.acquiredTarget
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.acquiredTarget
        VB: TowerDefense.Targetting.Targetter.acquiredTarget
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: acquiredTarget
        path: ''
        startLine: 4665
      summary: "\nFires when an appropriate target is found\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Targetable> acquiredTarget
          VB: Public Event acquiredTarget As Action(Of Targetable)
        return:
          type: Action{Targetable}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.lostTarget
      commentId: E:TowerDefense.Targetting.Targetter.lostTarget
      language: CSharp
      name:
        CSharp: lostTarget
        VB: lostTarget
      nameWithType:
        CSharp: Targetter.lostTarget
        VB: Targetter.lostTarget
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.lostTarget
        VB: TowerDefense.Targetting.Targetter.lostTarget
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: lostTarget
        path: ''
        startLine: 4670
      summary: "\nFires when the current target was lost\n"
      example: []
      syntax:
        content:
          CSharp: public event Action lostTarget
          VB: Public Event lostTarget As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.turret
      commentId: F:TowerDefense.Targetting.Targetter.turret
      language: CSharp
      name:
        CSharp: turret
        VB: turret
      nameWithType:
        CSharp: Targetter.turret
        VB: Targetter.turret
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.turret
        VB: TowerDefense.Targetting.Targetter.turret
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: turret
        path: ''
        startLine: 4675
      summary: "\nThe transform to point at the target\n"
      example: []
      syntax:
        content:
          CSharp: public Transform turret
          VB: Public turret As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.turretXRotationRange
      commentId: F:TowerDefense.Targetting.Targetter.turretXRotationRange
      language: CSharp
      name:
        CSharp: turretXRotationRange
        VB: turretXRotationRange
      nameWithType:
        CSharp: Targetter.turretXRotationRange
        VB: Targetter.turretXRotationRange
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.turretXRotationRange
        VB: TowerDefense.Targetting.Targetter.turretXRotationRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: turretXRotationRange
        path: ''
        startLine: 4680
      summary: "\nThe range of the turret&apos;s x rotation\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 turretXRotationRange
          VB: Public turretXRotationRange As Vector2
        return:
          type: Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.onlyYTurretRotation
      commentId: F:TowerDefense.Targetting.Targetter.onlyYTurretRotation
      language: CSharp
      name:
        CSharp: onlyYTurretRotation
        VB: onlyYTurretRotation
      nameWithType:
        CSharp: Targetter.onlyYTurretRotation
        VB: Targetter.onlyYTurretRotation
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.onlyYTurretRotation
        VB: TowerDefense.Targetting.Targetter.onlyYTurretRotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: onlyYTurretRotation
        path: ''
        startLine: 4685
      summary: "\nIf m_Turret rotates freely or only on y;\n"
      example: []
      syntax:
        content:
          CSharp: public bool onlyYTurretRotation
          VB: Public onlyYTurretRotation As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.searchRate
      commentId: F:TowerDefense.Targetting.Targetter.searchRate
      language: CSharp
      name:
        CSharp: searchRate
        VB: searchRate
      nameWithType:
        CSharp: Targetter.searchRate
        VB: Targetter.searchRate
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.searchRate
        VB: TowerDefense.Targetting.Targetter.searchRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: searchRate
        path: ''
        startLine: 4690
      summary: "\nThe search rate in searches per second\n"
      example: []
      syntax:
        content:
          CSharp: public float searchRate
          VB: Public searchRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.idleRotationSpeed
      commentId: F:TowerDefense.Targetting.Targetter.idleRotationSpeed
      language: CSharp
      name:
        CSharp: idleRotationSpeed
        VB: idleRotationSpeed
      nameWithType:
        CSharp: Targetter.idleRotationSpeed
        VB: Targetter.idleRotationSpeed
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.idleRotationSpeed
        VB: TowerDefense.Targetting.Targetter.idleRotationSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: idleRotationSpeed
        path: ''
        startLine: 4695
      summary: "\nY rotation speed while the turret is idle in degrees per second\n"
      example: []
      syntax:
        content:
          CSharp: public float idleRotationSpeed
          VB: Public idleRotationSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.idleCorrectionTime
      commentId: F:TowerDefense.Targetting.Targetter.idleCorrectionTime
      language: CSharp
      name:
        CSharp: idleCorrectionTime
        VB: idleCorrectionTime
      nameWithType:
        CSharp: Targetter.idleCorrectionTime
        VB: Targetter.idleCorrectionTime
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.idleCorrectionTime
        VB: TowerDefense.Targetting.Targetter.idleCorrectionTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: idleCorrectionTime
        path: ''
        startLine: 4700
      summary: "\nThe time it takes for the tower to correct its x rotation on idle in seconds\n"
      example: []
      syntax:
        content:
          CSharp: public float idleCorrectionTime
          VB: Public idleCorrectionTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.attachedCollider
      commentId: F:TowerDefense.Targetting.Targetter.attachedCollider
      language: CSharp
      name:
        CSharp: attachedCollider
        VB: attachedCollider
      nameWithType:
        CSharp: Targetter.attachedCollider
        VB: Targetter.attachedCollider
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.attachedCollider
        VB: TowerDefense.Targetting.Targetter.attachedCollider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: attachedCollider
        path: ''
        startLine: 4705
      summary: "\nThe collider attached to the targetter\n"
      example: []
      syntax:
        content:
          CSharp: public Collider attachedCollider
          VB: Public attachedCollider As Collider
        return:
          type: Collider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.idleWaitTime
      commentId: F:TowerDefense.Targetting.Targetter.idleWaitTime
      language: CSharp
      name:
        CSharp: idleWaitTime
        VB: idleWaitTime
      nameWithType:
        CSharp: Targetter.idleWaitTime
        VB: Targetter.idleWaitTime
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.idleWaitTime
        VB: TowerDefense.Targetting.Targetter.idleWaitTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: idleWaitTime
        path: ''
        startLine: 4710
      summary: "\nHow long the turret waits in its idle form before spinning in seconds\n"
      example: []
      syntax:
        content:
          CSharp: public float idleWaitTime
          VB: Public idleWaitTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.m_TargetsInRange
      commentId: F:TowerDefense.Targetting.Targetter.m_TargetsInRange
      language: CSharp
      name:
        CSharp: m_TargetsInRange
        VB: m_TargetsInRange
      nameWithType:
        CSharp: Targetter.m_TargetsInRange
        VB: Targetter.m_TargetsInRange
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_TargetsInRange
        VB: TowerDefense.Targetting.Targetter.m_TargetsInRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_TargetsInRange
        path: ''
        startLine: 4715
      summary: "\nThe current targetables in the collider\n"
      example: []
      syntax:
        content:
          CSharp: protected List<Targetable> m_TargetsInRange
          VB: Protected m_TargetsInRange As List(Of Targetable)
        return:
          type: List{Targetable}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.m_SearchTimer
      commentId: F:TowerDefense.Targetting.Targetter.m_SearchTimer
      language: CSharp
      name:
        CSharp: m_SearchTimer
        VB: m_SearchTimer
      nameWithType:
        CSharp: Targetter.m_SearchTimer
        VB: Targetter.m_SearchTimer
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_SearchTimer
        VB: TowerDefense.Targetting.Targetter.m_SearchTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_SearchTimer
        path: ''
        startLine: 4720
      summary: "\nThe seconds until a search is allowed\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_SearchTimer
          VB: Protected m_SearchTimer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.m_WaitTimer
      commentId: F:TowerDefense.Targetting.Targetter.m_WaitTimer
      language: CSharp
      name:
        CSharp: m_WaitTimer
        VB: m_WaitTimer
      nameWithType:
        CSharp: Targetter.m_WaitTimer
        VB: Targetter.m_WaitTimer
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_WaitTimer
        VB: TowerDefense.Targetting.Targetter.m_WaitTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_WaitTimer
        path: ''
        startLine: 4725
      summary: "\nThe seconds until the tower starts spinning\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_WaitTimer
          VB: Protected m_WaitTimer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.m_CurrrentTargetable
      commentId: F:TowerDefense.Targetting.Targetter.m_CurrrentTargetable
      language: CSharp
      name:
        CSharp: m_CurrrentTargetable
        VB: m_CurrrentTargetable
      nameWithType:
        CSharp: Targetter.m_CurrrentTargetable
        VB: Targetter.m_CurrrentTargetable
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_CurrrentTargetable
        VB: TowerDefense.Targetting.Targetter.m_CurrrentTargetable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_CurrrentTargetable
        path: ''
        startLine: 4730
      summary: "\nThe current targetable\n"
      example: []
      syntax:
        content:
          CSharp: protected Targetable m_CurrrentTargetable
          VB: Protected m_CurrrentTargetable As Targetable
        return:
          type: Targetable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.m_XRotationCorrectionTime
      commentId: F:TowerDefense.Targetting.Targetter.m_XRotationCorrectionTime
      language: CSharp
      name:
        CSharp: m_XRotationCorrectionTime
        VB: m_XRotationCorrectionTime
      nameWithType:
        CSharp: Targetter.m_XRotationCorrectionTime
        VB: Targetter.m_XRotationCorrectionTime
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_XRotationCorrectionTime
        VB: TowerDefense.Targetting.Targetter.m_XRotationCorrectionTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_XRotationCorrectionTime
        path: ''
        startLine: 4735
      summary: "\nCounter used for x rotation correction\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_XRotationCorrectionTime
          VB: Protected m_XRotationCorrectionTime As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.m_HadTarget
      commentId: F:TowerDefense.Targetting.Targetter.m_HadTarget
      language: CSharp
      name:
        CSharp: m_HadTarget
        VB: m_HadTarget
      nameWithType:
        CSharp: Targetter.m_HadTarget
        VB: Targetter.m_HadTarget
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_HadTarget
        VB: TowerDefense.Targetting.Targetter.m_HadTarget
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_HadTarget
        path: ''
        startLine: 4740
      summary: "\nIf there was a targetable in the last frame\n"
      example: []
      syntax:
        content:
          CSharp: protected bool m_HadTarget
          VB: Protected m_HadTarget As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.m_CurrentRotationSpeed
      commentId: F:TowerDefense.Targetting.Targetter.m_CurrentRotationSpeed
      language: CSharp
      name:
        CSharp: m_CurrentRotationSpeed
        VB: m_CurrentRotationSpeed
      nameWithType:
        CSharp: Targetter.m_CurrentRotationSpeed
        VB: Targetter.m_CurrentRotationSpeed
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.m_CurrentRotationSpeed
        VB: TowerDefense.Targetting.Targetter.m_CurrentRotationSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: m_CurrentRotationSpeed
        path: ''
        startLine: 4745
      summary: "\nHow fast this turret is spinning\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_CurrentRotationSpeed
          VB: Protected m_CurrentRotationSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Targetting.Targetter.effectRadius
      commentId: P:TowerDefense.Targetting.Targetter.effectRadius
      language: CSharp
      name:
        CSharp: effectRadius
        VB: effectRadius
      nameWithType:
        CSharp: Targetter.effectRadius
        VB: Targetter.effectRadius
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.effectRadius
        VB: TowerDefense.Targetting.Targetter.effectRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: effectRadius
        path: ''
        startLine: 4751
      summary: "\nreturns the radius of the collider whether\nits a sphere or capsule\n"
      example: []
      syntax:
        content:
          CSharp: public float effectRadius { get; }
          VB: Public ReadOnly Property effectRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Targetting.Targetter.effectRadius*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Targetting.Targetter.alignment
      commentId: F:TowerDefense.Targetting.Targetter.alignment
      language: CSharp
      name:
        CSharp: alignment
        VB: alignment
      nameWithType:
        CSharp: Targetter.alignment
        VB: Targetter.alignment
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.alignment
        VB: TowerDefense.Targetting.Targetter.alignment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: alignment
        path: ''
        startLine: 4772
      summary: "\nThe alignment of the affector\n"
      example: []
      syntax:
        content:
          CSharp: public IAlignmentProvider alignment
          VB: Public alignment As IAlignmentProvider
        return:
          type: IAlignmentProvider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.GetTarget
      commentId: M:TowerDefense.Targetting.Targetter.GetTarget
      language: CSharp
      name:
        CSharp: GetTarget()
        VB: GetTarget()
      nameWithType:
        CSharp: Targetter.GetTarget()
        VB: Targetter.GetTarget()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.GetTarget()
        VB: TowerDefense.Targetting.Targetter.GetTarget()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: GetTarget
        path: ''
        startLine: 4777
      summary: "\nReturns the current target\n"
      example: []
      syntax:
        content:
          CSharp: public Targetable GetTarget()
          VB: Public Function GetTarget As Targetable
        return:
          type: Targetable
      overload: TowerDefense.Targetting.Targetter.GetTarget*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.ResetTargetter
      commentId: M:TowerDefense.Targetting.Targetter.ResetTargetter
      language: CSharp
      name:
        CSharp: ResetTargetter()
        VB: ResetTargetter()
      nameWithType:
        CSharp: Targetter.ResetTargetter()
        VB: Targetter.ResetTargetter()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.ResetTargetter()
        VB: TowerDefense.Targetting.Targetter.ResetTargetter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: ResetTargetter
        path: ''
        startLine: 4785
      summary: "\nClears the list of current targets and clears all events\n"
      example: []
      syntax:
        content:
          CSharp: public void ResetTargetter()
          VB: Public Sub ResetTargetter
      overload: TowerDefense.Targetting.Targetter.ResetTargetter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.GetAllTargets
      commentId: M:TowerDefense.Targetting.Targetter.GetAllTargets
      language: CSharp
      name:
        CSharp: GetAllTargets()
        VB: GetAllTargets()
      nameWithType:
        CSharp: Targetter.GetAllTargets()
        VB: Targetter.GetAllTargets()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.GetAllTargets()
        VB: TowerDefense.Targetting.Targetter.GetAllTargets()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: GetAllTargets
        path: ''
        startLine: 4806
      summary: "\nReturns all the targets within the collider. This list must not be changed as it is the working\nlist of the targetter. Changing it could break the targetter\n"
      example: []
      syntax:
        content:
          CSharp: public List<Targetable> GetAllTargets()
          VB: Public Function GetAllTargets As List(Of Targetable)
        return:
          type: List{Targetable}
      overload: TowerDefense.Targetting.Targetter.GetAllTargets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Targetting.Targetter.IsTargetableValid(Targetable)
      commentId: M:TowerDefense.Targetting.Targetter.IsTargetableValid(Targetable)
      language: CSharp
      name:
        CSharp: IsTargetableValid(Targetable)
        VB: IsTargetableValid(Targetable)
      nameWithType:
        CSharp: Targetter.IsTargetableValid(Targetable)
        VB: Targetter.IsTargetableValid(Targetable)
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.IsTargetableValid(Targetable)
        VB: TowerDefense.Targetting.Targetter.IsTargetableValid(Targetable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: IsTargetableValid
        path: ''
        startLine: 4816
      summary: "\nChecks if the targetable is a valid target\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual bool IsTargetableValid(Targetable targetable)
          VB: Protected Overridable Function IsTargetableValid(targetable As Targetable) As Boolean
        parameters:
        - id: targetable
          type: Targetable
          description: ''
        return:
          type: System.Boolean
          description: true if targetable is vaild, false if not
      overload: TowerDefense.Targetting.Targetter.IsTargetableValid*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Targetting.Targetter.OnTriggerExit(Collider)
      commentId: M:TowerDefense.Targetting.Targetter.OnTriggerExit(Collider)
      language: CSharp
      name:
        CSharp: OnTriggerExit(Collider)
        VB: OnTriggerExit(Collider)
      nameWithType:
        CSharp: Targetter.OnTriggerExit(Collider)
        VB: Targetter.OnTriggerExit(Collider)
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.OnTriggerExit(Collider)
        VB: TowerDefense.Targetting.Targetter.OnTriggerExit(Collider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: OnTriggerExit
        path: ''
        startLine: 4834
      summary: "\nOn exiting the trigger, a valid targetable is removed from the tracking list.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnTriggerExit(Collider other)
          VB: Protected Overridable Sub OnTriggerExit(other As Collider)
        parameters:
        - id: other
          type: Collider
          description: The other collider in the collision
      overload: TowerDefense.Targetting.Targetter.OnTriggerExit*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Targetting.Targetter.OnTriggerEnter(Collider)
      commentId: M:TowerDefense.Targetting.Targetter.OnTriggerEnter(Collider)
      language: CSharp
      name:
        CSharp: OnTriggerEnter(Collider)
        VB: OnTriggerEnter(Collider)
      nameWithType:
        CSharp: Targetter.OnTriggerEnter(Collider)
        VB: Targetter.OnTriggerEnter(Collider)
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.OnTriggerEnter(Collider)
        VB: TowerDefense.Targetting.Targetter.OnTriggerEnter(Collider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: OnTriggerEnter
        path: ''
        startLine: 4862
      summary: "\nOn entering the trigger, a valid targetable is added to the tracking list.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnTriggerEnter(Collider other)
          VB: Protected Overridable Sub OnTriggerEnter(other As Collider)
        parameters:
        - id: other
          type: Collider
          description: The other collider in the collision
      overload: TowerDefense.Targetting.Targetter.OnTriggerEnter*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Targetting.Targetter.GetNearestTargetable
      commentId: M:TowerDefense.Targetting.Targetter.GetNearestTargetable
      language: CSharp
      name:
        CSharp: GetNearestTargetable()
        VB: GetNearestTargetable()
      nameWithType:
        CSharp: Targetter.GetNearestTargetable()
        VB: Targetter.GetNearestTargetable()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.GetNearestTargetable()
        VB: TowerDefense.Targetting.Targetter.GetNearestTargetable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: GetNearestTargetable
        path: ''
        startLine: 4881
      summary: "\nReturns the nearest targetable within the currently tracked targetables \n"
      example: []
      syntax:
        content:
          CSharp: protected virtual Targetable GetNearestTargetable()
          VB: Protected Overridable Function GetNearestTargetable As Targetable
        return:
          type: Targetable
          description: The nearest targetable if there is one, null otherwise
      overload: TowerDefense.Targetting.Targetter.GetNearestTargetable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Targetting.Targetter.Start
      commentId: M:TowerDefense.Targetting.Targetter.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Targetter.Start()
        VB: Targetter.Start()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.Start()
        VB: TowerDefense.Targetting.Targetter.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: Start
        path: ''
        startLine: 4914
      summary: "\nStarts the search timer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.Targetting.Targetter.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Targetting.Targetter.Update
      commentId: M:TowerDefense.Targetting.Targetter.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Targetter.Update()
        VB: Targetter.Update()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.Update()
        VB: TowerDefense.Targetting.Targetter.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: Update
        path: ''
        startLine: 4923
      summary: "\nChecks if any targets are destroyed and aquires a new targetable if appropriate\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Targetting.Targetter.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Targetting.Targetter.AimTurret
      commentId: M:TowerDefense.Targetting.Targetter.AimTurret
      language: CSharp
      name:
        CSharp: AimTurret()
        VB: AimTurret()
      nameWithType:
        CSharp: Targetter.AimTurret()
        VB: Targetter.AimTurret()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Targetter.AimTurret()
        VB: TowerDefense.Targetting.Targetter.AimTurret()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting
      source:
        id: AimTurret
        path: ''
        startLine: 4979
      summary: "\nAims the turret at the current target\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void AimTurret()
          VB: Protected Overridable Sub AimTurret
      overload: TowerDefense.Targetting.Targetter.AimTurret*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: TowerDefense.Targetting.Editor
  commentId: N:TowerDefense.Targetting.Editor
  language: CSharp
  name:
    CSharp: TowerDefense.Targetting.Editor
    VB: TowerDefense.Targetting.Editor
  nameWithType:
    CSharp: TowerDefense.Targetting.Editor
    VB: TowerDefense.Targetting.Editor
  qualifiedName:
    CSharp: TowerDefense.Targetting.Editor
    VB: TowerDefense.Targetting.Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Targetting.Editor.TargetterEditor
    commentId: T:TowerDefense.Targetting.Editor.TargetterEditor
    language: CSharp
    name:
      CSharp: TargetterEditor
      VB: TargetterEditor
    nameWithType:
      CSharp: TargetterEditor
      VB: TargetterEditor
    qualifiedName:
      CSharp: TowerDefense.Targetting.Editor.TargetterEditor
      VB: TowerDefense.Targetting.Editor.TargetterEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Targetting.Editor
    source:
      id: TargetterEditor
      path: ''
      startLine: 5052
    summary: "\nThe editor for configuring targetter\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TargetterEditor : UnityEditor.Editor'
        VB: >-
          Public Class TargetterEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI
      commentId: M:TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: TargetterEditor.OnInspectorGUI()
        VB: TargetterEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI()
        VB: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 5107
      summary: "\ndraws the default inspector \nand then draws configuration for colliders\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
    commentId: T:TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
    language: CSharp
    name:
      CSharp: TargetterEditor.TargetterCollider
      VB: TargetterEditor.TargetterCollider
    nameWithType:
      CSharp: TargetterEditor.TargetterCollider
      VB: TargetterEditor.TargetterCollider
    qualifiedName:
      CSharp: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
      VB: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Targetting.Editor
    source:
      id: TargetterCollider
      path: ''
      startLine: 5058
    summary: "\nConfiguration for which collider to use\n"
    example: []
    syntax:
      content:
        CSharp: public enum TargetterCollider
        VB: Public Enum TargetterCollider
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Sphere
      commentId: F:TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Sphere
      language: CSharp
      name:
        CSharp: Sphere
        VB: Sphere
      nameWithType:
        CSharp: TargetterEditor.TargetterCollider.Sphere
        VB: TargetterEditor.TargetterCollider.Sphere
      qualifiedName:
        CSharp: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Sphere
        VB: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Sphere
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting.Editor
      source:
        id: Sphere
        path: ''
        startLine: 5063
      summary: "\nFor sphere collider\n"
      example: []
      syntax:
        content:
          CSharp: Sphere = 0
          VB: Sphere = 0
        return:
          type: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Capsule
      commentId: F:TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Capsule
      language: CSharp
      name:
        CSharp: Capsule
        VB: Capsule
      nameWithType:
        CSharp: TargetterEditor.TargetterCollider.Capsule
        VB: TargetterEditor.TargetterCollider.Capsule
      qualifiedName:
        CSharp: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Capsule
        VB: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider.Capsule
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Targetting.Editor
      source:
        id: Capsule
        path: ''
        startLine: 5068
      summary: "\nFor capsule collider\n"
      example: []
      syntax:
        content:
          CSharp: Capsule = 1
          VB: Capsule = 1
        return:
          type: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: TowerDefense.Towers
  commentId: N:TowerDefense.Towers
  language: CSharp
  name:
    CSharp: TowerDefense.Towers
    VB: TowerDefense.Towers
  nameWithType:
    CSharp: TowerDefense.Towers
    VB: TowerDefense.Towers
  qualifiedName:
    CSharp: TowerDefense.Towers
    VB: TowerDefense.Towers
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Towers.ILauncher
    commentId: T:TowerDefense.Towers.ILauncher
    language: CSharp
    name:
      CSharp: ILauncher
      VB: ILauncher
    nameWithType:
      CSharp: ILauncher
      VB: ILauncher
    qualifiedName:
      CSharp: TowerDefense.Towers.ILauncher
      VB: TowerDefense.Towers.ILauncher
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers
    source:
      id: ILauncher
      path: ''
      startLine: 5260
    summary: "\nA class that allows the TowerConfiguration to delegate\ndifferent firing logic this component\n"
    example: []
    syntax:
      content:
        CSharp: public interface ILauncher
        VB: Public Interface ILauncher
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform)
      commentId: M:TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform)
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform)
        VB: Launch(Targetable, GameObject, Transform)
      nameWithType:
        CSharp: ILauncher.Launch(Targetable, GameObject, Transform)
        VB: ILauncher.Launch(Targetable, GameObject, Transform)
      qualifiedName:
        CSharp: TowerDefense.Towers.ILauncher.Launch(Targetable, GameObject, Transform)
        VB: TowerDefense.Towers.ILauncher.Launch(Targetable, GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Launch
        path: ''
        startLine: 5272
      summary: "\nThe method for crafting the firing logic for the tower\n"
      example: []
      syntax:
        content:
          CSharp: void Launch(Targetable enemy, GameObject attack, Transform firingPoint)
          VB: Sub Launch(enemy As Targetable, attack As GameObject, firingPoint As Transform)
        parameters:
        - id: enemy
          type: Targetable
          description: "\nThe enemy that the tower is targeting\n"
        - id: attack
          type: GameObject
          description: "\nThe projectile component used to attack the enemy\n"
        - id: firingPoint
          type: Transform
          description: ''
      overload: TowerDefense.Towers.ILauncher.Launch*
      modifiers:
        CSharp: []
        VB: []
    - id: TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[])
      commentId: M:TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[])
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform[])
        VB: Launch(Targetable, GameObject, Transform())
      nameWithType:
        CSharp: ILauncher.Launch(Targetable, GameObject, Transform[])
        VB: ILauncher.Launch(Targetable, GameObject, Transform())
      qualifiedName:
        CSharp: TowerDefense.Towers.ILauncher.Launch(Targetable, GameObject, Transform[])
        VB: TowerDefense.Towers.ILauncher.Launch(Targetable, GameObject, Transform())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Launch
        path: ''
        startLine: 5286
      summary: "\nThe method for crafting the firing logic for the tower\n"
      example: []
      syntax:
        content:
          CSharp: void Launch(Targetable enemy, GameObject attack, Transform[] firingPoints)
          VB: Sub Launch(enemy As Targetable, attack As GameObject, firingPoints As Transform())
        parameters:
        - id: enemy
          type: Targetable
          description: "\nThe enemy that the tower is targeting\n"
        - id: attack
          type: GameObject
          description: "\nThe projectile component used to attack the enemy\n"
        - id: firingPoints
          type: Transform[]
          description: "\nA list of firing points to fire from\n"
      overload: TowerDefense.Towers.ILauncher.Launch*
      modifiers:
        CSharp: []
        VB: []
    - id: TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[])
      commentId: M:TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[])
      language: CSharp
      name:
        CSharp: Launch(List<Targetable>, GameObject, Transform[])
        VB: Launch(List(Of Targetable), GameObject, Transform())
      nameWithType:
        CSharp: ILauncher.Launch(List<Targetable>, GameObject, Transform[])
        VB: ILauncher.Launch(List(Of Targetable), GameObject, Transform())
      qualifiedName:
        CSharp: TowerDefense.Towers.ILauncher.Launch(List<Targetable>, GameObject, Transform[])
        VB: TowerDefense.Towers.ILauncher.Launch(List(Of Targetable), GameObject, Transform())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Launch
        path: ''
        startLine: 5298
      summary: "\nThe method for crafting firing logic at multiple enemies\n"
      example: []
      syntax:
        content:
          CSharp: void Launch(List<Targetable> enemies, GameObject attack, Transform[] firingPoints)
          VB: Sub Launch(enemies As List(Of Targetable), attack As GameObject, firingPoints As Transform())
        parameters:
        - id: enemies
          type: List{Targetable}
          description: "\nThe collection of enemies to attack\n"
        - id: attack
          type: GameObject
          description: "\nThe projectile component used to attack the enemy\n"
        - id: firingPoints
          type: Transform[]
          description: ''
      overload: TowerDefense.Towers.ILauncher.Launch*
      modifiers:
        CSharp: []
        VB: []
  - id: TowerDefense.Towers.ITowerRadiusProvider
    commentId: T:TowerDefense.Towers.ITowerRadiusProvider
    language: CSharp
    name:
      CSharp: ITowerRadiusProvider
      VB: ITowerRadiusProvider
    nameWithType:
      CSharp: ITowerRadiusProvider
      VB: ITowerRadiusProvider
    qualifiedName:
      CSharp: TowerDefense.Towers.ITowerRadiusProvider
      VB: TowerDefense.Towers.ITowerRadiusProvider
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers
    source:
      id: ITowerRadiusProvider
      path: ''
      startLine: 5309
    summary: "\nAn interface for tower affectors to implement in order to visualize their affect radius\n"
    example: []
    syntax:
      content:
        CSharp: public interface ITowerRadiusProvider
        VB: Public Interface ITowerRadiusProvider
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: TowerDefense.Towers.ITowerRadiusProvider.effectRadius
      commentId: P:TowerDefense.Towers.ITowerRadiusProvider.effectRadius
      language: CSharp
      name:
        CSharp: effectRadius
        VB: effectRadius
      nameWithType:
        CSharp: ITowerRadiusProvider.effectRadius
        VB: ITowerRadiusProvider.effectRadius
      qualifiedName:
        CSharp: TowerDefense.Towers.ITowerRadiusProvider.effectRadius
        VB: TowerDefense.Towers.ITowerRadiusProvider.effectRadius
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: effectRadius
        path: ''
        startLine: 5311
      syntax:
        content:
          CSharp: float effectRadius { get; }
          VB: ReadOnly Property effectRadius As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Towers.ITowerRadiusProvider.effectRadius*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: TowerDefense.Towers.ITowerRadiusProvider.effectColor
      commentId: P:TowerDefense.Towers.ITowerRadiusProvider.effectColor
      language: CSharp
      name:
        CSharp: effectColor
        VB: effectColor
      nameWithType:
        CSharp: ITowerRadiusProvider.effectColor
        VB: ITowerRadiusProvider.effectColor
      qualifiedName:
        CSharp: TowerDefense.Towers.ITowerRadiusProvider.effectColor
        VB: TowerDefense.Towers.ITowerRadiusProvider.effectColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: effectColor
        path: ''
        startLine: 5312
      syntax:
        content:
          CSharp: Color effectColor { get; }
          VB: ReadOnly Property effectColor As Color
        parameters: []
        return:
          type: Color
      overload: TowerDefense.Towers.ITowerRadiusProvider.effectColor*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: TowerDefense.Towers.ITowerRadiusProvider.targetter
      commentId: P:TowerDefense.Towers.ITowerRadiusProvider.targetter
      language: CSharp
      name:
        CSharp: targetter
        VB: targetter
      nameWithType:
        CSharp: ITowerRadiusProvider.targetter
        VB: ITowerRadiusProvider.targetter
      qualifiedName:
        CSharp: TowerDefense.Towers.ITowerRadiusProvider.targetter
        VB: TowerDefense.Towers.ITowerRadiusProvider.targetter
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: targetter
        path: ''
        startLine: 5313
      syntax:
        content:
          CSharp: Targetter targetter { get; }
          VB: ReadOnly Property targetter As Targetter
        parameters: []
        return:
          type: Targetter
      overload: TowerDefense.Towers.ITowerRadiusProvider.targetter*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: TowerDefense.Towers.SelfDestroyTimer
    commentId: T:TowerDefense.Towers.SelfDestroyTimer
    language: CSharp
    name:
      CSharp: SelfDestroyTimer
      VB: SelfDestroyTimer
    nameWithType:
      CSharp: SelfDestroyTimer
      VB: SelfDestroyTimer
    qualifiedName:
      CSharp: TowerDefense.Towers.SelfDestroyTimer
      VB: TowerDefense.Towers.SelfDestroyTimer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers
    source:
      id: SelfDestroyTimer
      path: ''
      startLine: 5325
    summary: "\nA helper component for self destruction\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SelfDestroyTimer : MonoBehaviour'
        VB: >-
          Public Class SelfDestroyTimer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.SelfDestroyTimer.time
      commentId: F:TowerDefense.Towers.SelfDestroyTimer.time
      language: CSharp
      name:
        CSharp: time
        VB: time
      nameWithType:
        CSharp: SelfDestroyTimer.time
        VB: SelfDestroyTimer.time
      qualifiedName:
        CSharp: TowerDefense.Towers.SelfDestroyTimer.time
        VB: TowerDefense.Towers.SelfDestroyTimer.time
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: time
        path: ''
        startLine: 5330
      summary: "\nThe time before destruction\n"
      example: []
      syntax:
        content:
          CSharp: public float time
          VB: Public time As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.SelfDestroyTimer.timer
      commentId: F:TowerDefense.Towers.SelfDestroyTimer.timer
      language: CSharp
      name:
        CSharp: timer
        VB: timer
      nameWithType:
        CSharp: SelfDestroyTimer.timer
        VB: SelfDestroyTimer.timer
      qualifiedName:
        CSharp: TowerDefense.Towers.SelfDestroyTimer.timer
        VB: TowerDefense.Towers.SelfDestroyTimer.timer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: timer
        path: ''
        startLine: 5335
      summary: "\nThe controlling timer\n"
      example: []
      syntax:
        content:
          CSharp: public Timer timer
          VB: Public timer As Timer
        return:
          type: Timer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.SelfDestroyTimer.death
      commentId: F:TowerDefense.Towers.SelfDestroyTimer.death
      language: CSharp
      name:
        CSharp: death
        VB: death
      nameWithType:
        CSharp: SelfDestroyTimer.death
        VB: SelfDestroyTimer.death
      qualifiedName:
        CSharp: TowerDefense.Towers.SelfDestroyTimer.death
        VB: TowerDefense.Towers.SelfDestroyTimer.death
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: death
        path: ''
        startLine: 5340
      summary: "\nThe exposed death callback\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent death
          VB: Public death As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.SelfDestroyTimer.OnEnable
      commentId: M:TowerDefense.Towers.SelfDestroyTimer.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: SelfDestroyTimer.OnEnable()
        VB: SelfDestroyTimer.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Towers.SelfDestroyTimer.OnEnable()
        VB: TowerDefense.Towers.SelfDestroyTimer.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: OnEnable
        path: ''
        startLine: 5345
      summary: "\nPotentially initialize the time if necessary\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: TowerDefense.Towers.SelfDestroyTimer.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.SelfDestroyTimer.Update
      commentId: M:TowerDefense.Towers.SelfDestroyTimer.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: SelfDestroyTimer.Update()
        VB: SelfDestroyTimer.Update()
      qualifiedName:
        CSharp: TowerDefense.Towers.SelfDestroyTimer.Update()
        VB: TowerDefense.Towers.SelfDestroyTimer.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Update
        path: ''
        startLine: 5360
      summary: "\nUpdate the timer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Towers.SelfDestroyTimer.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd
      commentId: M:TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd
      language: CSharp
      name:
        CSharp: OnTimeEnd()
        VB: OnTimeEnd()
      nameWithType:
        CSharp: SelfDestroyTimer.OnTimeEnd()
        VB: SelfDestroyTimer.OnTimeEnd()
      qualifiedName:
        CSharp: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd()
        VB: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: OnTimeEnd
        path: ''
        startLine: 5372
      summary: "\nFires at the end of timer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnTimeEnd()
          VB: Protected Overridable Sub OnTimeEnd
      overload: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.Towers.Tower
    commentId: T:TowerDefense.Towers.Tower
    language: CSharp
    name:
      CSharp: Tower
      VB: Tower
    nameWithType:
      CSharp: Tower
      VB: Tower
    qualifiedName:
      CSharp: TowerDefense.Towers.Tower
      VB: TowerDefense.Towers.Tower
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers
    source:
      id: Tower
      path: ''
      startLine: 5393
    summary: "\nCommon functionality for all types of towers\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Tower : Targetable'
        VB: >-
          Public Class Tower

              Inherits Targetable
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Tower.levels
      commentId: F:TowerDefense.Towers.Tower.levels
      language: CSharp
      name:
        CSharp: levels
        VB: levels
      nameWithType:
        CSharp: Tower.levels
        VB: Tower.levels
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.levels
        VB: TowerDefense.Towers.Tower.levels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: levels
        path: ''
        startLine: 5398
      summary: "\nThe tower levels associated with this tower\n"
      example: []
      syntax:
        content:
          CSharp: public TowerLevel[] levels
          VB: Public levels As TowerLevel()
        return:
          type: TowerDefense.Towers.TowerLevel[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.towerName
      commentId: F:TowerDefense.Towers.Tower.towerName
      language: CSharp
      name:
        CSharp: towerName
        VB: towerName
      nameWithType:
        CSharp: Tower.towerName
        VB: Tower.towerName
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.towerName
        VB: TowerDefense.Towers.Tower.towerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: towerName
        path: ''
        startLine: 5403
      summary: "\nA generalised name common to a levels\n"
      example: []
      syntax:
        content:
          CSharp: public string towerName
          VB: Public towerName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.dimensions
      commentId: F:TowerDefense.Towers.Tower.dimensions
      language: CSharp
      name:
        CSharp: dimensions
        VB: dimensions
      nameWithType:
        CSharp: Tower.dimensions
        VB: Tower.dimensions
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.dimensions
        VB: TowerDefense.Towers.Tower.dimensions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: dimensions
        path: ''
        startLine: 5408
      summary: "\nThe size of the tower&apos;s footprint\n"
      example: []
      syntax:
        content:
          CSharp: public IntVector2 dimensions
          VB: Public dimensions As IntVector2
        return:
          type: IntVector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.enemyLayerMask
      commentId: F:TowerDefense.Towers.Tower.enemyLayerMask
      language: CSharp
      name:
        CSharp: enemyLayerMask
        VB: enemyLayerMask
      nameWithType:
        CSharp: Tower.enemyLayerMask
        VB: Tower.enemyLayerMask
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.enemyLayerMask
        VB: TowerDefense.Towers.Tower.enemyLayerMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: enemyLayerMask
        path: ''
        startLine: 5413
      summary: "\nThe physics mask the tower searches on\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask enemyLayerMask
          VB: Public enemyLayerMask As LayerMask
        return:
          type: LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.currentLevel
      commentId: P:TowerDefense.Towers.Tower.currentLevel
      language: CSharp
      name:
        CSharp: currentLevel
        VB: currentLevel
      nameWithType:
        CSharp: Tower.currentLevel
        VB: Tower.currentLevel
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.currentLevel
        VB: TowerDefense.Towers.Tower.currentLevel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: currentLevel
        path: ''
        startLine: 5418
      summary: "\nThe current level of the tower\n"
      example: []
      syntax:
        content:
          CSharp: public int currentLevel { get; protected set; }
          VB: Public Property currentLevel As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.Tower.currentLevel*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Towers.Tower.currentTowerLevel
      commentId: P:TowerDefense.Towers.Tower.currentTowerLevel
      language: CSharp
      name:
        CSharp: currentTowerLevel
        VB: currentTowerLevel
      nameWithType:
        CSharp: Tower.currentTowerLevel
        VB: Tower.currentTowerLevel
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.currentTowerLevel
        VB: TowerDefense.Towers.Tower.currentTowerLevel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: currentTowerLevel
        path: ''
        startLine: 5423
      summary: "\nReference to the data of the current level\n"
      example: []
      syntax:
        content:
          CSharp: public TowerLevel currentTowerLevel { get; protected set; }
          VB: Public Property currentTowerLevel As TowerLevel
        parameters: []
        return:
          type: TowerDefense.Towers.TowerLevel
      overload: TowerDefense.Towers.Tower.currentTowerLevel*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Towers.Tower.isAtMaxLevel
      commentId: P:TowerDefense.Towers.Tower.isAtMaxLevel
      language: CSharp
      name:
        CSharp: isAtMaxLevel
        VB: isAtMaxLevel
      nameWithType:
        CSharp: Tower.isAtMaxLevel
        VB: Tower.isAtMaxLevel
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.isAtMaxLevel
        VB: TowerDefense.Towers.Tower.isAtMaxLevel
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: isAtMaxLevel
        path: ''
        startLine: 5428
      summary: "\nGets whether the tower can level up anymore\n"
      example: []
      syntax:
        content:
          CSharp: public bool isAtMaxLevel { get; }
          VB: Public ReadOnly Property isAtMaxLevel As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Tower.isAtMaxLevel*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Tower.towerGhostPrefab
      commentId: P:TowerDefense.Towers.Tower.towerGhostPrefab
      language: CSharp
      name:
        CSharp: towerGhostPrefab
        VB: towerGhostPrefab
      nameWithType:
        CSharp: Tower.towerGhostPrefab
        VB: Tower.towerGhostPrefab
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.towerGhostPrefab
        VB: TowerDefense.Towers.Tower.towerGhostPrefab
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: towerGhostPrefab
        path: ''
        startLine: 5436
      summary: "\nGets the first level tower ghost prefab\n"
      example: []
      syntax:
        content:
          CSharp: public TowerPlacementGhost towerGhostPrefab { get; }
          VB: Public ReadOnly Property towerGhostPrefab As TowerPlacementGhost
        parameters: []
        return:
          type: TowerPlacementGhost
      overload: TowerDefense.Towers.Tower.towerGhostPrefab*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Tower.gridPosition
      commentId: P:TowerDefense.Towers.Tower.gridPosition
      language: CSharp
      name:
        CSharp: gridPosition
        VB: gridPosition
      nameWithType:
        CSharp: Tower.gridPosition
        VB: Tower.gridPosition
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.gridPosition
        VB: TowerDefense.Towers.Tower.gridPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: gridPosition
        path: ''
        startLine: 5444
      summary: "\nGets the grid position for this tower on the <xref href=\"TowerDefense.Towers.Tower.placementArea\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public IntVector2 gridPosition { get; }
          VB: Public ReadOnly Property gridPosition As IntVector2
        parameters: []
        return:
          type: IntVector2
      overload: TowerDefense.Towers.Tower.gridPosition*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        TowerDefense.Towers.Tower.placementArea: 
    - id: TowerDefense.Towers.Tower.placementArea
      commentId: P:TowerDefense.Towers.Tower.placementArea
      language: CSharp
      name:
        CSharp: placementArea
        VB: placementArea
      nameWithType:
        CSharp: Tower.placementArea
        VB: Tower.placementArea
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.placementArea
        VB: TowerDefense.Towers.Tower.placementArea
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: placementArea
        path: ''
        startLine: 5449
      summary: "\nThe placement area we&apos;ve been built on\n"
      example: []
      syntax:
        content:
          CSharp: public IPlacementArea placementArea { get; }
          VB: Public ReadOnly Property placementArea As IPlacementArea
        parameters: []
        return:
          type: IPlacementArea
      overload: TowerDefense.Towers.Tower.placementArea*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Tower.purchaseCost
      commentId: P:TowerDefense.Towers.Tower.purchaseCost
      language: CSharp
      name:
        CSharp: purchaseCost
        VB: purchaseCost
      nameWithType:
        CSharp: Tower.purchaseCost
        VB: Tower.purchaseCost
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.purchaseCost
        VB: TowerDefense.Towers.Tower.purchaseCost
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: purchaseCost
        path: ''
        startLine: 5454
      summary: "\nThe purchase cost of the tower\n"
      example: []
      syntax:
        content:
          CSharp: public int purchaseCost { get; }
          VB: Public ReadOnly Property purchaseCost As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.Tower.purchaseCost*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Tower.towerDeleted
      commentId: F:TowerDefense.Towers.Tower.towerDeleted
      language: CSharp
      name:
        CSharp: towerDeleted
        VB: towerDeleted
      nameWithType:
        CSharp: Tower.towerDeleted
        VB: Tower.towerDeleted
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.towerDeleted
        VB: TowerDefense.Towers.Tower.towerDeleted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: towerDeleted
        path: ''
        startLine: 5462
      summary: "\nThe event that fires off when a player deletes a tower\n"
      example: []
      syntax:
        content:
          CSharp: public Action towerDeleted
          VB: Public towerDeleted As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.towerDestroyed
      commentId: F:TowerDefense.Towers.Tower.towerDestroyed
      language: CSharp
      name:
        CSharp: towerDestroyed
        VB: towerDestroyed
      nameWithType:
        CSharp: Tower.towerDestroyed
        VB: Tower.towerDestroyed
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.towerDestroyed
        VB: TowerDefense.Towers.Tower.towerDestroyed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: towerDestroyed
        path: ''
        startLine: 5467
      summary: "\nThe event that fires off when a tower has been destroyed\n"
      example: []
      syntax:
        content:
          CSharp: public Action towerDestroyed
          VB: Public towerDestroyed As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.Initialize(IPlacementArea,IntVector2)
      commentId: M:TowerDefense.Towers.Tower.Initialize(IPlacementArea,IntVector2)
      language: CSharp
      name:
        CSharp: Initialize(IPlacementArea, IntVector2)
        VB: Initialize(IPlacementArea, IntVector2)
      nameWithType:
        CSharp: Tower.Initialize(IPlacementArea, IntVector2)
        VB: Tower.Initialize(IPlacementArea, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.Initialize(IPlacementArea, IntVector2)
        VB: TowerDefense.Towers.Tower.Initialize(IPlacementArea, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Initialize
        path: ''
        startLine: 5474
      summary: "\nProvide the tower with data to initialize with\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialize(IPlacementArea targetArea, IntVector2 destination)
          VB: Public Overridable Sub Initialize(targetArea As IPlacementArea, destination As IntVector2)
        parameters:
        - id: targetArea
          type: IPlacementArea
          description: The placement area configuration
        - id: destination
          type: IntVector2
          description: The destination position
      overload: TowerDefense.Towers.Tower.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.Tower.GetCostForNextLevel
      commentId: M:TowerDefense.Towers.Tower.GetCostForNextLevel
      language: CSharp
      name:
        CSharp: GetCostForNextLevel()
        VB: GetCostForNextLevel()
      nameWithType:
        CSharp: Tower.GetCostForNextLevel()
        VB: Tower.GetCostForNextLevel()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.GetCostForNextLevel()
        VB: TowerDefense.Towers.Tower.GetCostForNextLevel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: GetCostForNextLevel
        path: ''
        startLine: 5497
      summary: "\nProvides information on the cost to upgrade\n"
      example: []
      syntax:
        content:
          CSharp: public int GetCostForNextLevel()
          VB: Public Function GetCostForNextLevel As Integer
        return:
          type: System.Int32
          description: Returns -1 if the towers is already at max level, other returns the cost to upgrade
      overload: TowerDefense.Towers.Tower.GetCostForNextLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.KillTower
      commentId: M:TowerDefense.Towers.Tower.KillTower
      language: CSharp
      name:
        CSharp: KillTower()
        VB: KillTower()
      nameWithType:
        CSharp: Tower.KillTower()
        VB: Tower.KillTower()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.KillTower()
        VB: TowerDefense.Towers.Tower.KillTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: KillTower
        path: ''
        startLine: 5509
      summary: "\nKills this tower\n"
      example: []
      syntax:
        content:
          CSharp: public void KillTower()
          VB: Public Sub KillTower
      overload: TowerDefense.Towers.Tower.KillTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.GetSellLevel
      commentId: M:TowerDefense.Towers.Tower.GetSellLevel
      language: CSharp
      name:
        CSharp: GetSellLevel()
        VB: GetSellLevel()
      nameWithType:
        CSharp: Tower.GetSellLevel()
        VB: Tower.GetSellLevel()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.GetSellLevel()
        VB: TowerDefense.Towers.Tower.GetSellLevel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: GetSellLevel
        path: ''
        startLine: 5519
      summary: "\nProvides the value recived for selling this tower\n"
      example: []
      syntax:
        content:
          CSharp: public int GetSellLevel()
          VB: Public Function GetSellLevel As Integer
        return:
          type: System.Int32
          description: A sell value of the tower
      overload: TowerDefense.Towers.Tower.GetSellLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.GetSellLevel(System.Int32)
      commentId: M:TowerDefense.Towers.Tower.GetSellLevel(System.Int32)
      language: CSharp
      name:
        CSharp: GetSellLevel(Int32)
        VB: GetSellLevel(Int32)
      nameWithType:
        CSharp: Tower.GetSellLevel(Int32)
        VB: Tower.GetSellLevel(Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.GetSellLevel(System.Int32)
        VB: TowerDefense.Towers.Tower.GetSellLevel(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: GetSellLevel
        path: ''
        startLine: 5529
      summary: "\nProvides the value recived for selling this tower of a particular level\n"
      example: []
      syntax:
        content:
          CSharp: public int GetSellLevel(int level)
          VB: Public Function GetSellLevel(level As Integer) As Integer
        parameters:
        - id: level
          type: System.Int32
          description: Level of tower
        return:
          type: System.Int32
          description: A sell value of the tower
      overload: TowerDefense.Towers.Tower.GetSellLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.UpgradeTower
      commentId: M:TowerDefense.Towers.Tower.UpgradeTower
      language: CSharp
      name:
        CSharp: UpgradeTower()
        VB: UpgradeTower()
      nameWithType:
        CSharp: Tower.UpgradeTower()
        VB: Tower.UpgradeTower()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.UpgradeTower()
        VB: TowerDefense.Towers.Tower.UpgradeTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: UpgradeTower
        path: ''
        startLine: 5548
      summary: "\nUsed to (try to) upgrade the tower data\n"
      example: []
      syntax:
        content:
          CSharp: public virtual bool UpgradeTower()
          VB: Public Overridable Function UpgradeTower As Boolean
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Tower.UpgradeTower*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.Tower.DowngradeTower
      commentId: M:TowerDefense.Towers.Tower.DowngradeTower
      language: CSharp
      name:
        CSharp: DowngradeTower()
        VB: DowngradeTower()
      nameWithType:
        CSharp: Tower.DowngradeTower()
        VB: Tower.DowngradeTower()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.DowngradeTower()
        VB: TowerDefense.Towers.Tower.DowngradeTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: DowngradeTower
        path: ''
        startLine: 5564
      summary: "\nA method for downgrading tower\n"
      example: []
      syntax:
        content:
          CSharp: public virtual bool DowngradeTower()
          VB: Public Overridable Function DowngradeTower As Boolean
        return:
          type: System.Boolean
          description: "\n<returns>false</returns> if tower is at lowest level\n"
      overload: TowerDefense.Towers.Tower.DowngradeTower*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.Tower.UpgradeTowerToLevel(System.Int32)
      commentId: M:TowerDefense.Towers.Tower.UpgradeTowerToLevel(System.Int32)
      language: CSharp
      name:
        CSharp: UpgradeTowerToLevel(Int32)
        VB: UpgradeTowerToLevel(Int32)
      nameWithType:
        CSharp: Tower.UpgradeTowerToLevel(Int32)
        VB: Tower.UpgradeTowerToLevel(Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.UpgradeTowerToLevel(System.Int32)
        VB: TowerDefense.Towers.Tower.UpgradeTowerToLevel(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: UpgradeTowerToLevel
        path: ''
        startLine: 5583
      summary: "\nUsed to set the tower to any valid level\n"
      example: []
      syntax:
        content:
          CSharp: public virtual bool UpgradeTowerToLevel(int level)
          VB: Public Overridable Function UpgradeTowerToLevel(level As Integer) As Boolean
        parameters:
        - id: level
          type: System.Int32
          description: "\nThe level to upgrade the tower to\n"
        return:
          type: System.Boolean
          description: "\nTrue if successful\n"
      overload: TowerDefense.Towers.Tower.UpgradeTowerToLevel*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.Tower.Sell
      commentId: M:TowerDefense.Towers.Tower.Sell
      language: CSharp
      name:
        CSharp: Sell()
        VB: Sell()
      nameWithType:
        CSharp: Tower.Sell()
        VB: Tower.Sell()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.Sell()
        VB: TowerDefense.Towers.Tower.Sell()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Sell
        path: ''
        startLine: 5593
      syntax:
        content:
          CSharp: public void Sell()
          VB: Public Sub Sell
      overload: TowerDefense.Towers.Tower.Sell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Tower.Remove
      commentId: M:TowerDefense.Towers.Tower.Remove
      language: CSharp
      name:
        CSharp: Remove()
        VB: Remove()
      nameWithType:
        CSharp: Tower.Remove()
        VB: Tower.Remove()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.Remove()
        VB: TowerDefense.Towers.Tower.Remove()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Remove
        path: ''
        startLine: 5601
      summary: "\nRemoves tower from placement area and destroys it\n"
      example: []
      syntax:
        content:
          CSharp: public override void Remove()
          VB: Public Overrides Sub Remove
      overload: TowerDefense.Towers.Tower.Remove*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Towers.Tower.OnDestroy
      commentId: M:TowerDefense.Towers.Tower.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: Tower.OnDestroy()
        VB: Tower.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.OnDestroy()
        VB: TowerDefense.Towers.Tower.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: OnDestroy
        path: ''
        startLine: 5612
      summary: "\nunsubsribe when necessary\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.Towers.Tower.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.Tower.SetLevel(System.Int32)
      commentId: M:TowerDefense.Towers.Tower.SetLevel(System.Int32)
      language: CSharp
      name:
        CSharp: SetLevel(Int32)
        VB: SetLevel(Int32)
      nameWithType:
        CSharp: Tower.SetLevel(Int32)
        VB: Tower.SetLevel(Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.SetLevel(System.Int32)
        VB: TowerDefense.Towers.Tower.SetLevel(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: SetLevel
        path: ''
        startLine: 5623
      summary: "\nCache and update oftenly used data\n"
      example: []
      syntax:
        content:
          CSharp: protected void SetLevel(int level)
          VB: Protected Sub SetLevel(level As Integer)
        parameters:
        - id: level
          type: System.Int32
      overload: TowerDefense.Towers.Tower.SetLevel*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Tower.ScaleHealth
      commentId: M:TowerDefense.Towers.Tower.ScaleHealth
      language: CSharp
      name:
        CSharp: ScaleHealth()
        VB: ScaleHealth()
      nameWithType:
        CSharp: Tower.ScaleHealth()
        VB: Tower.ScaleHealth()
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.ScaleHealth()
        VB: TowerDefense.Towers.Tower.ScaleHealth()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: ScaleHealth
        path: ''
        startLine: 5654
      summary: "\nScales the health based on the previous health\nRequires override when the rules for scaling health on upgrade changes\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void ScaleHealth()
          VB: Protected Overridable Sub ScaleHealth
      overload: TowerDefense.Towers.Tower.ScaleHealth*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.Tower.OnLevelStateChanged(LevelState,LevelState)
      commentId: M:TowerDefense.Towers.Tower.OnLevelStateChanged(LevelState,LevelState)
      language: CSharp
      name:
        CSharp: OnLevelStateChanged(LevelState, LevelState)
        VB: OnLevelStateChanged(LevelState, LevelState)
      nameWithType:
        CSharp: Tower.OnLevelStateChanged(LevelState, LevelState)
        VB: Tower.OnLevelStateChanged(LevelState, LevelState)
      qualifiedName:
        CSharp: TowerDefense.Towers.Tower.OnLevelStateChanged(LevelState, LevelState)
        VB: TowerDefense.Towers.Tower.OnLevelStateChanged(LevelState, LevelState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: OnLevelStateChanged
        path: ''
        startLine: 5672
      summary: "\nIntiailises affectors based on the level state\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnLevelStateChanged(LevelState previous, LevelState current)
          VB: Protected Overridable Sub OnLevelStateChanged(previous As LevelState, current As LevelState)
        parameters:
        - id: previous
          type: LevelState
        - id: current
          type: LevelState
      overload: TowerDefense.Towers.Tower.OnLevelStateChanged*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.Towers.TowerLevel
    commentId: T:TowerDefense.Towers.TowerLevel
    language: CSharp
    name:
      CSharp: TowerLevel
      VB: TowerLevel
    nameWithType:
      CSharp: TowerLevel
      VB: TowerLevel
    qualifiedName:
      CSharp: TowerDefense.Towers.TowerLevel
      VB: TowerDefense.Towers.TowerLevel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers
    source:
      id: TowerLevel
      path: ''
      startLine: 5691
    summary: "\nAn individual level of a tower\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerLevel : MonoBehaviour, ISerializationCallbackReceiver'
        VB: >-
          Public Class TowerLevel

              Inherits MonoBehaviour

              Implements ISerializationCallbackReceiver
    inheritance:
    - System.Object
    implements:
    - ISerializationCallbackReceiver
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.TowerLevel.towerGhostPrefab
      commentId: F:TowerDefense.Towers.TowerLevel.towerGhostPrefab
      language: CSharp
      name:
        CSharp: towerGhostPrefab
        VB: towerGhostPrefab
      nameWithType:
        CSharp: TowerLevel.towerGhostPrefab
        VB: TowerLevel.towerGhostPrefab
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.towerGhostPrefab
        VB: TowerDefense.Towers.TowerLevel.towerGhostPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: towerGhostPrefab
        path: ''
        startLine: 5697
      summary: "\nThe prefab for communicating placement in the scene\n"
      example: []
      syntax:
        content:
          CSharp: public TowerPlacementGhost towerGhostPrefab
          VB: Public towerGhostPrefab As TowerPlacementGhost
        return:
          type: TowerPlacementGhost
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.buildEffectPrefab
      commentId: F:TowerDefense.Towers.TowerLevel.buildEffectPrefab
      language: CSharp
      name:
        CSharp: buildEffectPrefab
        VB: buildEffectPrefab
      nameWithType:
        CSharp: TowerLevel.buildEffectPrefab
        VB: TowerLevel.buildEffectPrefab
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.buildEffectPrefab
        VB: TowerDefense.Towers.TowerLevel.buildEffectPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: buildEffectPrefab
        path: ''
        startLine: 5702
      summary: "\nBuild effect gameObject to instantiate on start\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject buildEffectPrefab
          VB: Public buildEffectPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.levelData
      commentId: F:TowerDefense.Towers.TowerLevel.levelData
      language: CSharp
      name:
        CSharp: levelData
        VB: levelData
      nameWithType:
        CSharp: TowerLevel.levelData
        VB: TowerLevel.levelData
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.levelData
        VB: TowerDefense.Towers.TowerLevel.levelData
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: levelData
        path: ''
        startLine: 5707
      summary: "\nReference to scriptable object with level data on it\n"
      example: []
      syntax:
        content:
          CSharp: public TowerLevelData levelData
          VB: Public levelData As TowerLevelData
        return:
          type: TowerLevelData
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.m_ParentTower
      commentId: F:TowerDefense.Towers.TowerLevel.m_ParentTower
      language: CSharp
      name:
        CSharp: m_ParentTower
        VB: m_ParentTower
      nameWithType:
        CSharp: TowerLevel.m_ParentTower
        VB: TowerLevel.m_ParentTower
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.m_ParentTower
        VB: TowerDefense.Towers.TowerLevel.m_ParentTower
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: m_ParentTower
        path: ''
        startLine: 5712
      summary: "\nThe parent tower controller of this tower\n"
      example: []
      syntax:
        content:
          CSharp: protected Tower m_ParentTower
          VB: Protected m_ParentTower As Tower
        return:
          type: TowerDefense.Towers.Tower
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.TowerLevel.Affectors
      commentId: P:TowerDefense.Towers.TowerLevel.Affectors
      language: CSharp
      name:
        CSharp: Affectors
        VB: Affectors
      nameWithType:
        CSharp: TowerLevel.Affectors
        VB: TowerLevel.Affectors
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.Affectors
        VB: TowerDefense.Towers.TowerLevel.Affectors
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Affectors
        path: ''
        startLine: 5722
      summary: "\nGets the list of effects attached to the tower\n"
      example: []
      syntax:
        content:
          CSharp: protected Affector[] Affectors { get; }
          VB: Protected ReadOnly Property Affectors As Affector()
        parameters: []
        return:
          type: Affector[]
      overload: TowerDefense.Towers.TowerLevel.Affectors*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.mask
      commentId: P:TowerDefense.Towers.TowerLevel.mask
      language: CSharp
      name:
        CSharp: mask
        VB: mask
      nameWithType:
        CSharp: TowerLevel.mask
        VB: TowerLevel.mask
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.mask
        VB: TowerDefense.Towers.TowerLevel.mask
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: mask
        path: ''
        startLine: 5737
      summary: "\nThe physics layer mask that the tower searches on\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask mask { get; protected set; }
          VB: Public Property mask As LayerMask
        parameters: []
        return:
          type: LayerMask
      overload: TowerDefense.Towers.TowerLevel.mask*
      modifiers:
        CSharp:
        - public
        - get
        - protected set
        VB:
        - Public
        - Get
        - Protected Set
    - id: TowerDefense.Towers.TowerLevel.cost
      commentId: P:TowerDefense.Towers.TowerLevel.cost
      language: CSharp
      name:
        CSharp: cost
        VB: cost
      nameWithType:
        CSharp: TowerLevel.cost
        VB: TowerLevel.cost
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.cost
        VB: TowerDefense.Towers.TowerLevel.cost
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: cost
        path: ''
        startLine: 5742
      summary: "\nGets the cost value\n"
      example: []
      syntax:
        content:
          CSharp: public int cost { get; }
          VB: Public ReadOnly Property cost As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.TowerLevel.cost*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.sell
      commentId: P:TowerDefense.Towers.TowerLevel.sell
      language: CSharp
      name:
        CSharp: sell
        VB: sell
      nameWithType:
        CSharp: TowerLevel.sell
        VB: TowerLevel.sell
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.sell
        VB: TowerDefense.Towers.TowerLevel.sell
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: sell
        path: ''
        startLine: 5750
      summary: "\nGets the sell value\n"
      example: []
      syntax:
        content:
          CSharp: public int sell { get; }
          VB: Public ReadOnly Property sell As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.TowerLevel.sell*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.maxHealth
      commentId: P:TowerDefense.Towers.TowerLevel.maxHealth
      language: CSharp
      name:
        CSharp: maxHealth
        VB: maxHealth
      nameWithType:
        CSharp: TowerLevel.maxHealth
        VB: TowerLevel.maxHealth
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.maxHealth
        VB: TowerDefense.Towers.TowerLevel.maxHealth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: maxHealth
        path: ''
        startLine: 5758
      summary: "\nGets the max health\n"
      example: []
      syntax:
        content:
          CSharp: public int maxHealth { get; }
          VB: Public ReadOnly Property maxHealth As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.TowerLevel.maxHealth*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.startingHealth
      commentId: P:TowerDefense.Towers.TowerLevel.startingHealth
      language: CSharp
      name:
        CSharp: startingHealth
        VB: startingHealth
      nameWithType:
        CSharp: TowerLevel.startingHealth
        VB: TowerLevel.startingHealth
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.startingHealth
        VB: TowerDefense.Towers.TowerLevel.startingHealth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: startingHealth
        path: ''
        startLine: 5766
      summary: "\nGets the starting health\n"
      example: []
      syntax:
        content:
          CSharp: public int startingHealth { get; }
          VB: Public ReadOnly Property startingHealth As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.TowerLevel.startingHealth*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.description
      commentId: P:TowerDefense.Towers.TowerLevel.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: TowerLevel.description
        VB: TowerLevel.description
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.description
        VB: TowerDefense.Towers.TowerLevel.description
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: description
        path: ''
        startLine: 5774
      summary: "\nGets the tower description\n"
      example: []
      syntax:
        content:
          CSharp: public string description { get; }
          VB: Public ReadOnly Property description As String
        parameters: []
        return:
          type: System.String
      overload: TowerDefense.Towers.TowerLevel.description*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.upgradeDescription
      commentId: P:TowerDefense.Towers.TowerLevel.upgradeDescription
      language: CSharp
      name:
        CSharp: upgradeDescription
        VB: upgradeDescription
      nameWithType:
        CSharp: TowerLevel.upgradeDescription
        VB: TowerLevel.upgradeDescription
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.upgradeDescription
        VB: TowerDefense.Towers.TowerLevel.upgradeDescription
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: upgradeDescription
        path: ''
        startLine: 5782
      summary: "\nGets the tower description\n"
      example: []
      syntax:
        content:
          CSharp: public string upgradeDescription { get; }
          VB: Public ReadOnly Property upgradeDescription As String
        parameters: []
        return:
          type: System.String
      overload: TowerDefense.Towers.TowerLevel.upgradeDescription*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.TowerLevel.Initialize(TowerDefense.Towers.Tower,LayerMask,IAlignmentProvider)
      commentId: M:TowerDefense.Towers.TowerLevel.Initialize(TowerDefense.Towers.Tower,LayerMask,IAlignmentProvider)
      language: CSharp
      name:
        CSharp: Initialize(Tower, LayerMask, IAlignmentProvider)
        VB: Initialize(Tower, LayerMask, IAlignmentProvider)
      nameWithType:
        CSharp: TowerLevel.Initialize(Tower, LayerMask, IAlignmentProvider)
        VB: TowerLevel.Initialize(Tower, LayerMask, IAlignmentProvider)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.Initialize(TowerDefense.Towers.Tower, LayerMask, IAlignmentProvider)
        VB: TowerDefense.Towers.TowerLevel.Initialize(TowerDefense.Towers.Tower, LayerMask, IAlignmentProvider)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Initialize
        path: ''
        startLine: 5790
      summary: "\nInitialises the Effects attached to this object\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialize(Tower tower, LayerMask enemyMask, IAlignmentProvider alignment)
          VB: Public Overridable Sub Initialize(tower As Tower, enemyMask As LayerMask, alignment As IAlignmentProvider)
        parameters:
        - id: tower
          type: TowerDefense.Towers.Tower
        - id: enemyMask
          type: LayerMask
        - id: alignment
          type: IAlignmentProvider
      overload: TowerDefense.Towers.TowerLevel.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.TowerLevel.SetAffectorState(System.Boolean)
      commentId: M:TowerDefense.Towers.TowerLevel.SetAffectorState(System.Boolean)
      language: CSharp
      name:
        CSharp: SetAffectorState(Boolean)
        VB: SetAffectorState(Boolean)
      nameWithType:
        CSharp: TowerLevel.SetAffectorState(Boolean)
        VB: TowerLevel.SetAffectorState(Boolean)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.SetAffectorState(System.Boolean)
        VB: TowerDefense.Towers.TowerLevel.SetAffectorState(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: SetAffectorState
        path: ''
        startLine: 5804
      summary: "\nA method for activating or deactivating the attached <xref href=\"TowerDefense.Towers.TowerLevel.Affectors\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAffectorState(bool state)
          VB: Public Sub SetAffectorState(state As Boolean)
        parameters:
        - id: state
          type: System.Boolean
      overload: TowerDefense.Towers.TowerLevel.SetAffectorState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.Towers.TowerLevel.Affectors: 
    - id: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers
      commentId: M:TowerDefense.Towers.TowerLevel.GetRadiusVisualizers
      language: CSharp
      name:
        CSharp: GetRadiusVisualizers()
        VB: GetRadiusVisualizers()
      nameWithType:
        CSharp: TowerLevel.GetRadiusVisualizers()
        VB: TowerLevel.GetRadiusVisualizers()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers()
        VB: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: GetRadiusVisualizers
        path: ''
        startLine: 5819
      summary: "\nReturns a list of affectors that implement ITowerRadiusVisualizer\n"
      example: []
      syntax:
        content:
          CSharp: public List<ITowerRadiusProvider> GetRadiusVisualizers()
          VB: Public Function GetRadiusVisualizers As List(Of ITowerRadiusProvider)
        return:
          type: List{TowerDefense.Towers.ITowerRadiusProvider}
          description: ITowerRadiusVisualizers of tower
      overload: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.GetTowerDps
      commentId: M:TowerDefense.Towers.TowerLevel.GetTowerDps
      language: CSharp
      name:
        CSharp: GetTowerDps()
        VB: GetTowerDps()
      nameWithType:
        CSharp: TowerLevel.GetTowerDps()
        VB: TowerLevel.GetTowerDps()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.GetTowerDps()
        VB: TowerDefense.Towers.TowerLevel.GetTowerDps()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: GetTowerDps
        path: ''
        startLine: 5837
      summary: "\nReturns the dps of the tower\n"
      example: []
      syntax:
        content:
          CSharp: public float GetTowerDps()
          VB: Public Function GetTowerDps As Single
        return:
          type: System.Single
          description: The dps of the tower
      overload: TowerDefense.Towers.TowerLevel.GetTowerDps*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.Kill
      commentId: M:TowerDefense.Towers.TowerLevel.Kill
      language: CSharp
      name:
        CSharp: Kill()
        VB: Kill()
      nameWithType:
        CSharp: TowerLevel.Kill()
        VB: TowerLevel.Kill()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.Kill()
        VB: TowerDefense.Towers.TowerLevel.Kill()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: Kill
        path: ''
        startLine: 5851
      syntax:
        content:
          CSharp: public void Kill()
          VB: Public Sub Kill
      overload: TowerDefense.Towers.TowerLevel.Kill*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.OnBeforeSerialize
      commentId: M:TowerDefense.Towers.TowerLevel.OnBeforeSerialize
      language: CSharp
      name:
        CSharp: OnBeforeSerialize()
        VB: OnBeforeSerialize()
      nameWithType:
        CSharp: TowerLevel.OnBeforeSerialize()
        VB: TowerLevel.OnBeforeSerialize()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.OnBeforeSerialize()
        VB: TowerDefense.Towers.TowerLevel.OnBeforeSerialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: OnBeforeSerialize
        path: ''
        startLine: 5856
      syntax:
        content:
          CSharp: public void OnBeforeSerialize()
          VB: Public Sub OnBeforeSerialize
      overload: TowerDefense.Towers.TowerLevel.OnBeforeSerialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLevel.OnAfterDeserialize
      commentId: M:TowerDefense.Towers.TowerLevel.OnAfterDeserialize
      language: CSharp
      name:
        CSharp: OnAfterDeserialize()
        VB: OnAfterDeserialize()
      nameWithType:
        CSharp: TowerLevel.OnAfterDeserialize()
        VB: TowerLevel.OnAfterDeserialize()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLevel.OnAfterDeserialize()
        VB: TowerDefense.Towers.TowerLevel.OnAfterDeserialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers
      source:
        id: OnAfterDeserialize
        path: ''
        startLine: 5860
      syntax:
        content:
          CSharp: public void OnAfterDeserialize()
          VB: Public Sub OnAfterDeserialize
      overload: TowerDefense.Towers.TowerLevel.OnAfterDeserialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TowerDefense.Towers.Data
  commentId: N:TowerDefense.Towers.Data
  language: CSharp
  name:
    CSharp: TowerDefense.Towers.Data
    VB: TowerDefense.Towers.Data
  nameWithType:
    CSharp: TowerDefense.Towers.Data
    VB: TowerDefense.Towers.Data
  qualifiedName:
    CSharp: TowerDefense.Towers.Data
    VB: TowerDefense.Towers.Data
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Towers.Data.TowerLevelData
    commentId: T:TowerDefense.Towers.Data.TowerLevelData
    language: CSharp
    name:
      CSharp: TowerLevelData
      VB: TowerLevelData
    nameWithType:
      CSharp: TowerLevelData
      VB: TowerLevelData
    qualifiedName:
      CSharp: TowerDefense.Towers.Data.TowerLevelData
      VB: TowerDefense.Towers.Data.TowerLevelData
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Data
    source:
      id: TowerLevelData
      path: ''
      startLine: 5886
    summary: "\nData container for settings per tower level\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerLevelData : ScriptableObject'
        VB: >-
          Public Class TowerLevelData

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Data.TowerLevelData.description
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: TowerLevelData.description
        VB: TowerLevelData.description
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.description
        VB: TowerDefense.Towers.Data.TowerLevelData.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: description
        path: ''
        startLine: 5892
      summary: "\nA description of the tower for displaying on the UI\n"
      example: []
      syntax:
        content:
          CSharp: public string description
          VB: Public description As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLevelData.upgradeDescription
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.upgradeDescription
      language: CSharp
      name:
        CSharp: upgradeDescription
        VB: upgradeDescription
      nameWithType:
        CSharp: TowerLevelData.upgradeDescription
        VB: TowerLevelData.upgradeDescription
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.upgradeDescription
        VB: TowerDefense.Towers.Data.TowerLevelData.upgradeDescription
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: upgradeDescription
        path: ''
        startLine: 5897
      summary: "\nA description of the tower for displaying on the UI\n"
      example: []
      syntax:
        content:
          CSharp: public string upgradeDescription
          VB: Public upgradeDescription As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLevelData.cost
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.cost
      language: CSharp
      name:
        CSharp: cost
        VB: cost
      nameWithType:
        CSharp: TowerLevelData.cost
        VB: TowerLevelData.cost
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.cost
        VB: TowerDefense.Towers.Data.TowerLevelData.cost
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: cost
        path: ''
        startLine: 5902
      summary: "\nThe cost to upgrade to this level\n"
      example: []
      syntax:
        content:
          CSharp: public int cost
          VB: Public cost As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLevelData.sell
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.sell
      language: CSharp
      name:
        CSharp: sell
        VB: sell
      nameWithType:
        CSharp: TowerLevelData.sell
        VB: TowerLevelData.sell
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.sell
        VB: TowerDefense.Towers.Data.TowerLevelData.sell
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: sell
        path: ''
        startLine: 5907
      summary: "\nThe sell cost of the tower\n"
      example: []
      syntax:
        content:
          CSharp: public int sell
          VB: Public sell As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLevelData.maxHealth
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.maxHealth
      language: CSharp
      name:
        CSharp: maxHealth
        VB: maxHealth
      nameWithType:
        CSharp: TowerLevelData.maxHealth
        VB: TowerLevelData.maxHealth
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.maxHealth
        VB: TowerDefense.Towers.Data.TowerLevelData.maxHealth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: maxHealth
        path: ''
        startLine: 5912
      summary: "\nThe max health\n"
      example: []
      syntax:
        content:
          CSharp: public int maxHealth
          VB: Public maxHealth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLevelData.startingHealth
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.startingHealth
      language: CSharp
      name:
        CSharp: startingHealth
        VB: startingHealth
      nameWithType:
        CSharp: TowerLevelData.startingHealth
        VB: TowerLevelData.startingHealth
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.startingHealth
        VB: TowerDefense.Towers.Data.TowerLevelData.startingHealth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: startingHealth
        path: ''
        startLine: 5917
      summary: "\nThe starting health\n"
      example: []
      syntax:
        content:
          CSharp: public int startingHealth
          VB: Public startingHealth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLevelData.icon
      commentId: F:TowerDefense.Towers.Data.TowerLevelData.icon
      language: CSharp
      name:
        CSharp: icon
        VB: icon
      nameWithType:
        CSharp: TowerLevelData.icon
        VB: TowerLevelData.icon
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLevelData.icon
        VB: TowerDefense.Towers.Data.TowerLevelData.icon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: icon
        path: ''
        startLine: 5922
      summary: "\nThe tower icon\n"
      example: []
      syntax:
        content:
          CSharp: public Sprite icon
          VB: Public icon As Sprite
        return:
          type: Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Towers.Data.TowerLibrary
    commentId: T:TowerDefense.Towers.Data.TowerLibrary
    language: CSharp
    name:
      CSharp: TowerLibrary
      VB: TowerLibrary
    nameWithType:
      CSharp: TowerLibrary
      VB: TowerLibrary
    qualifiedName:
      CSharp: TowerDefense.Towers.Data.TowerLibrary
      VB: TowerDefense.Towers.Data.TowerLibrary
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Data
    source:
      id: TowerLibrary
      path: ''
      startLine: 5935
    summary: "\nThe asset which holds the list of different towers\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerLibrary : ScriptableObject, IList<Tower>, IDictionary<string, Tower>'
        VB: >-
          Public Class TowerLibrary

              Inherits ScriptableObject

              Implements IList(Of Tower), IDictionary(Of String, Tower)
    inheritance:
    - System.Object
    implements:
    - IList{TowerDefense.Towers.Tower}
    - IDictionary{System.String,TowerDefense.Towers.Tower}
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Data.TowerLibrary.configurations
      commentId: F:TowerDefense.Towers.Data.TowerLibrary.configurations
      language: CSharp
      name:
        CSharp: configurations
        VB: configurations
      nameWithType:
        CSharp: TowerLibrary.configurations
        VB: TowerLibrary.configurations
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.configurations
        VB: TowerDefense.Towers.Data.TowerLibrary.configurations
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: configurations
        path: ''
        startLine: 5941
      summary: "\nThe list of all the towers\n"
      example: []
      syntax:
        content:
          CSharp: public List<Tower> configurations
          VB: Public configurations As List(Of Tower)
        return:
          type: List{TowerDefense.Towers.Tower}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Item(System.Int32)
      commentId: P:TowerDefense.Towers.Data.TowerLibrary.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: TowerLibrary.Item[Int32]
        VB: TowerLibrary.Item(Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Item[System.Int32]
        VB: TowerDefense.Towers.Data.TowerLibrary.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: this[]
        path: ''
        startLine: 5953
      summary: "\nThe accessor to the towers by index\n"
      example: []
      syntax:
        content:
          CSharp: public Tower this[int index] { get; }
          VB: Public ReadOnly Property Item(index As Integer) As Tower
        parameters:
        - id: index
          type: System.Int32
          description: ''
        return:
          type: TowerDefense.Towers.Tower
      overload: TowerDefense.Towers.Data.TowerLibrary.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize
      language: CSharp
      name:
        CSharp: OnBeforeSerialize()
        VB: OnBeforeSerialize()
      nameWithType:
        CSharp: TowerLibrary.OnBeforeSerialize()
        VB: TowerLibrary.OnBeforeSerialize()
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize()
        VB: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: OnBeforeSerialize
        path: ''
        startLine: 5958
      syntax:
        content:
          CSharp: public void OnBeforeSerialize()
          VB: Public Sub OnBeforeSerialize
      overload: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize
      language: CSharp
      name:
        CSharp: OnAfterDeserialize()
        VB: OnAfterDeserialize()
      nameWithType:
        CSharp: TowerLibrary.OnAfterDeserialize()
        VB: TowerLibrary.OnAfterDeserialize()
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize()
        VB: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: OnAfterDeserialize
        path: ''
        startLine: 5965
      summary: "\nConvert the list (m_Configurations) to a dictionary for access via name\n"
      example: []
      syntax:
        content:
          CSharp: public void OnAfterDeserialize()
          VB: Public Sub OnAfterDeserialize
      overload: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.ContainsKey(System.String)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.ContainsKey(System.String)
      language: CSharp
      name:
        CSharp: ContainsKey(String)
        VB: ContainsKey(String)
      nameWithType:
        CSharp: TowerLibrary.ContainsKey(String)
        VB: TowerLibrary.ContainsKey(String)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.ContainsKey(System.String)
        VB: TowerDefense.Towers.Data.TowerLibrary.ContainsKey(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: ContainsKey
        path: ''
        startLine: 5974
      syntax:
        content:
          CSharp: public bool ContainsKey(string key)
          VB: Public Function ContainsKey(key As String) As Boolean
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.ContainsKey*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Add(System.String,TowerDefense.Towers.Tower)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Add(System.String,TowerDefense.Towers.Tower)
      language: CSharp
      name:
        CSharp: Add(String, Tower)
        VB: Add(String, Tower)
      nameWithType:
        CSharp: TowerLibrary.Add(String, Tower)
        VB: TowerLibrary.Add(String, Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Add(System.String, TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.Add(System.String, TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Add
        path: ''
        startLine: 5979
      syntax:
        content:
          CSharp: public void Add(string key, Tower value)
          VB: Public Sub Add(key As String, value As Tower)
        parameters:
        - id: key
          type: System.String
        - id: value
          type: TowerDefense.Towers.Tower
      overload: TowerDefense.Towers.Data.TowerLibrary.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Remove(System.String)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Remove(System.String)
      language: CSharp
      name:
        CSharp: Remove(String)
        VB: Remove(String)
      nameWithType:
        CSharp: TowerLibrary.Remove(String)
        VB: TowerLibrary.Remove(String)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Remove(System.String)
        VB: TowerDefense.Towers.Data.TowerLibrary.Remove(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Remove
        path: ''
        startLine: 5984
      syntax:
        content:
          CSharp: public bool Remove(string key)
          VB: Public Function Remove(key As String) As Boolean
        parameters:
        - id: key
          type: System.String
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.Remove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.TryGetValue(System.String,TowerDefense.Towers.Tower@)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.TryGetValue(System.String,TowerDefense.Towers.Tower@)
      language: CSharp
      name:
        CSharp: TryGetValue(String, out Tower)
        VB: TryGetValue(String, ByRef Tower)
      nameWithType:
        CSharp: TowerLibrary.TryGetValue(String, out Tower)
        VB: TowerLibrary.TryGetValue(String, ByRef Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.TryGetValue(System.String, out TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.TryGetValue(System.String, ByRef TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: TryGetValue
        path: ''
        startLine: 5989
      syntax:
        content:
          CSharp: public bool TryGetValue(string key, out Tower value)
          VB: Public Function TryGetValue(key As String, ByRef value As Tower) As Boolean
        parameters:
        - id: key
          type: System.String
        - id: value
          type: TowerDefense.Towers.Tower
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.TryGetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Keys
      commentId: P:TowerDefense.Towers.Data.TowerLibrary.Keys
      language: CSharp
      name:
        CSharp: Keys
        VB: Keys
      nameWithType:
        CSharp: TowerLibrary.Keys
        VB: TowerLibrary.Keys
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Keys
        VB: TowerDefense.Towers.Data.TowerLibrary.Keys
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Keys
        path: ''
        startLine: 6000
      syntax:
        content:
          CSharp: public ICollection<string> Keys { get; }
          VB: Public ReadOnly Property Keys As ICollection(Of String)
        parameters: []
        return:
          type: ICollection{System.String}
      overload: TowerDefense.Towers.Data.TowerLibrary.Keys*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Data.TowerLibrary.Add(KeyValuePair{System.String,TowerDefense.Towers.Tower})
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Add(KeyValuePair{System.String,TowerDefense.Towers.Tower})
      language: CSharp
      name:
        CSharp: Add(KeyValuePair<String, Tower>)
        VB: Add(KeyValuePair(Of String, Tower))
      nameWithType:
        CSharp: TowerLibrary.Add(KeyValuePair<String, Tower>)
        VB: TowerLibrary.Add(KeyValuePair(Of String, Tower))
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Add(KeyValuePair<System.String, TowerDefense.Towers.Tower>)
        VB: TowerDefense.Towers.Data.TowerLibrary.Add(KeyValuePair(Of System.String, TowerDefense.Towers.Tower))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Add
        path: ''
        startLine: 6015
      syntax:
        content:
          CSharp: public void Add(KeyValuePair<string, Tower> item)
          VB: Public Sub Add(item As KeyValuePair(Of String, Tower))
        parameters:
        - id: item
          type: KeyValuePair{System.String,TowerDefense.Towers.Tower}
      overload: TowerDefense.Towers.Data.TowerLibrary.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Remove(KeyValuePair{System.String,TowerDefense.Towers.Tower})
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Remove(KeyValuePair{System.String,TowerDefense.Towers.Tower})
      language: CSharp
      name:
        CSharp: Remove(KeyValuePair<String, Tower>)
        VB: Remove(KeyValuePair(Of String, Tower))
      nameWithType:
        CSharp: TowerLibrary.Remove(KeyValuePair<String, Tower>)
        VB: TowerLibrary.Remove(KeyValuePair(Of String, Tower))
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Remove(KeyValuePair<System.String, TowerDefense.Towers.Tower>)
        VB: TowerDefense.Towers.Data.TowerLibrary.Remove(KeyValuePair(Of System.String, TowerDefense.Towers.Tower))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Remove
        path: ''
        startLine: 6020
      syntax:
        content:
          CSharp: public bool Remove(KeyValuePair<string, Tower> item)
          VB: Public Function Remove(item As KeyValuePair(Of String, Tower)) As Boolean
        parameters:
        - id: item
          type: KeyValuePair{System.String,TowerDefense.Towers.Tower}
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.Remove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Contains(KeyValuePair{System.String,TowerDefense.Towers.Tower})
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Contains(KeyValuePair{System.String,TowerDefense.Towers.Tower})
      language: CSharp
      name:
        CSharp: Contains(KeyValuePair<String, Tower>)
        VB: Contains(KeyValuePair(Of String, Tower))
      nameWithType:
        CSharp: TowerLibrary.Contains(KeyValuePair<String, Tower>)
        VB: TowerLibrary.Contains(KeyValuePair(Of String, Tower))
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Contains(KeyValuePair<System.String, TowerDefense.Towers.Tower>)
        VB: TowerDefense.Towers.Data.TowerLibrary.Contains(KeyValuePair(Of System.String, TowerDefense.Towers.Tower))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Contains
        path: ''
        startLine: 6025
      syntax:
        content:
          CSharp: public bool Contains(KeyValuePair<string, Tower> item)
          VB: Public Function Contains(item As KeyValuePair(Of String, Tower)) As Boolean
        parameters:
        - id: item
          type: KeyValuePair{System.String,TowerDefense.Towers.Tower}
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.Contains*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.CopyTo(KeyValuePair{System.String,TowerDefense.Towers.Tower}[],System.Int32)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.CopyTo(KeyValuePair{System.String,TowerDefense.Towers.Tower}[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(KeyValuePair<String, Tower>[], Int32)
        VB: CopyTo(KeyValuePair(Of String, Tower)(), Int32)
      nameWithType:
        CSharp: TowerLibrary.CopyTo(KeyValuePair<String, Tower>[], Int32)
        VB: TowerLibrary.CopyTo(KeyValuePair(Of String, Tower)(), Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.CopyTo(KeyValuePair<System.String, TowerDefense.Towers.Tower>[], System.Int32)
        VB: TowerDefense.Towers.Data.TowerLibrary.CopyTo(KeyValuePair(Of System.String, TowerDefense.Towers.Tower)(), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: CopyTo
        path: ''
        startLine: 6030
      syntax:
        content:
          CSharp: public void CopyTo(KeyValuePair<string, Tower>[] array, int arrayIndex)
          VB: Public Sub CopyTo(array As KeyValuePair(Of String, Tower)(), arrayIndex As Integer)
        parameters:
        - id: array
          type: KeyValuePair{System.String,TowerDefense.Towers.Tower}[]
        - id: arrayIndex
          type: System.Int32
      overload: TowerDefense.Towers.Data.TowerLibrary.CopyTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.IndexOf(TowerDefense.Towers.Tower)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.IndexOf(TowerDefense.Towers.Tower)
      language: CSharp
      name:
        CSharp: IndexOf(Tower)
        VB: IndexOf(Tower)
      nameWithType:
        CSharp: TowerLibrary.IndexOf(Tower)
        VB: TowerLibrary.IndexOf(Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.IndexOf(TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.IndexOf(TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: IndexOf
        path: ''
        startLine: 6041
      syntax:
        content:
          CSharp: public int IndexOf(Tower item)
          VB: Public Function IndexOf(item As Tower) As Integer
        parameters:
        - id: item
          type: TowerDefense.Towers.Tower
        return:
          type: System.Int32
      overload: TowerDefense.Towers.Data.TowerLibrary.IndexOf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Insert(System.Int32,TowerDefense.Towers.Tower)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Insert(System.Int32,TowerDefense.Towers.Tower)
      language: CSharp
      name:
        CSharp: Insert(Int32, Tower)
        VB: Insert(Int32, Tower)
      nameWithType:
        CSharp: TowerLibrary.Insert(Int32, Tower)
        VB: TowerLibrary.Insert(Int32, Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Insert(System.Int32, TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.Insert(System.Int32, TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Insert
        path: ''
        startLine: 6046
      syntax:
        content:
          CSharp: public void Insert(int index, Tower item)
          VB: Public Sub Insert(index As Integer, item As Tower)
        parameters:
        - id: index
          type: System.Int32
        - id: item
          type: TowerDefense.Towers.Tower
      overload: TowerDefense.Towers.Data.TowerLibrary.Insert*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.RemoveAt(System.Int32)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.RemoveAt(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveAt(Int32)
        VB: RemoveAt(Int32)
      nameWithType:
        CSharp: TowerLibrary.RemoveAt(Int32)
        VB: TowerLibrary.RemoveAt(Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.RemoveAt(System.Int32)
        VB: TowerDefense.Towers.Data.TowerLibrary.RemoveAt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: RemoveAt
        path: ''
        startLine: 6051
      syntax:
        content:
          CSharp: public void RemoveAt(int index)
          VB: Public Sub RemoveAt(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: TowerDefense.Towers.Data.TowerLibrary.RemoveAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: TowerLibrary.GetEnumerator()
        VB: TowerLibrary.GetEnumerator()
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator()
        VB: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: GetEnumerator
        path: ''
        startLine: 6062
      syntax:
        content:
          CSharp: public IEnumerator<Tower> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of Tower)
        return:
          type: IEnumerator{TowerDefense.Towers.Tower}
      overload: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Add(TowerDefense.Towers.Tower)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Add(TowerDefense.Towers.Tower)
      language: CSharp
      name:
        CSharp: Add(Tower)
        VB: Add(Tower)
      nameWithType:
        CSharp: TowerLibrary.Add(Tower)
        VB: TowerLibrary.Add(Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Add(TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.Add(TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Add
        path: ''
        startLine: 6072
      syntax:
        content:
          CSharp: public void Add(Tower item)
          VB: Public Sub Add(item As Tower)
        parameters:
        - id: item
          type: TowerDefense.Towers.Tower
      overload: TowerDefense.Towers.Data.TowerLibrary.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Clear
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Clear
      language: CSharp
      name:
        CSharp: Clear()
        VB: Clear()
      nameWithType:
        CSharp: TowerLibrary.Clear()
        VB: TowerLibrary.Clear()
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Clear()
        VB: TowerDefense.Towers.Data.TowerLibrary.Clear()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Clear
        path: ''
        startLine: 6077
      syntax:
        content:
          CSharp: public void Clear()
          VB: Public Sub Clear
      overload: TowerDefense.Towers.Data.TowerLibrary.Clear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Contains(TowerDefense.Towers.Tower)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Contains(TowerDefense.Towers.Tower)
      language: CSharp
      name:
        CSharp: Contains(Tower)
        VB: Contains(Tower)
      nameWithType:
        CSharp: TowerLibrary.Contains(Tower)
        VB: TowerLibrary.Contains(Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Contains(TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.Contains(TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Contains
        path: ''
        startLine: 6082
      syntax:
        content:
          CSharp: public bool Contains(Tower item)
          VB: Public Function Contains(item As Tower) As Boolean
        parameters:
        - id: item
          type: TowerDefense.Towers.Tower
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.Contains*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.CopyTo(TowerDefense.Towers.Tower[],System.Int32)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.CopyTo(TowerDefense.Towers.Tower[],System.Int32)
      language: CSharp
      name:
        CSharp: CopyTo(Tower[], Int32)
        VB: CopyTo(Tower(), Int32)
      nameWithType:
        CSharp: TowerLibrary.CopyTo(Tower[], Int32)
        VB: TowerLibrary.CopyTo(Tower(), Int32)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.CopyTo(TowerDefense.Towers.Tower[], System.Int32)
        VB: TowerDefense.Towers.Data.TowerLibrary.CopyTo(TowerDefense.Towers.Tower(), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: CopyTo
        path: ''
        startLine: 6087
      syntax:
        content:
          CSharp: public void CopyTo(Tower[] array, int arrayIndex)
          VB: Public Sub CopyTo(array As Tower(), arrayIndex As Integer)
        parameters:
        - id: array
          type: TowerDefense.Towers.Tower[]
        - id: arrayIndex
          type: System.Int32
      overload: TowerDefense.Towers.Data.TowerLibrary.CopyTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Remove(TowerDefense.Towers.Tower)
      commentId: M:TowerDefense.Towers.Data.TowerLibrary.Remove(TowerDefense.Towers.Tower)
      language: CSharp
      name:
        CSharp: Remove(Tower)
        VB: Remove(Tower)
      nameWithType:
        CSharp: TowerLibrary.Remove(Tower)
        VB: TowerLibrary.Remove(Tower)
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Remove(TowerDefense.Towers.Tower)
        VB: TowerDefense.Towers.Data.TowerLibrary.Remove(TowerDefense.Towers.Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Remove
        path: ''
        startLine: 6092
      syntax:
        content:
          CSharp: public bool Remove(Tower item)
          VB: Public Function Remove(item As Tower) As Boolean
        parameters:
        - id: item
          type: TowerDefense.Towers.Tower
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.Remove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Data.TowerLibrary.Count
      commentId: P:TowerDefense.Towers.Data.TowerLibrary.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: TowerLibrary.Count
        VB: TowerLibrary.Count
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.Count
        VB: TowerDefense.Towers.Data.TowerLibrary.Count
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: Count
        path: ''
        startLine: 6097
      syntax:
        content:
          CSharp: public int Count { get; }
          VB: Public ReadOnly Property Count As Integer
        parameters: []
        return:
          type: System.Int32
      overload: TowerDefense.Towers.Data.TowerLibrary.Count*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
      commentId: P:TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
      language: CSharp
      name:
        CSharp: IsReadOnly
        VB: IsReadOnly
      nameWithType:
        CSharp: TowerLibrary.IsReadOnly
        VB: TowerLibrary.IsReadOnly
      qualifiedName:
        CSharp: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
        VB: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Data
      source:
        id: IsReadOnly
        path: ''
        startLine: 6102
      syntax:
        content:
          CSharp: public bool IsReadOnly { get; }
          VB: Public ReadOnly Property IsReadOnly As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
- id: TowerDefense.Towers.Placement
  commentId: N:TowerDefense.Towers.Placement
  language: CSharp
  name:
    CSharp: TowerDefense.Towers.Placement
    VB: TowerDefense.Towers.Placement
  nameWithType:
    CSharp: TowerDefense.Towers.Placement
    VB: TowerDefense.Towers.Placement
  qualifiedName:
    CSharp: TowerDefense.Towers.Placement
    VB: TowerDefense.Towers.Placement
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Towers.Placement.IPlacementArea
    commentId: T:TowerDefense.Towers.Placement.IPlacementArea
    language: CSharp
    name:
      CSharp: IPlacementArea
      VB: IPlacementArea
    nameWithType:
      CSharp: IPlacementArea
      VB: IPlacementArea
    qualifiedName:
      CSharp: TowerDefense.Towers.Placement.IPlacementArea
      VB: TowerDefense.Towers.Placement.IPlacementArea
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Placement
    source:
      id: IPlacementArea
      path: ''
      startLine: 6116
    summary: "\nAn interface for a placement area that can contain a tower\n"
    example: []
    syntax:
      content:
        CSharp: public interface IPlacementArea
        VB: Public Interface IPlacementArea
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: TowerDefense.Towers.Placement.IPlacementArea.transform
      commentId: P:TowerDefense.Towers.Placement.IPlacementArea.transform
      language: CSharp
      name:
        CSharp: transform
        VB: transform
      nameWithType:
        CSharp: IPlacementArea.transform
        VB: IPlacementArea.transform
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.IPlacementArea.transform
        VB: TowerDefense.Towers.Placement.IPlacementArea.transform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: transform
        path: ''
        startLine: 6121
      summary: "\nGets this object&apos;s transform\n"
      example: []
      syntax:
        content:
          CSharp: Transform transform { get; }
          VB: ReadOnly Property transform As Transform
        parameters: []
        return:
          type: Transform
      overload: TowerDefense.Towers.Placement.IPlacementArea.transform*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
      language: CSharp
      name:
        CSharp: WorldToGrid(Vector3, IntVector2)
        VB: WorldToGrid(Vector3, IntVector2)
      nameWithType:
        CSharp: IPlacementArea.WorldToGrid(Vector3, IntVector2)
        VB: IPlacementArea.WorldToGrid(Vector3, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3, IntVector2)
        VB: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: WorldToGrid
        path: ''
        startLine: 6126
      summary: "\nCalculates the grid position from a given world position, offset to center for a specific size object\n"
      example: []
      syntax:
        content:
          CSharp: IntVector2 WorldToGrid(Vector3 worldPosition, IntVector2 sizeOffset)
          VB: Function WorldToGrid(worldPosition As Vector3, sizeOffset As IntVector2) As IntVector2
        parameters:
        - id: worldPosition
          type: Vector3
        - id: sizeOffset
          type: IntVector2
        return:
          type: IntVector2
      overload: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid*
      modifiers:
        CSharp: []
        VB: []
    - id: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: GridToWorld(IntVector2, IntVector2)
        VB: GridToWorld(IntVector2, IntVector2)
      nameWithType:
        CSharp: IPlacementArea.GridToWorld(IntVector2, IntVector2)
        VB: IPlacementArea.GridToWorld(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: GridToWorld
        path: ''
        startLine: 6131
      summary: "\nCalculates the snapped world position from a given grid position\n"
      example: []
      syntax:
        content:
          CSharp: Vector3 GridToWorld(IntVector2 gridPosition, IntVector2 sizeOffset)
          VB: Function GridToWorld(gridPosition As IntVector2, sizeOffset As IntVector2) As Vector3
        parameters:
        - id: gridPosition
          type: IntVector2
        - id: sizeOffset
          type: IntVector2
        return:
          type: Vector3
      overload: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld*
      modifiers:
        CSharp: []
        VB: []
    - id: TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Fits(IntVector2, IntVector2)
        VB: Fits(IntVector2, IntVector2)
      nameWithType:
        CSharp: IPlacementArea.Fits(IntVector2, IntVector2)
        VB: IPlacementArea.Fits(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Fits
        path: ''
        startLine: 6139
      summary: "\nGets whether an object of a given size would fit on this grid at the given location\n"
      example: []
      syntax:
        content:
          CSharp: TowerFitStatus Fits(IntVector2 gridPos, IntVector2 size)
          VB: Function Fits(gridPos As IntVector2, size As IntVector2) As TowerFitStatus
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
        return:
          type: TowerDefense.Towers.Placement.TowerFitStatus
          description: True if the item would fit at <code data-dev-comment-type="paramref" class="paramref">gridPos</code>
      overload: TowerDefense.Towers.Placement.IPlacementArea.Fits*
      modifiers:
        CSharp: []
        VB: []
    - id: TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Occupy(IntVector2, IntVector2)
        VB: Occupy(IntVector2, IntVector2)
      nameWithType:
        CSharp: IPlacementArea.Occupy(IntVector2, IntVector2)
        VB: IPlacementArea.Occupy(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Occupy
        path: ''
        startLine: 6146
      summary: "\nOccupy the given space on this placement area\n"
      example: []
      syntax:
        content:
          CSharp: void Occupy(IntVector2 gridPos, IntVector2 size)
          VB: Sub Occupy(gridPos As IntVector2, size As IntVector2)
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
      overload: TowerDefense.Towers.Placement.IPlacementArea.Occupy*
      modifiers:
        CSharp: []
        VB: []
    - id: TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Clear(IntVector2, IntVector2)
        VB: Clear(IntVector2, IntVector2)
      nameWithType:
        CSharp: IPlacementArea.Clear(IntVector2, IntVector2)
        VB: IPlacementArea.Clear(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Clear
        path: ''
        startLine: 6153
      summary: "\nClear the given space on this placement area\n"
      example: []
      syntax:
        content:
          CSharp: void Clear(IntVector2 gridPos, IntVector2 size)
          VB: Sub Clear(gridPos As IntVector2, size As IntVector2)
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
      overload: TowerDefense.Towers.Placement.IPlacementArea.Clear*
      modifiers:
        CSharp: []
        VB: []
  - id: TowerDefense.Towers.Placement.PlacementAreaExtensions
    commentId: T:TowerDefense.Towers.Placement.PlacementAreaExtensions
    language: CSharp
    name:
      CSharp: PlacementAreaExtensions
      VB: PlacementAreaExtensions
    nameWithType:
      CSharp: PlacementAreaExtensions
      VB: PlacementAreaExtensions
    qualifiedName:
      CSharp: TowerDefense.Towers.Placement.PlacementAreaExtensions
      VB: TowerDefense.Towers.Placement.PlacementAreaExtensions
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Placement
    source:
      id: PlacementAreaExtensions
      path: ''
      startLine: 6156
    syntax:
      content:
        CSharp: public static class PlacementAreaExtensions
        VB: Public Module PlacementAreaExtensions
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap(TowerDefense.Towers.Placement.IPlacementArea,Vector3,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap(TowerDefense.Towers.Placement.IPlacementArea,Vector3,IntVector2)
      language: CSharp
      name:
        CSharp: Snap(IPlacementArea, Vector3, IntVector2)
        VB: Snap(IPlacementArea, Vector3, IntVector2)
      nameWithType:
        CSharp: PlacementAreaExtensions.Snap(IPlacementArea, Vector3, IntVector2)
        VB: PlacementAreaExtensions.Snap(IPlacementArea, Vector3, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap(TowerDefense.Towers.Placement.IPlacementArea, Vector3, IntVector2)
        VB: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap(TowerDefense.Towers.Placement.IPlacementArea, Vector3, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Snap
        path: ''
        startLine: 6161
      summary: "\nSnaps a given world positionn to this grid\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector3 Snap(this IPlacementArea placementArea, Vector3 worldPosition, IntVector2 sizeOffset)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Snap(placementArea As IPlacementArea, worldPosition As Vector3, sizeOffset As IntVector2) As Vector3
        parameters:
        - id: placementArea
          type: TowerDefense.Towers.Placement.IPlacementArea
        - id: worldPosition
          type: Vector3
        - id: sizeOffset
          type: IntVector2
        return:
          type: Vector3
      overload: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea
    commentId: T:TowerDefense.Towers.Placement.SingleTowerPlacementArea
    language: CSharp
    name:
      CSharp: SingleTowerPlacementArea
      VB: SingleTowerPlacementArea
    nameWithType:
      CSharp: SingleTowerPlacementArea
      VB: SingleTowerPlacementArea
    qualifiedName:
      CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea
      VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Placement
    source:
      id: SingleTowerPlacementArea
      path: ''
      startLine: 6177
    summary: "\nAn area suitable for placing a single tower\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SingleTowerPlacementArea : MonoBehaviour, IPlacementArea'
        VB: >-
          Public Class SingleTowerPlacementArea

              Inherits MonoBehaviour

              Implements IPlacementArea
    inheritance:
    - System.Object
    implements:
    - TowerDefense.Towers.Placement.IPlacementArea
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefab
      commentId: F:TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefab
      language: CSharp
      name:
        CSharp: placementTilePrefab
        VB: placementTilePrefab
      nameWithType:
        CSharp: SingleTowerPlacementArea.placementTilePrefab
        VB: SingleTowerPlacementArea.placementTilePrefab
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefab
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: placementTilePrefab
        path: ''
        startLine: 6183
      summary: "\nVisualisation prefab to instantiate\n"
      example: []
      syntax:
        content:
          CSharp: public PlacementTile placementTilePrefab
          VB: Public placementTilePrefab As PlacementTile
        return:
          type: PlacementTile
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefabMobile
      commentId: F:TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefabMobile
      language: CSharp
      name:
        CSharp: placementTilePrefabMobile
        VB: placementTilePrefabMobile
      nameWithType:
        CSharp: SingleTowerPlacementArea.placementTilePrefabMobile
        VB: SingleTowerPlacementArea.placementTilePrefabMobile
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefabMobile
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.placementTilePrefabMobile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: placementTilePrefabMobile
        path: ''
        startLine: 6188
      summary: "\nVisualisation prefab to instantiate on mobile platforms\n"
      example: []
      syntax:
        content:
          CSharp: public PlacementTile placementTilePrefabMobile
          VB: Public placementTilePrefabMobile As PlacementTile
        return:
          type: PlacementTile
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake
      commentId: M:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: SingleTowerPlacementArea.Awake()
        VB: SingleTowerPlacementArea.Awake()
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake()
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Awake
        path: ''
        startLine: 6203
      summary: "\nSet up visualisation tile\n"
      example: []
      syntax:
        content:
          CSharp: protected void Awake()
          VB: Protected Sub Awake
      overload: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid(Vector3,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid(Vector3,IntVector2)
      language: CSharp
      name:
        CSharp: WorldToGrid(Vector3, IntVector2)
        VB: WorldToGrid(Vector3, IntVector2)
      nameWithType:
        CSharp: SingleTowerPlacementArea.WorldToGrid(Vector3, IntVector2)
        VB: SingleTowerPlacementArea.WorldToGrid(Vector3, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid(Vector3, IntVector2)
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid(Vector3, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: WorldToGrid
        path: ''
        startLine: 6225
      summary: "\nReturns (0, 0), as there is only one available spot\n"
      example: []
      syntax:
        content:
          CSharp: public IntVector2 WorldToGrid(Vector3 worldPosition, IntVector2 sizeOffset)
          VB: Public Function WorldToGrid(worldPosition As Vector3, sizeOffset As IntVector2) As IntVector2
        parameters:
        - id: worldPosition
          type: Vector3
          description: <see cref="!:Vector3"></see> indicating world space coordinates to convert.
        - id: sizeOffset
          type: IntVector2
          description: <see cref="!:IntVector2"></see> indicating size of object to center.
        return:
          type: IntVector2
      overload: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: GridToWorld(IntVector2, IntVector2)
        VB: GridToWorld(IntVector2, IntVector2)
      nameWithType:
        CSharp: SingleTowerPlacementArea.GridToWorld(IntVector2, IntVector2)
        VB: SingleTowerPlacementArea.GridToWorld(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: GridToWorld
        path: ''
        startLine: 6235
      summary: "\nReturns transform.position, as there is only one available spot\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GridToWorld(IntVector2 gridPosition, IntVector2 sizeOffset)
          VB: Public Function GridToWorld(gridPosition As IntVector2, sizeOffset As IntVector2) As Vector3
        parameters:
        - id: gridPosition
          type: IntVector2
          description: The coordinate in grid space
        - id: sizeOffset
          type: IntVector2
          description: <see cref="!:IntVector2"></see> indicating size of object to center.
        return:
          type: Vector3
      overload: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Fits(IntVector2, IntVector2)
        VB: Fits(IntVector2, IntVector2)
      nameWithType:
        CSharp: SingleTowerPlacementArea.Fits(IntVector2, IntVector2)
        VB: SingleTowerPlacementArea.Fits(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Fits
        path: ''
        startLine: 6245
      summary: "\nTests whether the placement area is valid.\n"
      example: []
      syntax:
        content:
          CSharp: public TowerFitStatus Fits(IntVector2 gridPos, IntVector2 size)
          VB: Public Function Fits(gridPos As IntVector2, size As IntVector2) As TowerFitStatus
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
        return:
          type: TowerDefense.Towers.Placement.TowerFitStatus
      overload: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Occupy(IntVector2, IntVector2)
        VB: Occupy(IntVector2, IntVector2)
      nameWithType:
        CSharp: SingleTowerPlacementArea.Occupy(IntVector2, IntVector2)
        VB: SingleTowerPlacementArea.Occupy(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Occupy
        path: ''
        startLine: 6255
      summary: "\nOccupies the area\n"
      example: []
      syntax:
        content:
          CSharp: public void Occupy(IntVector2 gridPos, IntVector2 size)
          VB: Public Sub Occupy(gridPos As IntVector2, size As IntVector2)
        parameters:
        - id: gridPos
          type: IntVector2
          description: ''
        - id: size
          type: IntVector2
          description: ''
      overload: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Clear(IntVector2, IntVector2)
        VB: Clear(IntVector2, IntVector2)
      nameWithType:
        CSharp: SingleTowerPlacementArea.Clear(IntVector2, IntVector2)
        VB: SingleTowerPlacementArea.Clear(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Clear
        path: ''
        startLine: 6270
      summary: "\nClears the area\n"
      example: []
      syntax:
        content:
          CSharp: public void Clear(IntVector2 gridPos, IntVector2 size)
          VB: Public Sub Clear(gridPos As IntVector2, size As IntVector2)
        parameters:
        - id: gridPos
          type: IntVector2
          description: ''
        - id: size
          type: IntVector2
          description: ''
      overload: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Towers.Placement.TowerFitStatus
    commentId: T:TowerDefense.Towers.Placement.TowerFitStatus
    language: CSharp
    name:
      CSharp: TowerFitStatus
      VB: TowerFitStatus
    nameWithType:
      CSharp: TowerFitStatus
      VB: TowerFitStatus
    qualifiedName:
      CSharp: TowerDefense.Towers.Placement.TowerFitStatus
      VB: TowerDefense.Towers.Placement.TowerFitStatus
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Placement
    source:
      id: TowerFitStatus
      path: ''
      startLine: 6308
    summary: "\nEnum representing the state of how a tower fits into a placement area\n"
    example: []
    syntax:
      content:
        CSharp: public enum TowerFitStatus
        VB: Public Enum TowerFitStatus
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.Towers.Placement.TowerFitStatus.Fits
      commentId: F:TowerDefense.Towers.Placement.TowerFitStatus.Fits
      language: CSharp
      name:
        CSharp: Fits
        VB: Fits
      nameWithType:
        CSharp: TowerFitStatus.Fits
        VB: TowerFitStatus.Fits
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerFitStatus.Fits
        VB: TowerDefense.Towers.Placement.TowerFitStatus.Fits
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Fits
        path: ''
        startLine: 6313
      summary: "\nTower fits in this location\n"
      example: []
      syntax:
        content:
          CSharp: Fits = 0
          VB: Fits = 0
        return:
          type: TowerDefense.Towers.Placement.TowerFitStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Towers.Placement.TowerFitStatus.Overlaps
      commentId: F:TowerDefense.Towers.Placement.TowerFitStatus.Overlaps
      language: CSharp
      name:
        CSharp: Overlaps
        VB: Overlaps
      nameWithType:
        CSharp: TowerFitStatus.Overlaps
        VB: TowerFitStatus.Overlaps
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerFitStatus.Overlaps
        VB: TowerDefense.Towers.Placement.TowerFitStatus.Overlaps
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Overlaps
        path: ''
        startLine: 6318
      summary: "\nTower overlaps another tower in the placement area\n"
      example: []
      syntax:
        content:
          CSharp: Overlaps = 1
          VB: Overlaps = 1
        return:
          type: TowerDefense.Towers.Placement.TowerFitStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.Towers.Placement.TowerFitStatus.OutOfBounds
      commentId: F:TowerDefense.Towers.Placement.TowerFitStatus.OutOfBounds
      language: CSharp
      name:
        CSharp: OutOfBounds
        VB: OutOfBounds
      nameWithType:
        CSharp: TowerFitStatus.OutOfBounds
        VB: TowerFitStatus.OutOfBounds
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerFitStatus.OutOfBounds
        VB: TowerDefense.Towers.Placement.TowerFitStatus.OutOfBounds
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: OutOfBounds
        path: ''
        startLine: 6323
      summary: "\nTower exceeds bounds of the placement area\n"
      example: []
      syntax:
        content:
          CSharp: OutOfBounds = 2
          VB: OutOfBounds = 2
        return:
          type: TowerDefense.Towers.Placement.TowerFitStatus
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.Towers.Placement.TowerPlacementGrid
    commentId: T:TowerDefense.Towers.Placement.TowerPlacementGrid
    language: CSharp
    name:
      CSharp: TowerPlacementGrid
      VB: TowerPlacementGrid
    nameWithType:
      CSharp: TowerPlacementGrid
      VB: TowerPlacementGrid
    qualifiedName:
      CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid
      VB: TowerDefense.Towers.Placement.TowerPlacementGrid
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Placement
    source:
      id: TowerPlacementGrid
      path: ''
      startLine: 6337
    summary: "\nA tower placement location made from a grid.\nIts origin is centered in the middle of the lower-right cell. It can be oriented in any direction\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerPlacementGrid : MonoBehaviour, IPlacementArea'
        VB: >-
          Public Class TowerPlacementGrid

              Inherits MonoBehaviour

              Implements IPlacementArea
    inheritance:
    - System.Object
    implements:
    - TowerDefense.Towers.Placement.IPlacementArea
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefab
      commentId: F:TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefab
      language: CSharp
      name:
        CSharp: placementTilePrefab
        VB: placementTilePrefab
      nameWithType:
        CSharp: TowerPlacementGrid.placementTilePrefab
        VB: TowerPlacementGrid.placementTilePrefab
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefab
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: placementTilePrefab
        path: ''
        startLine: 6343
      summary: "\nPrefab used to visualise the grid\n"
      example: []
      syntax:
        content:
          CSharp: public PlacementTile placementTilePrefab
          VB: Public placementTilePrefab As PlacementTile
        return:
          type: PlacementTile
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefabMobile
      commentId: F:TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefabMobile
      language: CSharp
      name:
        CSharp: placementTilePrefabMobile
        VB: placementTilePrefabMobile
      nameWithType:
        CSharp: TowerPlacementGrid.placementTilePrefabMobile
        VB: TowerPlacementGrid.placementTilePrefabMobile
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefabMobile
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.placementTilePrefabMobile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: placementTilePrefabMobile
        path: ''
        startLine: 6348
      summary: "\nVisualisation prefab to instantiate on mobile platforms\n"
      example: []
      syntax:
        content:
          CSharp: public PlacementTile placementTilePrefabMobile
          VB: Public placementTilePrefabMobile As PlacementTile
        return:
          type: PlacementTile
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.dimensions
      commentId: F:TowerDefense.Towers.Placement.TowerPlacementGrid.dimensions
      language: CSharp
      name:
        CSharp: dimensions
        VB: dimensions
      nameWithType:
        CSharp: TowerPlacementGrid.dimensions
        VB: TowerPlacementGrid.dimensions
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.dimensions
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.dimensions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: dimensions
        path: ''
        startLine: 6353
      summary: "\nThe dimensions of the grid \n"
      example: []
      syntax:
        content:
          CSharp: public IntVector2 dimensions
          VB: Public dimensions As IntVector2
        return:
          type: IntVector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.gridSize
      commentId: F:TowerDefense.Towers.Placement.TowerPlacementGrid.gridSize
      language: CSharp
      name:
        CSharp: gridSize
        VB: gridSize
      nameWithType:
        CSharp: TowerPlacementGrid.gridSize
        VB: TowerPlacementGrid.gridSize
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.gridSize
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.gridSize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: gridSize
        path: ''
        startLine: 6359
      summary: "\nSize of the edge of a cell\n"
      example: []
      syntax:
        content:
          CSharp: public float gridSize
          VB: Public gridSize As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid(Vector3,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid(Vector3,IntVector2)
      language: CSharp
      name:
        CSharp: WorldToGrid(Vector3, IntVector2)
        VB: WorldToGrid(Vector3, IntVector2)
      nameWithType:
        CSharp: TowerPlacementGrid.WorldToGrid(Vector3, IntVector2)
        VB: TowerPlacementGrid.WorldToGrid(Vector3, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid(Vector3, IntVector2)
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid(Vector3, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: WorldToGrid
        path: ''
        startLine: 6382
      summary: "\nConverts a location in world space into local grid coordinates.\n"
      example: []
      syntax:
        content:
          CSharp: public IntVector2 WorldToGrid(Vector3 worldLocation, IntVector2 sizeOffset)
          VB: Public Function WorldToGrid(worldLocation As Vector3, sizeOffset As IntVector2) As IntVector2
        parameters:
        - id: worldLocation
          type: Vector3
          description: <see cref="!:Vector3"></see> indicating world space coordinates to convert.
        - id: sizeOffset
          type: IntVector2
          description: <see cref="!:IntVector2"></see> indicating size of object to center.
        return:
          type: IntVector2
          description: <see cref="!:IntVector2"></see> containing the grid coordinates corresponding to this location.
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: GridToWorld(IntVector2, IntVector2)
        VB: GridToWorld(IntVector2, IntVector2)
      nameWithType:
        CSharp: TowerPlacementGrid.GridToWorld(IntVector2, IntVector2)
        VB: TowerPlacementGrid.GridToWorld(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: GridToWorld
        path: ''
        startLine: 6405
      summary: "\nReturns the world coordinates corresponding to a grid location.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GridToWorld(IntVector2 gridPosition, IntVector2 sizeOffset)
          VB: Public Function GridToWorld(gridPosition As IntVector2, sizeOffset As IntVector2) As Vector3
        parameters:
        - id: gridPosition
          type: IntVector2
          description: The coordinate in grid space
        - id: sizeOffset
          type: IntVector2
          description: <see cref="!:IntVector2"></see> indicating size of object to center.
        return:
          type: Vector3
          description: Vector3 containing world coordinates for specified grid cell.
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.Fits(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Fits(IntVector2, IntVector2)
        VB: Fits(IntVector2, IntVector2)
      nameWithType:
        CSharp: TowerPlacementGrid.Fits(IntVector2, IntVector2)
        VB: TowerPlacementGrid.Fits(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Fits
        path: ''
        startLine: 6420
      summary: "\nTests whether the indicated cell range represents a valid placement location.\n"
      example: []
      syntax:
        content:
          CSharp: public TowerFitStatus Fits(IntVector2 gridPos, IntVector2 size)
          VB: Public Function Fits(gridPos As IntVector2, size As IntVector2) As TowerFitStatus
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
        return:
          type: TowerDefense.Towers.Placement.TowerFitStatus
          description: Whether the indicated range is valid for placement.
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Occupy(IntVector2, IntVector2)
        VB: Occupy(IntVector2, IntVector2)
      nameWithType:
        CSharp: TowerPlacementGrid.Occupy(IntVector2, IntVector2)
        VB: TowerPlacementGrid.Occupy(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Occupy
        path: ''
        startLine: 6458
      summary: "\nSets a cell range as being occupied by a tower.\n"
      example: []
      syntax:
        content:
          CSharp: public void Occupy(IntVector2 gridPos, IntVector2 size)
          VB: Public Sub Occupy(gridPos As IntVector2, size As IntVector2)
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear(IntVector2,IntVector2)
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.Clear(IntVector2,IntVector2)
      language: CSharp
      name:
        CSharp: Clear(IntVector2, IntVector2)
        VB: Clear(IntVector2, IntVector2)
      nameWithType:
        CSharp: TowerPlacementGrid.Clear(IntVector2, IntVector2)
        VB: TowerPlacementGrid.Clear(IntVector2, IntVector2)
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear(IntVector2, IntVector2)
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear(IntVector2, IntVector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Clear
        path: ''
        startLine: 6496
      summary: "\nRemoves a tower from a grid, setting its cells as unoccupied.\n"
      example: []
      syntax:
        content:
          CSharp: public void Clear(IntVector2 gridPos, IntVector2 size)
          VB: Public Sub Clear(gridPos As IntVector2, size As IntVector2)
        parameters:
        - id: gridPos
          type: IntVector2
          description: The grid location
        - id: size
          type: IntVector2
          description: The size of the item
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear*
      implements:
      - TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: TowerPlacementGrid.Awake()
        VB: TowerPlacementGrid.Awake()
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake()
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: Awake
        path: ''
        startLine: 6532
      summary: "\nInitialize values\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid
      commentId: M:TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid
      language: CSharp
      name:
        CSharp: SetUpGrid()
        VB: SetUpGrid()
      nameWithType:
        CSharp: TowerPlacementGrid.SetUpGrid()
        VB: TowerPlacementGrid.SetUpGrid()
      qualifiedName:
        CSharp: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid()
        VB: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Placement
      source:
        id: SetUpGrid
        path: ''
        startLine: 6561
      summary: "\nInstantiates Tile Objects to visualise the grid and sets up the <xref href=\"TowerDefense.Towers.Placement.TowerPlacementGrid.m_AvailableCells\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected void SetUpGrid()
          VB: Protected Sub SetUpGrid
      overload: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.Towers.Placement.TowerPlacementGrid.m_AvailableCells: 
- id: TowerDefense.Towers.Projectiles
  commentId: N:TowerDefense.Towers.Projectiles
  language: CSharp
  name:
    CSharp: TowerDefense.Towers.Projectiles
    VB: TowerDefense.Towers.Projectiles
  nameWithType:
    CSharp: TowerDefense.Towers.Projectiles
    VB: TowerDefense.Towers.Projectiles
  qualifiedName:
    CSharp: TowerDefense.Towers.Projectiles
    VB: TowerDefense.Towers.Projectiles
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Towers.Projectiles.ContactDestroyer
    commentId: T:TowerDefense.Towers.Projectiles.ContactDestroyer
    language: CSharp
    name:
      CSharp: ContactDestroyer
      VB: ContactDestroyer
    nameWithType:
      CSharp: ContactDestroyer
      VB: ContactDestroyer
    qualifiedName:
      CSharp: TowerDefense.Towers.Projectiles.ContactDestroyer
      VB: TowerDefense.Towers.Projectiles.ContactDestroyer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Projectiles
    source:
      id: ContactDestroyer
      path: ''
      startLine: 6667
    summary: "\nFor objects that destroyer themselves on contact\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ContactDestroyer : MonoBehaviour'
        VB: >-
          Public Class ContactDestroyer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint
      commentId: F:TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint
      language: CSharp
      name:
        CSharp: yDestroyPoint
        VB: yDestroyPoint
      nameWithType:
        CSharp: ContactDestroyer.yDestroyPoint
        VB: ContactDestroyer.yDestroyPoint
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint
        VB: TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: yDestroyPoint
        path: ''
        startLine: 6672
      summary: "\nThe y-value of the position the object will destroy itself\n"
      example: []
      syntax:
        content:
          CSharp: public float yDestroyPoint
          VB: Public yDestroyPoint As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.ContactDestroyer.m_AttachedCollider
      commentId: F:TowerDefense.Towers.Projectiles.ContactDestroyer.m_AttachedCollider
      language: CSharp
      name:
        CSharp: m_AttachedCollider
        VB: m_AttachedCollider
      nameWithType:
        CSharp: ContactDestroyer.m_AttachedCollider
        VB: ContactDestroyer.m_AttachedCollider
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.ContactDestroyer.m_AttachedCollider
        VB: TowerDefense.Towers.Projectiles.ContactDestroyer.m_AttachedCollider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: m_AttachedCollider
        path: ''
        startLine: 6677
      summary: "\nThe attached collider\n"
      example: []
      syntax:
        content:
          CSharp: protected Collider m_AttachedCollider
          VB: Protected m_AttachedCollider As Collider
        return:
          type: Collider
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake
      commentId: M:TowerDefense.Towers.Projectiles.ContactDestroyer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: ContactDestroyer.Awake()
        VB: ContactDestroyer.Awake()
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake()
        VB: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: Awake
        path: ''
        startLine: 6682
      summary: "\nCaches the attached collider\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.Projectiles.ContactDestroyer.Update
      commentId: M:TowerDefense.Towers.Projectiles.ContactDestroyer.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: ContactDestroyer.Update()
        VB: ContactDestroyer.Update()
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.ContactDestroyer.Update()
        VB: TowerDefense.Towers.Projectiles.ContactDestroyer.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: Update
        path: ''
        startLine: 6690
      summary: "\nChecks the y-position against <xref href=\"TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Towers.Projectiles.ContactDestroyer.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint: 
  - id: TowerDefense.Towers.Projectiles.HitscanAttack
    commentId: T:TowerDefense.Towers.Projectiles.HitscanAttack
    language: CSharp
    name:
      CSharp: HitscanAttack
      VB: HitscanAttack
    nameWithType:
      CSharp: HitscanAttack
      VB: HitscanAttack
    qualifiedName:
      CSharp: TowerDefense.Towers.Projectiles.HitscanAttack
      VB: TowerDefense.Towers.Projectiles.HitscanAttack
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Projectiles
    source:
      id: HitscanAttack
      path: ''
      startLine: 6726
    summary: "\nImplementation of hitscan projectile\nThe principle behind this weapon is that it instantly attacks enemies\n"
    example: []
    syntax:
      content:
        CSharp: 'public class HitscanAttack : MonoBehaviour'
        VB: >-
          Public Class HitscanAttack

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.delay
      commentId: F:TowerDefense.Towers.Projectiles.HitscanAttack.delay
      language: CSharp
      name:
        CSharp: delay
        VB: delay
      nameWithType:
        CSharp: HitscanAttack.delay
        VB: HitscanAttack.delay
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.delay
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.delay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: delay
        path: ''
        startLine: 6732
      summary: "\nThe amount of time to delay\n"
      example: []
      syntax:
        content:
          CSharp: public float delay
          VB: Public delay As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.m_Timer
      commentId: F:TowerDefense.Towers.Projectiles.HitscanAttack.m_Timer
      language: CSharp
      name:
        CSharp: m_Timer
        VB: m_Timer
      nameWithType:
        CSharp: HitscanAttack.m_Timer
        VB: HitscanAttack.m_Timer
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.m_Timer
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.m_Timer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: m_Timer
        path: ''
        startLine: 6737
      summary: "\nThe delay timer\n"
      example: []
      syntax:
        content:
          CSharp: protected Timer m_Timer
          VB: Protected m_Timer As Timer
        return:
          type: Timer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.m_Enemy
      commentId: F:TowerDefense.Towers.Projectiles.HitscanAttack.m_Enemy
      language: CSharp
      name:
        CSharp: m_Enemy
        VB: m_Enemy
      nameWithType:
        CSharp: HitscanAttack.m_Enemy
        VB: HitscanAttack.m_Enemy
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.m_Enemy
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.m_Enemy
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: m_Enemy
        path: ''
        startLine: 6742
      summary: "\nThe enemy this projectile will attack\n"
      example: []
      syntax:
        content:
          CSharp: protected Targetable m_Enemy
          VB: Protected m_Enemy As Targetable
        return:
          type: Targetable
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.m_Damager
      commentId: F:TowerDefense.Towers.Projectiles.HitscanAttack.m_Damager
      language: CSharp
      name:
        CSharp: m_Damager
        VB: m_Damager
      nameWithType:
        CSharp: HitscanAttack.m_Damager
        VB: HitscanAttack.m_Damager
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.m_Damager
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.m_Damager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: m_Damager
        path: ''
        startLine: 6747
      summary: "\nThe Damager attached to the object\n"
      example: []
      syntax:
        content:
          CSharp: protected Damager m_Damager
          VB: Protected m_Damager As Damager
        return:
          type: Damager
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.m_Origin
      commentId: F:TowerDefense.Towers.Projectiles.HitscanAttack.m_Origin
      language: CSharp
      name:
        CSharp: m_Origin
        VB: m_Origin
      nameWithType:
        CSharp: HitscanAttack.m_Origin
        VB: HitscanAttack.m_Origin
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.m_Origin
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.m_Origin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: m_Origin
        path: ''
        startLine: 6752
      summary: "\nThe towers projectile position\n"
      example: []
      syntax:
        content:
          CSharp: protected Vector3 m_Origin
          VB: Protected m_Origin As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.m_PauseTimer
      commentId: F:TowerDefense.Towers.Projectiles.HitscanAttack.m_PauseTimer
      language: CSharp
      name:
        CSharp: m_PauseTimer
        VB: m_PauseTimer
      nameWithType:
        CSharp: HitscanAttack.m_PauseTimer
        VB: HitscanAttack.m_PauseTimer
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.m_PauseTimer
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.m_PauseTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: m_PauseTimer
        path: ''
        startLine: 6758
      summary: "\nConfiguration for pausing the timer delay timer\nwithout setting Time.timeScale to 0\n"
      example: []
      syntax:
        content:
          CSharp: protected bool m_PauseTimer
          VB: Protected m_PauseTimer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy(Vector3,Targetable)
      commentId: M:TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy(Vector3,Targetable)
      language: CSharp
      name:
        CSharp: AttackEnemy(Vector3, Targetable)
        VB: AttackEnemy(Vector3, Targetable)
      nameWithType:
        CSharp: HitscanAttack.AttackEnemy(Vector3, Targetable)
        VB: HitscanAttack.AttackEnemy(Vector3, Targetable)
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy(Vector3, Targetable)
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy(Vector3, Targetable)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: AttackEnemy
        path: ''
        startLine: 6769
      summary: "\nThe delay configuration for the attacking\n"
      example: []
      syntax:
        content:
          CSharp: public void AttackEnemy(Vector3 origin, Targetable enemy)
          VB: Public Sub AttackEnemy(origin As Vector3, enemy As Targetable)
        parameters:
        - id: origin
          type: Vector3
          description: "\nThe point the attack will be fired from\n"
        - id: enemy
          type: Targetable
          description: "\nThe enemy to attack\n"
      overload: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage
      commentId: M:TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage
      language: CSharp
      name:
        CSharp: DealDamage()
        VB: DealDamage()
      nameWithType:
        CSharp: HitscanAttack.DealDamage()
        VB: HitscanAttack.DealDamage()
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage()
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: DealDamage
        path: ''
        startLine: 6781
      summary: "\nThe actual attack of the hitscan attack.\nEarly returns from the method if the there is no enemy to attack.\n"
      example: []
      syntax:
        content:
          CSharp: protected void DealDamage()
          VB: Protected Sub DealDamage
      overload: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.Awake
      commentId: M:TowerDefense.Towers.Projectiles.HitscanAttack.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: HitscanAttack.Awake()
        VB: HitscanAttack.Awake()
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.Awake()
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: Awake
        path: ''
        startLine: 6803
      summary: "\nCache the damager component attached to this object\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.Towers.Projectiles.HitscanAttack.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.Projectiles.HitscanAttack.Update
      commentId: M:TowerDefense.Towers.Projectiles.HitscanAttack.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: HitscanAttack.Update()
        VB: HitscanAttack.Update()
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.HitscanAttack.Update()
        VB: TowerDefense.Towers.Projectiles.HitscanAttack.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: Update
        path: ''
        startLine: 6812
      summary: "\nUpdate the m_Timer if it is available\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.Towers.Projectiles.HitscanAttack.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.Towers.Projectiles.SplashDamager
    commentId: T:TowerDefense.Towers.Projectiles.SplashDamager
    language: CSharp
    name:
      CSharp: SplashDamager
      VB: SplashDamager
    nameWithType:
      CSharp: SplashDamager
      VB: SplashDamager
    qualifiedName:
      CSharp: TowerDefense.Towers.Projectiles.SplashDamager
      VB: TowerDefense.Towers.Projectiles.SplashDamager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.Projectiles
    source:
      id: SplashDamager
      path: ''
      startLine: 6830
    summary: "\nComponent that will apply splash damage on collision enter\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SplashDamager : MonoBehaviour'
        VB: >-
          Public Class SplashDamager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.Projectiles.SplashDamager.attackRange
      commentId: F:TowerDefense.Towers.Projectiles.SplashDamager.attackRange
      language: CSharp
      name:
        CSharp: attackRange
        VB: attackRange
      nameWithType:
        CSharp: SplashDamager.attackRange
        VB: SplashDamager.attackRange
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.attackRange
        VB: TowerDefense.Towers.Projectiles.SplashDamager.attackRange
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: attackRange
        path: ''
        startLine: 6835
      summary: "\nThe Area this projectile will attack in\n"
      example: []
      syntax:
        content:
          CSharp: public float attackRange
          VB: Public attackRange As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.SplashDamager.damageAmount
      commentId: F:TowerDefense.Towers.Projectiles.SplashDamager.damageAmount
      language: CSharp
      name:
        CSharp: damageAmount
        VB: damageAmount
      nameWithType:
        CSharp: SplashDamager.damageAmount
        VB: SplashDamager.damageAmount
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.damageAmount
        VB: TowerDefense.Towers.Projectiles.SplashDamager.damageAmount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: damageAmount
        path: ''
        startLine: 6840
      summary: "\nThe amount of damage done, a percentage of the damager damage\n"
      example: []
      syntax:
        content:
          CSharp: public float damageAmount
          VB: Public damageAmount As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.SplashDamager.mask
      commentId: F:TowerDefense.Towers.Projectiles.SplashDamager.mask
      language: CSharp
      name:
        CSharp: mask
        VB: mask
      nameWithType:
        CSharp: SplashDamager.mask
        VB: SplashDamager.mask
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.mask
        VB: TowerDefense.Towers.Projectiles.SplashDamager.mask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: mask
        path: ''
        startLine: 6845
      summary: "\nThe physics layer mask to search on\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask mask
          VB: Public mask As LayerMask
        return:
          type: LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.SplashDamager.alignment
      commentId: F:TowerDefense.Towers.Projectiles.SplashDamager.alignment
      language: CSharp
      name:
        CSharp: alignment
        VB: alignment
      nameWithType:
        CSharp: SplashDamager.alignment
        VB: SplashDamager.alignment
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.alignment
        VB: TowerDefense.Towers.Projectiles.SplashDamager.alignment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: alignment
        path: ''
        startLine: 6850
      summary: "\nThe alignment of the projectile\n"
      example: []
      syntax:
        content:
          CSharp: public SerializableIAlignmentProvider alignment
          VB: Public alignment As SerializableIAlignmentProvider
        return:
          type: SerializableIAlignmentProvider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.Projectiles.SplashDamager.damage
      commentId: P:TowerDefense.Towers.Projectiles.SplashDamager.damage
      language: CSharp
      name:
        CSharp: damage
        VB: damage
      nameWithType:
        CSharp: SplashDamager.damage
        VB: SplashDamager.damage
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.damage
        VB: TowerDefense.Towers.Projectiles.SplashDamager.damage
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: damage
        path: ''
        startLine: 6854
      syntax:
        content:
          CSharp: public float damage { get; }
          VB: Public ReadOnly Property damage As Single
        parameters: []
        return:
          type: System.Single
      overload: TowerDefense.Towers.Projectiles.SplashDamager.damage*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
      commentId: P:TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
      language: CSharp
      name:
        CSharp: alignmentProvider
        VB: alignmentProvider
      nameWithType:
        CSharp: SplashDamager.alignmentProvider
        VB: SplashDamager.alignmentProvider
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
        VB: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: alignmentProvider
        path: ''
        startLine: 6862
      summary: "\nGets this damager&apos;s alignment\n"
      example: []
      syntax:
        content:
          CSharp: public IAlignmentProvider alignmentProvider { get; }
          VB: Public ReadOnly Property alignmentProvider As IAlignmentProvider
        parameters: []
        return:
          type: IAlignmentProvider
      overload: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter(Collision)
      commentId: M:TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter(Collision)
      language: CSharp
      name:
        CSharp: OnCollisionEnter(Collision)
        VB: OnCollisionEnter(Collision)
      nameWithType:
        CSharp: SplashDamager.OnCollisionEnter(Collision)
        VB: SplashDamager.OnCollisionEnter(Collision)
      qualifiedName:
        CSharp: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter(Collision)
        VB: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter(Collision)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.Projectiles
      source:
        id: OnCollisionEnter
        path: ''
        startLine: 6871
      summary: "\nSearches for Targetables within a radius of <xref href=\"TowerDefense.Towers.Projectiles.SplashDamager.attackRange\" data-throw-if-not-resolved=\"false\"></xref>\nand damages them if valid\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnCollisionEnter(Collision other)
          VB: Protected Overridable Sub OnCollisionEnter(other As Collision)
        parameters:
        - id: other
          type: Collision
      overload: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
      references:
        TowerDefense.Towers.Projectiles.SplashDamager.attackRange: 
- id: TowerDefense.Towers.TowerLaunchers
  commentId: N:TowerDefense.Towers.TowerLaunchers
  language: CSharp
  name:
    CSharp: TowerDefense.Towers.TowerLaunchers
    VB: TowerDefense.Towers.TowerLaunchers
  nameWithType:
    CSharp: TowerDefense.Towers.TowerLaunchers
    VB: TowerDefense.Towers.TowerLaunchers
  qualifiedName:
    CSharp: TowerDefense.Towers.TowerLaunchers
    VB: TowerDefense.Towers.TowerLaunchers
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
    commentId: T:TowerDefense.Towers.TowerLaunchers.BallisticLauncher
    language: CSharp
    name:
      CSharp: BallisticLauncher
      VB: BallisticLauncher
    nameWithType:
      CSharp: BallisticLauncher
      VB: BallisticLauncher
    qualifiedName:
      CSharp: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
      VB: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.TowerLaunchers
    source:
      id: BallisticLauncher
      path: ''
      startLine: 6898
    summary: "\nImplementation of the tower launcher for Ballistic Projectiles\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BallisticLauncher : Launcher, ILauncher'
        VB: >-
          Public Class BallisticLauncher

              Inherits Launcher

              Implements ILauncher
    inheritance:
    - System.Object
    - TowerDefense.Towers.TowerLaunchers.Launcher
    implements:
    - TowerDefense.Towers.ILauncher
    inheritedMembers:
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
    - TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.fireParticleSystem
      commentId: F:TowerDefense.Towers.TowerLaunchers.BallisticLauncher.fireParticleSystem
      language: CSharp
      name:
        CSharp: fireParticleSystem
        VB: fireParticleSystem
      nameWithType:
        CSharp: BallisticLauncher.fireParticleSystem
        VB: BallisticLauncher.fireParticleSystem
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.fireParticleSystem
        VB: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.fireParticleSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: fireParticleSystem
        path: ''
        startLine: 6903
      summary: "\nThe particle system used for providing launch feedback\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem fireParticleSystem
          VB: Public fireParticleSystem As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch(Targetable,GameObject,Transform)
      commentId: M:TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch(Targetable,GameObject,Transform)
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform)
        VB: Launch(Targetable, GameObject, Transform)
      nameWithType:
        CSharp: BallisticLauncher.Launch(Targetable, GameObject, Transform)
        VB: BallisticLauncher.Launch(Targetable, GameObject, Transform)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch(Targetable, GameObject, Transform)
        VB: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch(Targetable, GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 6917
      summary: "\nLaunches a single projectile at a single enemy from a single firing point\n"
      example: []
      syntax:
        content:
          CSharp: public override void Launch(Targetable enemy, GameObject projectile, Transform firingPoint)
          VB: Public Overrides Sub Launch(enemy As Targetable, projectile As GameObject, firingPoint As Transform)
        parameters:
        - id: enemy
          type: Targetable
          description: "\nThe enemy to target\n"
        - id: projectile
          type: GameObject
          description: "\nThe projectile to attack\n"
        - id: firingPoint
          type: Transform
          description: "\nThe point to fire from\n"
      overload: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch*
      overridden: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
    commentId: T:TowerDefense.Towers.TowerLaunchers.HitscanLauncher
    language: CSharp
    name:
      CSharp: HitscanLauncher
      VB: HitscanLauncher
    nameWithType:
      CSharp: HitscanLauncher
      VB: HitscanLauncher
    qualifiedName:
      CSharp: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
      VB: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.TowerLaunchers
    source:
      id: HitscanLauncher
      path: ''
      startLine: 6959
    summary: "\nAn implementation of the tower launcher for hitscan attacks\n"
    example: []
    syntax:
      content:
        CSharp: 'public class HitscanLauncher : Launcher, ILauncher'
        VB: >-
          Public Class HitscanLauncher

              Inherits Launcher

              Implements ILauncher
    inheritance:
    - System.Object
    - TowerDefense.Towers.TowerLaunchers.Launcher
    implements:
    - TowerDefense.Towers.ILauncher
    inheritedMembers:
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
    - TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.fireParticleSystem
      commentId: F:TowerDefense.Towers.TowerLaunchers.HitscanLauncher.fireParticleSystem
      language: CSharp
      name:
        CSharp: fireParticleSystem
        VB: fireParticleSystem
      nameWithType:
        CSharp: HitscanLauncher.fireParticleSystem
        VB: HitscanLauncher.fireParticleSystem
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.fireParticleSystem
        VB: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.fireParticleSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: fireParticleSystem
        path: ''
        startLine: 6964
      summary: "\nThe particle system used for providing launch feedback\n"
      example: []
      syntax:
        content:
          CSharp: public ParticleSystem fireParticleSystem
          VB: Public fireParticleSystem As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch(Targetable,GameObject,Transform)
      commentId: M:TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch(Targetable,GameObject,Transform)
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform)
        VB: Launch(Targetable, GameObject, Transform)
      nameWithType:
        CSharp: HitscanLauncher.Launch(Targetable, GameObject, Transform)
        VB: HitscanLauncher.Launch(Targetable, GameObject, Transform)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch(Targetable, GameObject, Transform)
        VB: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch(Targetable, GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 6979
      summary: "\nAssigns the correct damage to the hitscan object and\nattacks the enemy immediately.\nEarly return if there is not HitscanAttack.cs attached to the attact object\n"
      example: []
      syntax:
        content:
          CSharp: public override void Launch(Targetable enemy, GameObject attack, Transform firingPoint)
          VB: Public Overrides Sub Launch(enemy As Targetable, attack As GameObject, firingPoint As Transform)
        parameters:
        - id: enemy
          type: Targetable
          description: "\nThe enemy this tower is targeting\n"
        - id: attack
          type: GameObject
          description: "\nThe attacking component used to damage the enemy\n"
        - id: firingPoint
          type: Transform
          description: ''
      overload: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch*
      overridden: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher
    commentId: T:TowerDefense.Towers.TowerLaunchers.HomingLauncher
    language: CSharp
    name:
      CSharp: HomingLauncher
      VB: HomingLauncher
    nameWithType:
      CSharp: HomingLauncher
      VB: HomingLauncher
    qualifiedName:
      CSharp: TowerDefense.Towers.TowerLaunchers.HomingLauncher
      VB: TowerDefense.Towers.TowerLaunchers.HomingLauncher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.TowerLaunchers
    source:
      id: HomingLauncher
      path: ''
      startLine: 7002
    summary: "\nAn implementation of ILauncher that firest homing missiles\n"
    example: []
    syntax:
      content:
        CSharp: 'public class HomingLauncher : Launcher, ILauncher'
        VB: >-
          Public Class HomingLauncher

              Inherits Launcher

              Implements ILauncher
    inheritance:
    - System.Object
    - TowerDefense.Towers.TowerLaunchers.Launcher
    implements:
    - TowerDefense.Towers.ILauncher
    inheritedMembers:
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
    - TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
      commentId: F:TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
      language: CSharp
      name:
        CSharp: fireParticleSystem
        VB: fireParticleSystem
      nameWithType:
        CSharp: HomingLauncher.fireParticleSystem
        VB: HomingLauncher.fireParticleSystem
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
        VB: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: fireParticleSystem
        path: ''
        startLine: 7004
      syntax:
        content:
          CSharp: public ParticleSystem fireParticleSystem
          VB: Public fireParticleSystem As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform)
      commentId: M:TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform)
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform)
        VB: Launch(Targetable, GameObject, Transform)
      nameWithType:
        CSharp: HomingLauncher.Launch(Targetable, GameObject, Transform)
        VB: HomingLauncher.Launch(Targetable, GameObject, Transform)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable, GameObject, Transform)
        VB: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable, GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 7018
      summary: "\nLaunches homing missile at a target from a starting position\n"
      example: []
      syntax:
        content:
          CSharp: public override void Launch(Targetable enemy, GameObject attack, Transform firingPoint)
          VB: Public Overrides Sub Launch(enemy As Targetable, attack As GameObject, firingPoint As Transform)
        parameters:
        - id: enemy
          type: Targetable
          description: "\nThe enemy to attack\n"
        - id: attack
          type: GameObject
          description: "\nThe projectile used to attack\n"
        - id: firingPoint
          type: Transform
          description: "\nThe point the projectile is being fired from\n"
      overload: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch*
      overridden: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TowerDefense.Towers.TowerLaunchers.Launcher
    commentId: T:TowerDefense.Towers.TowerLaunchers.Launcher
    language: CSharp
    name:
      CSharp: Launcher
      VB: Launcher
    nameWithType:
      CSharp: Launcher
      VB: Launcher
    qualifiedName:
      CSharp: TowerDefense.Towers.TowerLaunchers.Launcher
      VB: TowerDefense.Towers.TowerLaunchers.Launcher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.TowerLaunchers
    source:
      id: Launcher
      path: ''
      startLine: 7045
    syntax:
      content:
        CSharp: 'public abstract class Launcher : MonoBehaviour, ILauncher'
        VB: >-
          Public MustInherit Class Launcher

              Inherits MonoBehaviour

              Implements ILauncher
    inheritance:
    - System.Object
    implements:
    - TowerDefense.Towers.ILauncher
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
      commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform)
        VB: Launch(Targetable, GameObject, Transform)
      nameWithType:
        CSharp: Launcher.Launch(Targetable, GameObject, Transform)
        VB: Launcher.Launch(Targetable, GameObject, Transform)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable, GameObject, Transform)
        VB: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable, GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 7047
      syntax:
        content:
          CSharp: public abstract void Launch(Targetable enemy, GameObject attack, Transform firingPoint)
          VB: Public MustOverride Sub Launch(enemy As Targetable, attack As GameObject, firingPoint As Transform)
        parameters:
        - id: enemy
          type: Targetable
        - id: attack
          type: GameObject
        - id: firingPoint
          type: Transform
      overload: TowerDefense.Towers.TowerLaunchers.Launcher.Launch*
      implements:
      - TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
      commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
      language: CSharp
      name:
        CSharp: Launch(List<Targetable>, GameObject, Transform[])
        VB: Launch(List(Of Targetable), GameObject, Transform())
      nameWithType:
        CSharp: Launcher.Launch(List<Targetable>, GameObject, Transform[])
        VB: Launcher.Launch(List(Of Targetable), GameObject, Transform())
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List<Targetable>, GameObject, Transform[])
        VB: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List(Of Targetable), GameObject, Transform())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 7059
      summary: "\nGets an instance of the attack object from the Pool and Launches it\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Launch(List<Targetable> enemies, GameObject attack, Transform[] firingPoints)
          VB: Public Overridable Sub Launch(enemies As List(Of Targetable), attack As GameObject, firingPoints As Transform())
        parameters:
        - id: enemies
          type: List{Targetable}
          description: "\nThe list of enemies to sample from\n"
        - id: attack
          type: GameObject
          description: "\nThe object used to attack\n"
        - id: firingPoints
          type: Transform[]
          description: ''
      overload: TowerDefense.Towers.TowerLaunchers.Launcher.Launch*
      implements:
      - TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[])
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
      commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform[])
        VB: Launch(Targetable, GameObject, Transform())
      nameWithType:
        CSharp: Launcher.Launch(Targetable, GameObject, Transform[])
        VB: Launcher.Launch(Targetable, GameObject, Transform())
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable, GameObject, Transform[])
        VB: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable, GameObject, Transform())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 7088
      summary: "\nGets a instance of attack from the Pool and Launches it\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Launch(Targetable enemy, GameObject attack, Transform[] firingPoints)
          VB: Public Overridable Sub Launch(enemy As Targetable, attack As GameObject, firingPoints As Transform())
        parameters:
        - id: enemy
          type: Targetable
          description: "\nThe enemy launcher is attacking\n"
        - id: attack
          type: GameObject
          description: "\nThe object used to attack the enemy\n"
        - id: firingPoints
          type: Transform[]
          description: ''
      overload: TowerDefense.Towers.TowerLaunchers.Launcher.Launch*
      implements:
      - TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[])
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
      commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
      language: CSharp
      name:
        CSharp: PlayParticles(ParticleSystem, Vector3, Vector3)
        VB: PlayParticles(ParticleSystem, Vector3, Vector3)
      nameWithType:
        CSharp: Launcher.PlayParticles(ParticleSystem, Vector3, Vector3)
        VB: Launcher.PlayParticles(ParticleSystem, Vector3, Vector3)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem, Vector3, Vector3)
        VB: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem, Vector3, Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: PlayParticles
        path: ''
        startLine: 7110
      summary: "\nSets up a particle system to provide aiming feedback\n"
      example: []
      syntax:
        content:
          CSharp: public void PlayParticles(ParticleSystem particleSystemToPlay, Vector3 origin, Vector3 lookPosition)
          VB: Public Sub PlayParticles(particleSystemToPlay As ParticleSystem, origin As Vector3, lookPosition As Vector3)
        parameters:
        - id: particleSystemToPlay
          type: ParticleSystem
          description: "\nThe Particle system to fire\n"
        - id: origin
          type: Vector3
          description: "\nThe position of the particle system\n"
        - id: lookPosition
          type: Vector3
          description: "\nThe direction the particle system is looking\n"
      overload: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
      commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
      language: CSharp
      name:
        CSharp: GetRandomTransform(Transform[])
        VB: GetRandomTransform(Transform())
      nameWithType:
        CSharp: Launcher.GetRandomTransform(Transform[])
        VB: Launcher.GetRandomTransform(Transform())
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
        VB: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: GetRandomTransform
        path: ''
        startLine: 7127
      summary: "\nGets a random transform from a list\n"
      example: []
      syntax:
        content:
          CSharp: public Transform GetRandomTransform(Transform[] launchPoints)
          VB: Public Function GetRandomTransform(launchPoints As Transform()) As Transform
        parameters:
        - id: launchPoints
          type: Transform[]
          description: "\nThe list of transforms to use\n"
        return:
          type: Transform
      overload: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
    commentId: T:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
    language: CSharp
    name:
      CSharp: SuperTowerLauncher
      VB: SuperTowerLauncher
    nameWithType:
      CSharp: SuperTowerLauncher
      VB: SuperTowerLauncher
    qualifiedName:
      CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
      VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.Towers.TowerLaunchers
    source:
      id: SuperTowerLauncher
      path: ''
      startLine: 7149
    summary: "\nRapid fire launcher, launchers a homing projectile\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SuperTowerLauncher : HomingLauncher, ILauncher'
        VB: >-
          Public Class SuperTowerLauncher

              Inherits HomingLauncher

              Implements ILauncher
    inheritance:
    - System.Object
    - TowerDefense.Towers.TowerLaunchers.Launcher
    - TowerDefense.Towers.TowerLaunchers.HomingLauncher
    implements:
    - TowerDefense.Towers.ILauncher
    inheritedMembers:
    - TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
    - TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
    - TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
    - TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.towerLifeSpan
      commentId: F:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.towerLifeSpan
      language: CSharp
      name:
        CSharp: towerLifeSpan
        VB: towerLifeSpan
      nameWithType:
        CSharp: SuperTowerLauncher.towerLifeSpan
        VB: SuperTowerLauncher.towerLifeSpan
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.towerLifeSpan
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.towerLifeSpan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: towerLifeSpan
        path: ''
        startLine: 7154
      summary: "\nHow long the tower will stay active\n"
      example: []
      syntax:
        content:
          CSharp: public float towerLifeSpan
          VB: Public towerLifeSpan As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.fireVectorXRotationAdjustment
      commentId: F:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.fireVectorXRotationAdjustment
      language: CSharp
      name:
        CSharp: fireVectorXRotationAdjustment
        VB: fireVectorXRotationAdjustment
      nameWithType:
        CSharp: SuperTowerLauncher.fireVectorXRotationAdjustment
        VB: SuperTowerLauncher.fireVectorXRotationAdjustment
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.fireVectorXRotationAdjustment
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.fireVectorXRotationAdjustment
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: fireVectorXRotationAdjustment
        path: ''
        startLine: 7159
      summary: "\nAngle, in degrees, to rotate, on the x axis, the fire vector by\n"
      example: []
      syntax:
        content:
          CSharp: public float fireVectorXRotationAdjustment
          VB: Public fireVectorXRotationAdjustment As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.death
      commentId: F:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.death
      language: CSharp
      name:
        CSharp: death
        VB: death
      nameWithType:
        CSharp: SuperTowerLauncher.death
        VB: SuperTowerLauncher.death
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.death
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.death
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: death
        path: ''
        startLine: 7164
      summary: "\nFires when the max amount of projectiles has been reached\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent death
          VB: Public death As UnityEvent
        return:
          type: UnityEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.m_LifeTimer
      commentId: F:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.m_LifeTimer
      language: CSharp
      name:
        CSharp: m_LifeTimer
        VB: m_LifeTimer
      nameWithType:
        CSharp: SuperTowerLauncher.m_LifeTimer
        VB: SuperTowerLauncher.m_LifeTimer
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.m_LifeTimer
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.m_LifeTimer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: m_LifeTimer
        path: ''
        startLine: 7169
      summary: "\nTimer to invoke a unity event when it elapses\n"
      example: []
      syntax:
        content:
          CSharp: protected Timer m_LifeTimer
          VB: Protected m_LifeTimer As Timer
        return:
          type: Timer
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(List{Targetable},GameObject,Transform[])
      commentId: M:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(List{Targetable},GameObject,Transform[])
      language: CSharp
      name:
        CSharp: Launch(List<Targetable>, GameObject, Transform[])
        VB: Launch(List(Of Targetable), GameObject, Transform())
      nameWithType:
        CSharp: SuperTowerLauncher.Launch(List<Targetable>, GameObject, Transform[])
        VB: SuperTowerLauncher.Launch(List(Of Targetable), GameObject, Transform())
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(List<Targetable>, GameObject, Transform[])
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(List(Of Targetable), GameObject, Transform())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 7181
      summary: "\nFinds a random enemy in a list and fires from a random point\n"
      example: []
      syntax:
        content:
          CSharp: public override void Launch(List<Targetable> enemies, GameObject attack, Transform[] firingPoints)
          VB: Public Overrides Sub Launch(enemies As List(Of Targetable), attack As GameObject, firingPoints As Transform())
        parameters:
        - id: enemies
          type: List{Targetable}
          description: "\nThe list of enemies to sample from\n"
        - id: attack
          type: GameObject
          description: "\nThe object used to attack\n"
        - id: firingPoints
          type: Transform[]
          description: ''
      overload: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch*
      overridden: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(Targetable,GameObject,Transform)
      commentId: M:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(Targetable,GameObject,Transform)
      language: CSharp
      name:
        CSharp: Launch(Targetable, GameObject, Transform)
        VB: Launch(Targetable, GameObject, Transform)
      nameWithType:
        CSharp: SuperTowerLauncher.Launch(Targetable, GameObject, Transform)
        VB: SuperTowerLauncher.Launch(Targetable, GameObject, Transform)
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(Targetable, GameObject, Transform)
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch(Targetable, GameObject, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Launch
        path: ''
        startLine: 7193
      syntax:
        content:
          CSharp: public override void Launch(Targetable enemy, GameObject attack, Transform firingPoint)
          VB: Public Overrides Sub Launch(enemy As Targetable, attack As GameObject, firingPoint As Transform)
        parameters:
        - id: enemy
          type: Targetable
        - id: attack
          type: GameObject
        - id: firingPoint
          type: Transform
      overload: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch*
      overridden: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable
      commentId: M:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: SuperTowerLauncher.OnEnable()
        VB: SuperTowerLauncher.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable()
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: OnEnable
        path: ''
        startLine: 7226
      summary: "\nSubscribes to Level Manager onStateChanged\nIf waves have already begun, then begin death timer\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable
      commentId: M:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: SuperTowerLauncher.OnDisable()
        VB: SuperTowerLauncher.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable()
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: OnDisable
        path: ''
        startLine: 7246
      summary: "\nUnsubscribe from Level Manager onStateChanged\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update
      commentId: M:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: SuperTowerLauncher.Update()
        VB: SuperTowerLauncher.Update()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update()
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: Update
        path: ''
        startLine: 7257
      summary: "\nTick the timer\n"
      example: []
      syntax:
        content:
          CSharp: protected void Update()
          VB: Protected Sub Update
      overload: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed
      commentId: M:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed
      language: CSharp
      name:
        CSharp: OnLifeTimerElapsed()
        VB: OnLifeTimerElapsed()
      nameWithType:
        CSharp: SuperTowerLauncher.OnLifeTimerElapsed()
        VB: SuperTowerLauncher.OnLifeTimerElapsed()
      qualifiedName:
        CSharp: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed()
        VB: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.Towers.TowerLaunchers
      source:
        id: OnLifeTimerElapsed
        path: ''
        startLine: 7269
      summary: "\nInvoke the UnityEvent once the timer elapses\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnLifeTimerElapsed()
          VB: Protected Sub OnLifeTimerElapsed
      overload: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: TowerDefense.UI
  commentId: N:TowerDefense.UI
  language: CSharp
  name:
    CSharp: TowerDefense.UI
    VB: TowerDefense.UI
  nameWithType:
    CSharp: TowerDefense.UI
    VB: TowerDefense.UI
  qualifiedName:
    CSharp: TowerDefense.UI
    VB: TowerDefense.UI
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.UI.EndGameScreen
    commentId: T:TowerDefense.UI.EndGameScreen
    language: CSharp
    name:
      CSharp: EndGameScreen
      VB: EndGameScreen
    nameWithType:
      CSharp: EndGameScreen
      VB: EndGameScreen
    qualifiedName:
      CSharp: TowerDefense.UI.EndGameScreen
      VB: TowerDefense.UI.EndGameScreen
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: EndGameScreen
      path: ''
      startLine: 7306
    summary: "\nUI to display the game over screen\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EndGameScreen : MonoBehaviour'
        VB: >-
          Public Class EndGameScreen

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.EndGameScreen.victorySound
      commentId: F:TowerDefense.UI.EndGameScreen.victorySound
      language: CSharp
      name:
        CSharp: victorySound
        VB: victorySound
      nameWithType:
        CSharp: EndGameScreen.victorySound
        VB: EndGameScreen.victorySound
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.victorySound
        VB: TowerDefense.UI.EndGameScreen.victorySound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: victorySound
        path: ''
        startLine: 7311
      summary: "\nAudioClip to play when victorious\n"
      example: []
      syntax:
        content:
          CSharp: public AudioClip victorySound
          VB: Public victorySound As AudioClip
        return:
          type: AudioClip
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.defeatSound
      commentId: F:TowerDefense.UI.EndGameScreen.defeatSound
      language: CSharp
      name:
        CSharp: defeatSound
        VB: defeatSound
      nameWithType:
        CSharp: EndGameScreen.defeatSound
        VB: EndGameScreen.defeatSound
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.defeatSound
        VB: TowerDefense.UI.EndGameScreen.defeatSound
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: defeatSound
        path: ''
        startLine: 7316
      summary: "\nAudioClip to play when failed\n"
      example: []
      syntax:
        content:
          CSharp: public AudioClip defeatSound
          VB: Public defeatSound As AudioClip
        return:
          type: AudioClip
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.audioSource
      commentId: F:TowerDefense.UI.EndGameScreen.audioSource
      language: CSharp
      name:
        CSharp: audioSource
        VB: audioSource
      nameWithType:
        CSharp: EndGameScreen.audioSource
        VB: EndGameScreen.audioSource
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.audioSource
        VB: TowerDefense.UI.EndGameScreen.audioSource
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: audioSource
        path: ''
        startLine: 7321
      summary: "\nAudioSource that plays the sound\n"
      example: []
      syntax:
        content:
          CSharp: public AudioSource audioSource
          VB: Public audioSource As AudioSource
        return:
          type: AudioSource
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.endGameCanvas
      commentId: F:TowerDefense.UI.EndGameScreen.endGameCanvas
      language: CSharp
      name:
        CSharp: endGameCanvas
        VB: endGameCanvas
      nameWithType:
        CSharp: EndGameScreen.endGameCanvas
        VB: EndGameScreen.endGameCanvas
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.endGameCanvas
        VB: TowerDefense.UI.EndGameScreen.endGameCanvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: endGameCanvas
        path: ''
        startLine: 7326
      summary: "\nThe containing panel of the End Game UI\n"
      example: []
      syntax:
        content:
          CSharp: public Canvas endGameCanvas
          VB: Public endGameCanvas As Canvas
        return:
          type: Canvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.endGameMessageText
      commentId: F:TowerDefense.UI.EndGameScreen.endGameMessageText
      language: CSharp
      name:
        CSharp: endGameMessageText
        VB: endGameMessageText
      nameWithType:
        CSharp: EndGameScreen.endGameMessageText
        VB: EndGameScreen.endGameMessageText
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.endGameMessageText
        VB: TowerDefense.UI.EndGameScreen.endGameMessageText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: endGameMessageText
        path: ''
        startLine: 7331
      summary: "\nReference to the Text object that displays the result message\n"
      example: []
      syntax:
        content:
          CSharp: public Text endGameMessageText
          VB: Public endGameMessageText As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.scorePanel
      commentId: F:TowerDefense.UI.EndGameScreen.scorePanel
      language: CSharp
      name:
        CSharp: scorePanel
        VB: scorePanel
      nameWithType:
        CSharp: EndGameScreen.scorePanel
        VB: EndGameScreen.scorePanel
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.scorePanel
        VB: TowerDefense.UI.EndGameScreen.scorePanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: scorePanel
        path: ''
        startLine: 7336
      summary: "\nPanel that shows final star rating\n"
      example: []
      syntax:
        content:
          CSharp: public ScorePanel scorePanel
          VB: Public scorePanel As ScorePanel
        return:
          type: TowerDefense.UI.ScorePanel
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.menuSceneName
      commentId: F:TowerDefense.UI.EndGameScreen.menuSceneName
      language: CSharp
      name:
        CSharp: menuSceneName
        VB: menuSceneName
      nameWithType:
        CSharp: EndGameScreen.menuSceneName
        VB: EndGameScreen.menuSceneName
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.menuSceneName
        VB: TowerDefense.UI.EndGameScreen.menuSceneName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: menuSceneName
        path: ''
        startLine: 7341
      summary: "\nName of level select screen\n"
      example: []
      syntax:
        content:
          CSharp: public string menuSceneName
          VB: Public menuSceneName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.levelCompleteText
      commentId: F:TowerDefense.UI.EndGameScreen.levelCompleteText
      language: CSharp
      name:
        CSharp: levelCompleteText
        VB: levelCompleteText
      nameWithType:
        CSharp: EndGameScreen.levelCompleteText
        VB: EndGameScreen.levelCompleteText
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.levelCompleteText
        VB: TowerDefense.UI.EndGameScreen.levelCompleteText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: levelCompleteText
        path: ''
        startLine: 7346
      summary: "\nText to be displayed on popup\n"
      example: []
      syntax:
        content:
          CSharp: public string levelCompleteText
          VB: Public levelCompleteText As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.levelFailedText
      commentId: F:TowerDefense.UI.EndGameScreen.levelFailedText
      language: CSharp
      name:
        CSharp: levelFailedText
        VB: levelFailedText
      nameWithType:
        CSharp: EndGameScreen.levelFailedText
        VB: EndGameScreen.levelFailedText
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.levelFailedText
        VB: TowerDefense.UI.EndGameScreen.levelFailedText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: levelFailedText
        path: ''
        startLine: 7348
      syntax:
        content:
          CSharp: public string levelFailedText
          VB: Public levelFailedText As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.background
      commentId: F:TowerDefense.UI.EndGameScreen.background
      language: CSharp
      name:
        CSharp: background
        VB: background
      nameWithType:
        CSharp: EndGameScreen.background
        VB: EndGameScreen.background
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.background
        VB: TowerDefense.UI.EndGameScreen.background
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: background
        path: ''
        startLine: 7353
      summary: "\nBackground image\n"
      example: []
      syntax:
        content:
          CSharp: public Image background
          VB: Public background As Image
        return:
          type: Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.winBackgroundColor
      commentId: F:TowerDefense.UI.EndGameScreen.winBackgroundColor
      language: CSharp
      name:
        CSharp: winBackgroundColor
        VB: winBackgroundColor
      nameWithType:
        CSharp: EndGameScreen.winBackgroundColor
        VB: EndGameScreen.winBackgroundColor
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.winBackgroundColor
        VB: TowerDefense.UI.EndGameScreen.winBackgroundColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: winBackgroundColor
        path: ''
        startLine: 7358
      summary: "\nColor to set background\n"
      example: []
      syntax:
        content:
          CSharp: public Color winBackgroundColor
          VB: Public winBackgroundColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.loseBackgroundColor
      commentId: F:TowerDefense.UI.EndGameScreen.loseBackgroundColor
      language: CSharp
      name:
        CSharp: loseBackgroundColor
        VB: loseBackgroundColor
      nameWithType:
        CSharp: EndGameScreen.loseBackgroundColor
        VB: EndGameScreen.loseBackgroundColor
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.loseBackgroundColor
        VB: TowerDefense.UI.EndGameScreen.loseBackgroundColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: loseBackgroundColor
        path: ''
        startLine: 7360
      syntax:
        content:
          CSharp: public Color loseBackgroundColor
          VB: Public loseBackgroundColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.nextLevelButton
      commentId: F:TowerDefense.UI.EndGameScreen.nextLevelButton
      language: CSharp
      name:
        CSharp: nextLevelButton
        VB: nextLevelButton
      nameWithType:
        CSharp: EndGameScreen.nextLevelButton
        VB: EndGameScreen.nextLevelButton
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.nextLevelButton
        VB: TowerDefense.UI.EndGameScreen.nextLevelButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: nextLevelButton
        path: ''
        startLine: 7366
      summary: "\nThe Canvas that holds the button to go to the next level\nif the player has beaten the level\n"
      example: []
      syntax:
        content:
          CSharp: public Canvas nextLevelButton
          VB: Public nextLevelButton As Canvas
        return:
          type: Canvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.m_LevelManager
      commentId: F:TowerDefense.UI.EndGameScreen.m_LevelManager
      language: CSharp
      name:
        CSharp: m_LevelManager
        VB: m_LevelManager
      nameWithType:
        CSharp: EndGameScreen.m_LevelManager
        VB: EndGameScreen.m_LevelManager
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.m_LevelManager
        VB: TowerDefense.UI.EndGameScreen.m_LevelManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_LevelManager
        path: ''
        startLine: 7371
      summary: "\nReference to the <see cref=\"!:LevelManager\"></see>\n"
      example: []
      syntax:
        content:
          CSharp: protected LevelManager m_LevelManager
          VB: Protected m_LevelManager As LevelManager
        return:
          type: LevelManager
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.GoToMainMenu
      commentId: M:TowerDefense.UI.EndGameScreen.GoToMainMenu
      language: CSharp
      name:
        CSharp: GoToMainMenu()
        VB: GoToMainMenu()
      nameWithType:
        CSharp: EndGameScreen.GoToMainMenu()
        VB: EndGameScreen.GoToMainMenu()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.GoToMainMenu()
        VB: TowerDefense.UI.EndGameScreen.GoToMainMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: GoToMainMenu
        path: ''
        startLine: 7377
      summary: "\nSafely unsubscribes from <see cref=\"!:LevelManager\"></see> events.\nGo back to the main menu scene\n"
      example: []
      syntax:
        content:
          CSharp: public void GoToMainMenu()
          VB: Public Sub GoToMainMenu
      overload: TowerDefense.UI.EndGameScreen.GoToMainMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.RestartLevel
      commentId: M:TowerDefense.UI.EndGameScreen.RestartLevel
      language: CSharp
      name:
        CSharp: RestartLevel()
        VB: RestartLevel()
      nameWithType:
        CSharp: EndGameScreen.RestartLevel()
        VB: EndGameScreen.RestartLevel()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.RestartLevel()
        VB: TowerDefense.UI.EndGameScreen.RestartLevel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: RestartLevel
        path: ''
        startLine: 7387
      summary: "\nSafely unsubscribes from <see cref=\"!:LevelManager\"></see> events.\nReloads the active scene\n"
      example: []
      syntax:
        content:
          CSharp: public void RestartLevel()
          VB: Public Sub RestartLevel
      overload: TowerDefense.UI.EndGameScreen.RestartLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.GoToNextLevel
      commentId: M:TowerDefense.UI.EndGameScreen.GoToNextLevel
      language: CSharp
      name:
        CSharp: GoToNextLevel()
        VB: GoToNextLevel()
      nameWithType:
        CSharp: EndGameScreen.GoToNextLevel()
        VB: EndGameScreen.GoToNextLevel()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.GoToNextLevel()
        VB: TowerDefense.UI.EndGameScreen.GoToNextLevel()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: GoToNextLevel
        path: ''
        startLine: 7398
      summary: "\nSafely unsubscribes from <see cref=\"!:LevelManager\"></see> events.\nGoes to the next scene if valid\n"
      example: []
      syntax:
        content:
          CSharp: public void GoToNextLevel()
          VB: Public Sub GoToNextLevel
      overload: TowerDefense.UI.EndGameScreen.GoToNextLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.EndGameScreen.Start
      commentId: M:TowerDefense.UI.EndGameScreen.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: EndGameScreen.Start()
        VB: EndGameScreen.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.Start()
        VB: TowerDefense.UI.EndGameScreen.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Start
        path: ''
        startLine: 7430
      summary: "\nHide the panel if it is active at the start.\nSubscribe to the <see cref=\"!:LevelManager\"></see> completed/failed events.\n"
      example: []
      syntax:
        content:
          CSharp: protected void Start()
          VB: Protected Sub Start
      overload: TowerDefense.UI.EndGameScreen.Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.OpenEndGameScreen(System.String)
      commentId: M:TowerDefense.UI.EndGameScreen.OpenEndGameScreen(System.String)
      language: CSharp
      name:
        CSharp: OpenEndGameScreen(String)
        VB: OpenEndGameScreen(String)
      nameWithType:
        CSharp: EndGameScreen.OpenEndGameScreen(String)
        VB: EndGameScreen.OpenEndGameScreen(String)
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.OpenEndGameScreen(System.String)
        VB: TowerDefense.UI.EndGameScreen.OpenEndGameScreen(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OpenEndGameScreen
        path: ''
        startLine: 7444
      summary: "\nShows the end game screen\n"
      example: []
      syntax:
        content:
          CSharp: protected void OpenEndGameScreen(string endResultText)
          VB: Protected Sub OpenEndGameScreen(endResultText As String)
        parameters:
        - id: endResultText
          type: System.String
      overload: TowerDefense.UI.EndGameScreen.OpenEndGameScreen*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.Victory
      commentId: M:TowerDefense.UI.EndGameScreen.Victory
      language: CSharp
      name:
        CSharp: Victory()
        VB: Victory()
      nameWithType:
        CSharp: EndGameScreen.Victory()
        VB: EndGameScreen.Victory()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.Victory()
        VB: TowerDefense.UI.EndGameScreen.Victory()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Victory
        path: ''
        startLine: 7478
      summary: "\nOccurs when the level is sucessfully completed\n"
      example: []
      syntax:
        content:
          CSharp: protected void Victory()
          VB: Protected Sub Victory
      overload: TowerDefense.UI.EndGameScreen.Victory*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.Defeat
      commentId: M:TowerDefense.UI.EndGameScreen.Defeat
      language: CSharp
      name:
        CSharp: Defeat()
        VB: Defeat()
      nameWithType:
        CSharp: EndGameScreen.Defeat()
        VB: EndGameScreen.Defeat()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.Defeat()
        VB: TowerDefense.UI.EndGameScreen.Defeat()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Defeat
        path: ''
        startLine: 7520
      summary: "\nOccurs when level is failed\n"
      example: []
      syntax:
        content:
          CSharp: protected void Defeat()
          VB: Protected Sub Defeat
      overload: TowerDefense.UI.EndGameScreen.Defeat*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.OnDestroy
      commentId: M:TowerDefense.UI.EndGameScreen.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: EndGameScreen.OnDestroy()
        VB: EndGameScreen.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.OnDestroy()
        VB: TowerDefense.UI.EndGameScreen.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OnDestroy
        path: ''
        startLine: 7538
      summary: "\nSafely unsubscribes from <see cref=\"!:LevelManager\"></see> events.\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnDestroy()
          VB: Protected Sub OnDestroy
      overload: TowerDefense.UI.EndGameScreen.OnDestroy*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe
      commentId: M:TowerDefense.UI.EndGameScreen.SafelyUnsubscribe
      language: CSharp
      name:
        CSharp: SafelyUnsubscribe()
        VB: SafelyUnsubscribe()
      nameWithType:
        CSharp: EndGameScreen.SafelyUnsubscribe()
        VB: EndGameScreen.SafelyUnsubscribe()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe()
        VB: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: SafelyUnsubscribe
        path: ''
        startLine: 7550
      summary: "\nEnsure that <see cref=\"!:LevelManager\"></see> events are unsubscribed from when necessary\n"
      example: []
      syntax:
        content:
          CSharp: protected void SafelyUnsubscribe()
          VB: Protected Sub SafelyUnsubscribe
      overload: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.LazyLoad
      commentId: M:TowerDefense.UI.EndGameScreen.LazyLoad
      language: CSharp
      name:
        CSharp: LazyLoad()
        VB: LazyLoad()
      nameWithType:
        CSharp: EndGameScreen.LazyLoad()
        VB: EndGameScreen.LazyLoad()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.LazyLoad()
        VB: TowerDefense.UI.EndGameScreen.LazyLoad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: LazyLoad
        path: ''
        startLine: 7560
      summary: "\nEnsure <xref href=\"TowerDefense.UI.EndGameScreen.m_LevelManager\" data-throw-if-not-resolved=\"false\"></xref> is not null\n"
      example: []
      syntax:
        content:
          CSharp: protected void LazyLoad()
          VB: Protected Sub LazyLoad
      overload: TowerDefense.UI.EndGameScreen.LazyLoad*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.UI.EndGameScreen.m_LevelManager: 
    - id: TowerDefense.UI.EndGameScreen.CalculateFinalScore
      commentId: M:TowerDefense.UI.EndGameScreen.CalculateFinalScore
      language: CSharp
      name:
        CSharp: CalculateFinalScore()
        VB: CalculateFinalScore()
      nameWithType:
        CSharp: EndGameScreen.CalculateFinalScore()
        VB: EndGameScreen.CalculateFinalScore()
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.CalculateFinalScore()
        VB: TowerDefense.UI.EndGameScreen.CalculateFinalScore()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: CalculateFinalScore
        path: ''
        startLine: 7572
      summary: "\nAdd up the health of all the Home Bases and return a score\n"
      example: []
      syntax:
        content:
          CSharp: protected int CalculateFinalScore()
          VB: Protected Function CalculateFinalScore As Integer
        return:
          type: System.Int32
          description: Final score
      overload: TowerDefense.UI.EndGameScreen.CalculateFinalScore*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.EndGameScreen.CalculateScore(System.Single,System.Single)
      commentId: M:TowerDefense.UI.EndGameScreen.CalculateScore(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: CalculateScore(Single, Single)
        VB: CalculateScore(Single, Single)
      nameWithType:
        CSharp: EndGameScreen.CalculateScore(Single, Single)
        VB: EndGameScreen.CalculateScore(Single, Single)
      qualifiedName:
        CSharp: TowerDefense.UI.EndGameScreen.CalculateScore(System.Single, System.Single)
        VB: TowerDefense.UI.EndGameScreen.CalculateScore(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: CalculateScore
        path: ''
        startLine: 7595
      summary: "\nTake the final remaining health of all bases and rates them\n"
      example: []
      syntax:
        content:
          CSharp: protected int CalculateScore(float remainingHealth, float maxHealth)
          VB: Protected Function CalculateScore(remainingHealth As Single, maxHealth As Single) As Integer
        parameters:
        - id: remainingHealth
          type: System.Single
          description: the total remaining health of all home bases
        - id: maxHealth
          type: System.Single
          description: the total maximum health of all home bases
        return:
          type: System.Int32
          description: 0 to 3 depending on how much health is remaining
      overload: TowerDefense.UI.EndGameScreen.CalculateScore*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.UI.ExitButton
    commentId: T:TowerDefense.UI.ExitButton
    language: CSharp
    name:
      CSharp: ExitButton
      VB: ExitButton
    nameWithType:
      CSharp: ExitButton
      VB: ExitButton
    qualifiedName:
      CSharp: TowerDefense.UI.ExitButton
      VB: TowerDefense.UI.ExitButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: ExitButton
      path: ''
      startLine: 7623
    summary: "\nA button for exiting the game\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ExitButton : Button'
        VB: >-
          Public Class ExitButton

              Inherits Button
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.ExitButton.OnPointerClick(PointerEventData)
      commentId: M:TowerDefense.UI.ExitButton.OnPointerClick(PointerEventData)
      language: CSharp
      name:
        CSharp: OnPointerClick(PointerEventData)
        VB: OnPointerClick(PointerEventData)
      nameWithType:
        CSharp: ExitButton.OnPointerClick(PointerEventData)
        VB: ExitButton.OnPointerClick(PointerEventData)
      qualifiedName:
        CSharp: TowerDefense.UI.ExitButton.OnPointerClick(PointerEventData)
        VB: TowerDefense.UI.ExitButton.OnPointerClick(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OnPointerClick
        path: ''
        startLine: 7628
      summary: "\nClose the game when this button is clicked\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnPointerClick(PointerEventData eventData)
          VB: Public Overrides Sub OnPointerClick(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: PointerEventData
      overload: TowerDefense.UI.ExitButton.OnPointerClick*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.UI.ExitButton.Awake
      commentId: M:TowerDefense.UI.ExitButton.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: ExitButton.Awake()
        VB: ExitButton.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.ExitButton.Awake()
        VB: TowerDefense.UI.ExitButton.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Awake
        path: ''
        startLine: 7636
      summary: "\nDisable this button on mobile platforms\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: TowerDefense.UI.ExitButton.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: TowerDefense.UI.IntervalParticleSystemPlayer
    commentId: T:TowerDefense.UI.IntervalParticleSystemPlayer
    language: CSharp
    name:
      CSharp: IntervalParticleSystemPlayer
      VB: IntervalParticleSystemPlayer
    nameWithType:
      CSharp: IntervalParticleSystemPlayer
      VB: IntervalParticleSystemPlayer
    qualifiedName:
      CSharp: TowerDefense.UI.IntervalParticleSystemPlayer
      VB: TowerDefense.UI.IntervalParticleSystemPlayer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: IntervalParticleSystemPlayer
      path: ''
      startLine: 7657
    summary: "\nA simple component that plays a given particle system on a given regular interval\n"
    example: []
    syntax:
      content:
        CSharp: 'public class IntervalParticleSystemPlayer : MonoBehaviour'
        VB: >-
          Public Class IntervalParticleSystemPlayer

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.IntervalParticleSystemPlayer.particleSystemToPlay
      commentId: F:TowerDefense.UI.IntervalParticleSystemPlayer.particleSystemToPlay
      language: CSharp
      name:
        CSharp: particleSystemToPlay
        VB: particleSystemToPlay
      nameWithType:
        CSharp: IntervalParticleSystemPlayer.particleSystemToPlay
        VB: IntervalParticleSystemPlayer.particleSystemToPlay
      qualifiedName:
        CSharp: TowerDefense.UI.IntervalParticleSystemPlayer.particleSystemToPlay
        VB: TowerDefense.UI.IntervalParticleSystemPlayer.particleSystemToPlay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: particleSystemToPlay
        path: ''
        startLine: 7659
      syntax:
        content:
          CSharp: public ParticleSystem particleSystemToPlay
          VB: Public particleSystemToPlay As ParticleSystem
        return:
          type: ParticleSystem
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.IntervalParticleSystemPlayer.interval
      commentId: F:TowerDefense.UI.IntervalParticleSystemPlayer.interval
      language: CSharp
      name:
        CSharp: interval
        VB: interval
      nameWithType:
        CSharp: IntervalParticleSystemPlayer.interval
        VB: IntervalParticleSystemPlayer.interval
      qualifiedName:
        CSharp: TowerDefense.UI.IntervalParticleSystemPlayer.interval
        VB: TowerDefense.UI.IntervalParticleSystemPlayer.interval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: interval
        path: ''
        startLine: 7661
      syntax:
        content:
          CSharp: public float interval
          VB: Public interval As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.IntervalParticleSystemPlayer.m_NextPlayTime
      commentId: F:TowerDefense.UI.IntervalParticleSystemPlayer.m_NextPlayTime
      language: CSharp
      name:
        CSharp: m_NextPlayTime
        VB: m_NextPlayTime
      nameWithType:
        CSharp: IntervalParticleSystemPlayer.m_NextPlayTime
        VB: IntervalParticleSystemPlayer.m_NextPlayTime
      qualifiedName:
        CSharp: TowerDefense.UI.IntervalParticleSystemPlayer.m_NextPlayTime
        VB: TowerDefense.UI.IntervalParticleSystemPlayer.m_NextPlayTime
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_NextPlayTime
        path: ''
        startLine: 7663
      syntax:
        content:
          CSharp: protected DateTime m_NextPlayTime
          VB: Protected m_NextPlayTime As DateTime
        return:
          type: DateTime
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.UI.LevelSelectButton
    commentId: T:TowerDefense.UI.LevelSelectButton
    language: CSharp
    name:
      CSharp: LevelSelectButton
      VB: LevelSelectButton
    nameWithType:
      CSharp: LevelSelectButton
      VB: LevelSelectButton
    qualifiedName:
      CSharp: TowerDefense.UI.LevelSelectButton
      VB: TowerDefense.UI.LevelSelectButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: LevelSelectButton
      path: ''
      startLine: 7693
    summary: "\nThe button for selecting a level\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LevelSelectButton : MonoBehaviour, ISelectHandler'
        VB: >-
          Public Class LevelSelectButton

              Inherits MonoBehaviour

              Implements ISelectHandler
    inheritance:
    - System.Object
    implements:
    - ISelectHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.LevelSelectButton.m_Button
      commentId: F:TowerDefense.UI.LevelSelectButton.m_Button
      language: CSharp
      name:
        CSharp: m_Button
        VB: m_Button
      nameWithType:
        CSharp: LevelSelectButton.m_Button
        VB: LevelSelectButton.m_Button
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.m_Button
        VB: TowerDefense.UI.LevelSelectButton.m_Button
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_Button
        path: ''
        startLine: 7699
      summary: "\nReference to the required button component\n"
      example: []
      syntax:
        content:
          CSharp: protected Button m_Button
          VB: Protected m_Button As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectButton.titleDisplay
      commentId: F:TowerDefense.UI.LevelSelectButton.titleDisplay
      language: CSharp
      name:
        CSharp: titleDisplay
        VB: titleDisplay
      nameWithType:
        CSharp: LevelSelectButton.titleDisplay
        VB: LevelSelectButton.titleDisplay
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.titleDisplay
        VB: TowerDefense.UI.LevelSelectButton.titleDisplay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: titleDisplay
        path: ''
        startLine: 7704
      summary: "\nThe UI text element that displays the name of the level\n"
      example: []
      syntax:
        content:
          CSharp: public Text titleDisplay
          VB: Public titleDisplay As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectButton.description
      commentId: F:TowerDefense.UI.LevelSelectButton.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: LevelSelectButton.description
        VB: LevelSelectButton.description
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.description
        VB: TowerDefense.UI.LevelSelectButton.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: description
        path: ''
        startLine: 7706
      syntax:
        content:
          CSharp: public Text description
          VB: Public description As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectButton.starAchieved
      commentId: F:TowerDefense.UI.LevelSelectButton.starAchieved
      language: CSharp
      name:
        CSharp: starAchieved
        VB: starAchieved
      nameWithType:
        CSharp: LevelSelectButton.starAchieved
        VB: LevelSelectButton.starAchieved
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.starAchieved
        VB: TowerDefense.UI.LevelSelectButton.starAchieved
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: starAchieved
        path: ''
        startLine: 7708
      syntax:
        content:
          CSharp: public Sprite starAchieved
          VB: Public starAchieved As Sprite
        return:
          type: Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectButton.stars
      commentId: F:TowerDefense.UI.LevelSelectButton.stars
      language: CSharp
      name:
        CSharp: stars
        VB: stars
      nameWithType:
        CSharp: LevelSelectButton.stars
        VB: LevelSelectButton.stars
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.stars
        VB: TowerDefense.UI.LevelSelectButton.stars
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: stars
        path: ''
        startLine: 7710
      syntax:
        content:
          CSharp: public Image[] stars
          VB: Public stars As Image()
        return:
          type: Image[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectButton.m_MouseScroll
      commentId: F:TowerDefense.UI.LevelSelectButton.m_MouseScroll
      language: CSharp
      name:
        CSharp: m_MouseScroll
        VB: m_MouseScroll
      nameWithType:
        CSharp: LevelSelectButton.m_MouseScroll
        VB: LevelSelectButton.m_MouseScroll
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.m_MouseScroll
        VB: TowerDefense.UI.LevelSelectButton.m_MouseScroll
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_MouseScroll
        path: ''
        startLine: 7712
      syntax:
        content:
          CSharp: protected MouseScroll m_MouseScroll
          VB: Protected m_MouseScroll As MouseScroll
        return:
          type: TowerDefense.UI.MouseScroll
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectButton.m_Item
      commentId: F:TowerDefense.UI.LevelSelectButton.m_Item
      language: CSharp
      name:
        CSharp: m_Item
        VB: m_Item
      nameWithType:
        CSharp: LevelSelectButton.m_Item
        VB: LevelSelectButton.m_Item
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.m_Item
        VB: TowerDefense.UI.LevelSelectButton.m_Item
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_Item
        path: ''
        startLine: 7717
      summary: "\nThe data concerning the level this button displays\n"
      example: []
      syntax:
        content:
          CSharp: protected LevelItem m_Item
          VB: Protected m_Item As LevelItem
        return:
          type: LevelItem
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectButton.ButtonClicked
      commentId: M:TowerDefense.UI.LevelSelectButton.ButtonClicked
      language: CSharp
      name:
        CSharp: ButtonClicked()
        VB: ButtonClicked()
      nameWithType:
        CSharp: LevelSelectButton.ButtonClicked()
        VB: LevelSelectButton.ButtonClicked()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.ButtonClicked()
        VB: TowerDefense.UI.LevelSelectButton.ButtonClicked()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: ButtonClicked
        path: ''
        startLine: 7722
      summary: "\nWhen the user clicks the button, change the scene\n"
      example: []
      syntax:
        content:
          CSharp: public void ButtonClicked()
          VB: Public Sub ButtonClicked
      overload: TowerDefense.UI.LevelSelectButton.ButtonClicked*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectButton.Initialize(LevelItem,TowerDefense.UI.MouseScroll)
      commentId: M:TowerDefense.UI.LevelSelectButton.Initialize(LevelItem,TowerDefense.UI.MouseScroll)
      language: CSharp
      name:
        CSharp: Initialize(LevelItem, MouseScroll)
        VB: Initialize(LevelItem, MouseScroll)
      nameWithType:
        CSharp: LevelSelectButton.Initialize(LevelItem, MouseScroll)
        VB: LevelSelectButton.Initialize(LevelItem, MouseScroll)
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.Initialize(LevelItem, TowerDefense.UI.MouseScroll)
        VB: TowerDefense.UI.LevelSelectButton.Initialize(LevelItem, TowerDefense.UI.MouseScroll)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Initialize
        path: ''
        startLine: 7733
      summary: "\nA method for assigning the data from item to the button\n"
      example: []
      syntax:
        content:
          CSharp: public void Initialize(LevelItem item, MouseScroll mouseScroll)
          VB: Public Sub Initialize(item As LevelItem, mouseScroll As MouseScroll)
        parameters:
        - id: item
          type: LevelItem
          description: "\nThe data with the information concerning the level\n"
        - id: mouseScroll
          type: TowerDefense.UI.MouseScroll
      overload: TowerDefense.UI.LevelSelectButton.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectButton.HasPlayedState
      commentId: M:TowerDefense.UI.LevelSelectButton.HasPlayedState
      language: CSharp
      name:
        CSharp: HasPlayedState()
        VB: HasPlayedState()
      nameWithType:
        CSharp: LevelSelectButton.HasPlayedState()
        VB: LevelSelectButton.HasPlayedState()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.HasPlayedState()
        VB: TowerDefense.UI.LevelSelectButton.HasPlayedState()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: HasPlayedState
        path: ''
        startLine: 7750
      summary: "\nConfigures the feedback concerning if the player has played\n"
      example: []
      syntax:
        content:
          CSharp: protected void HasPlayedState()
          VB: Protected Sub HasPlayedState
      overload: TowerDefense.UI.LevelSelectButton.HasPlayedState*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectButton.ChangeScenes
      commentId: M:TowerDefense.UI.LevelSelectButton.ChangeScenes
      language: CSharp
      name:
        CSharp: ChangeScenes()
        VB: ChangeScenes()
      nameWithType:
        CSharp: LevelSelectButton.ChangeScenes()
        VB: LevelSelectButton.ChangeScenes()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.ChangeScenes()
        VB: TowerDefense.UI.LevelSelectButton.ChangeScenes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: ChangeScenes
        path: ''
        startLine: 7767
      summary: "\nChanges the scene to the scene name provided by m_Item\n"
      example: []
      syntax:
        content:
          CSharp: protected void ChangeScenes()
          VB: Protected Sub ChangeScenes
      overload: TowerDefense.UI.LevelSelectButton.ChangeScenes*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectButton.LazyLoad
      commentId: M:TowerDefense.UI.LevelSelectButton.LazyLoad
      language: CSharp
      name:
        CSharp: LazyLoad()
        VB: LazyLoad()
      nameWithType:
        CSharp: LevelSelectButton.LazyLoad()
        VB: LevelSelectButton.LazyLoad()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.LazyLoad()
        VB: TowerDefense.UI.LevelSelectButton.LazyLoad()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: LazyLoad
        path: ''
        startLine: 7775
      summary: "\nEnsure <xref href=\"TowerDefense.UI.LevelSelectButton.m_Button\" data-throw-if-not-resolved=\"false\"></xref> is not null\n"
      example: []
      syntax:
        content:
          CSharp: protected void LazyLoad()
          VB: Protected Sub LazyLoad
      overload: TowerDefense.UI.LevelSelectButton.LazyLoad*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.UI.LevelSelectButton.m_Button: 
    - id: TowerDefense.UI.LevelSelectButton.OnDestroy
      commentId: M:TowerDefense.UI.LevelSelectButton.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: LevelSelectButton.OnDestroy()
        VB: LevelSelectButton.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.OnDestroy()
        VB: TowerDefense.UI.LevelSelectButton.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OnDestroy
        path: ''
        startLine: 7786
      summary: "\nRemove all listeners on the button before destruction\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnDestroy()
          VB: Protected Sub OnDestroy
      overload: TowerDefense.UI.LevelSelectButton.OnDestroy*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectButton.OnSelect(BaseEventData)
      commentId: M:TowerDefense.UI.LevelSelectButton.OnSelect(BaseEventData)
      language: CSharp
      name:
        CSharp: OnSelect(BaseEventData)
        VB: OnSelect(BaseEventData)
      nameWithType:
        CSharp: LevelSelectButton.OnSelect(BaseEventData)
        VB: LevelSelectButton.OnSelect(BaseEventData)
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectButton.OnSelect(BaseEventData)
        VB: TowerDefense.UI.LevelSelectButton.OnSelect(BaseEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OnSelect
        path: ''
        startLine: 7798
      summary: "\nImplementation of ISelectHandler\n"
      example: []
      syntax:
        content:
          CSharp: public void OnSelect(BaseEventData eventData)
          VB: Public Sub OnSelect(eventData As BaseEventData)
        parameters:
        - id: eventData
          type: BaseEventData
          description: Select event data
      overload: TowerDefense.UI.LevelSelectButton.OnSelect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.LevelSelectScreen
    commentId: T:TowerDefense.UI.LevelSelectScreen
    language: CSharp
    name:
      CSharp: LevelSelectScreen
      VB: LevelSelectScreen
    nameWithType:
      CSharp: LevelSelectScreen
      VB: LevelSelectScreen
    qualifiedName:
      CSharp: TowerDefense.UI.LevelSelectScreen
      VB: TowerDefense.UI.LevelSelectScreen
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: LevelSelectScreen
      path: ''
      startLine: 7816
    summary: "\nA manager for the level select user interface\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LevelSelectScreen : SimpleMainMenuPage'
        VB: >-
          Public Class LevelSelectScreen

              Inherits SimpleMainMenuPage
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.LevelSelectScreen.selectionPrefab
      commentId: F:TowerDefense.UI.LevelSelectScreen.selectionPrefab
      language: CSharp
      name:
        CSharp: selectionPrefab
        VB: selectionPrefab
      nameWithType:
        CSharp: LevelSelectScreen.selectionPrefab
        VB: LevelSelectScreen.selectionPrefab
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.selectionPrefab
        VB: TowerDefense.UI.LevelSelectScreen.selectionPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: selectionPrefab
        path: ''
        startLine: 7822
      summary: "\nThe button to instantiate that \nrepresents the level select buttons\n"
      example: []
      syntax:
        content:
          CSharp: public LevelSelectButton selectionPrefab
          VB: Public selectionPrefab As LevelSelectButton
        return:
          type: TowerDefense.UI.LevelSelectButton
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.layout
      commentId: F:TowerDefense.UI.LevelSelectScreen.layout
      language: CSharp
      name:
        CSharp: layout
        VB: layout
      nameWithType:
        CSharp: LevelSelectScreen.layout
        VB: LevelSelectScreen.layout
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.layout
        VB: TowerDefense.UI.LevelSelectScreen.layout
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: layout
        path: ''
        startLine: 7827
      summary: "\nThe layout group to instantiate the buttons in\n"
      example: []
      syntax:
        content:
          CSharp: public LayoutGroup layout
          VB: Public layout As LayoutGroup
        return:
          type: LayoutGroup
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.rightBuffer
      commentId: F:TowerDefense.UI.LevelSelectScreen.rightBuffer
      language: CSharp
      name:
        CSharp: rightBuffer
        VB: rightBuffer
      nameWithType:
        CSharp: LevelSelectScreen.rightBuffer
        VB: LevelSelectScreen.rightBuffer
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.rightBuffer
        VB: TowerDefense.UI.LevelSelectScreen.rightBuffer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: rightBuffer
        path: ''
        startLine: 7832
      summary: "\nA buffer for the levels panel\n"
      example: []
      syntax:
        content:
          CSharp: public Transform rightBuffer
          VB: Public rightBuffer As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.backButton
      commentId: F:TowerDefense.UI.LevelSelectScreen.backButton
      language: CSharp
      name:
        CSharp: backButton
        VB: backButton
      nameWithType:
        CSharp: LevelSelectScreen.backButton
        VB: LevelSelectScreen.backButton
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.backButton
        VB: TowerDefense.UI.LevelSelectScreen.backButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: backButton
        path: ''
        startLine: 7834
      syntax:
        content:
          CSharp: public Button backButton
          VB: Public backButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.mouseScroll
      commentId: F:TowerDefense.UI.LevelSelectScreen.mouseScroll
      language: CSharp
      name:
        CSharp: mouseScroll
        VB: mouseScroll
      nameWithType:
        CSharp: LevelSelectScreen.mouseScroll
        VB: LevelSelectScreen.mouseScroll
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.mouseScroll
        VB: TowerDefense.UI.LevelSelectScreen.mouseScroll
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: mouseScroll
        path: ''
        startLine: 7836
      syntax:
        content:
          CSharp: public MouseScroll mouseScroll
          VB: Public mouseScroll As MouseScroll
        return:
          type: TowerDefense.UI.MouseScroll
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.cameraAnimator
      commentId: F:TowerDefense.UI.LevelSelectScreen.cameraAnimator
      language: CSharp
      name:
        CSharp: cameraAnimator
        VB: cameraAnimator
      nameWithType:
        CSharp: LevelSelectScreen.cameraAnimator
        VB: LevelSelectScreen.cameraAnimator
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.cameraAnimator
        VB: TowerDefense.UI.LevelSelectScreen.cameraAnimator
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: cameraAnimator
        path: ''
        startLine: 7838
      syntax:
        content:
          CSharp: public Animation cameraAnimator
          VB: Public cameraAnimator As Animation
        return:
          type: Animation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.enterCameraAnim
      commentId: F:TowerDefense.UI.LevelSelectScreen.enterCameraAnim
      language: CSharp
      name:
        CSharp: enterCameraAnim
        VB: enterCameraAnim
      nameWithType:
        CSharp: LevelSelectScreen.enterCameraAnim
        VB: LevelSelectScreen.enterCameraAnim
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.enterCameraAnim
        VB: TowerDefense.UI.LevelSelectScreen.enterCameraAnim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: enterCameraAnim
        path: ''
        startLine: 7840
      syntax:
        content:
          CSharp: public string enterCameraAnim
          VB: Public enterCameraAnim As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.exitCameraAnim
      commentId: F:TowerDefense.UI.LevelSelectScreen.exitCameraAnim
      language: CSharp
      name:
        CSharp: exitCameraAnim
        VB: exitCameraAnim
      nameWithType:
        CSharp: LevelSelectScreen.exitCameraAnim
        VB: LevelSelectScreen.exitCameraAnim
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.exitCameraAnim
        VB: TowerDefense.UI.LevelSelectScreen.exitCameraAnim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: exitCameraAnim
        path: ''
        startLine: 7842
      syntax:
        content:
          CSharp: public string exitCameraAnim
          VB: Public exitCameraAnim As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.LevelSelectScreen.m_LevelList
      commentId: F:TowerDefense.UI.LevelSelectScreen.m_LevelList
      language: CSharp
      name:
        CSharp: m_LevelList
        VB: m_LevelList
      nameWithType:
        CSharp: LevelSelectScreen.m_LevelList
        VB: LevelSelectScreen.m_LevelList
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.m_LevelList
        VB: TowerDefense.UI.LevelSelectScreen.m_LevelList
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_LevelList
        path: ''
        startLine: 7847
      summary: "\nThe reference to the list of levels to display\n"
      example: []
      syntax:
        content:
          CSharp: protected LevelList m_LevelList
          VB: Protected m_LevelList As LevelList
        return:
          type: LevelList
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectScreen.m_Buttons
      commentId: F:TowerDefense.UI.LevelSelectScreen.m_Buttons
      language: CSharp
      name:
        CSharp: m_Buttons
        VB: m_Buttons
      nameWithType:
        CSharp: LevelSelectScreen.m_Buttons
        VB: LevelSelectScreen.m_Buttons
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.m_Buttons
        VB: TowerDefense.UI.LevelSelectScreen.m_Buttons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_Buttons
        path: ''
        startLine: 7849
      syntax:
        content:
          CSharp: protected List<Button> m_Buttons
          VB: Protected m_Buttons As List(Of Button)
        return:
          type: List{Button}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectScreen.Start
      commentId: M:TowerDefense.UI.LevelSelectScreen.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LevelSelectScreen.Start()
        VB: LevelSelectScreen.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.Start()
        VB: TowerDefense.UI.LevelSelectScreen.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Start
        path: ''
        startLine: 7854
      summary: "\nInstantiate the buttons\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.LevelSelectScreen.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.LevelSelectScreen.CreateButton(LevelItem)
      commentId: M:TowerDefense.UI.LevelSelectScreen.CreateButton(LevelItem)
      language: CSharp
      name:
        CSharp: CreateButton(LevelItem)
        VB: CreateButton(LevelItem)
      nameWithType:
        CSharp: LevelSelectScreen.CreateButton(LevelItem)
        VB: LevelSelectScreen.CreateButton(LevelItem)
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.CreateButton(LevelItem)
        VB: TowerDefense.UI.LevelSelectScreen.CreateButton(LevelItem)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: CreateButton
        path: ''
        startLine: 7902
      summary: "\nCreate and Initialise a Level select button based on item\n"
      example: []
      syntax:
        content:
          CSharp: protected LevelSelectButton CreateButton(LevelItem item)
          VB: Protected Function CreateButton(item As LevelItem) As LevelSelectButton
        parameters:
        - id: item
          type: LevelItem
          description: "\nThe level data\n"
        return:
          type: TowerDefense.UI.LevelSelectButton
          description: "\nThe initialised button\n"
      overload: TowerDefense.UI.LevelSelectScreen.CreateButton*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.LevelSelectScreen.Show
      commentId: M:TowerDefense.UI.LevelSelectScreen.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: LevelSelectScreen.Show()
        VB: LevelSelectScreen.Show()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.Show()
        VB: TowerDefense.UI.LevelSelectScreen.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Show
        path: ''
        startLine: 7912
      summary: "\nPlay camera animations\n"
      example: []
      syntax:
        content:
          CSharp: public override void Show()
          VB: Public Overrides Sub Show
      overload: TowerDefense.UI.LevelSelectScreen.Show*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.UI.LevelSelectScreen.Hide
      commentId: M:TowerDefense.UI.LevelSelectScreen.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: LevelSelectScreen.Hide()
        VB: LevelSelectScreen.Hide()
      qualifiedName:
        CSharp: TowerDefense.UI.LevelSelectScreen.Hide()
        VB: TowerDefense.UI.LevelSelectScreen.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Hide
        path: ''
        startLine: 7925
      summary: "\nReturn camera to normal position\n"
      example: []
      syntax:
        content:
          CSharp: public override void Hide()
          VB: Public Overrides Sub Hide
      overload: TowerDefense.UI.LevelSelectScreen.Hide*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TowerDefense.UI.MouseScroll
    commentId: T:TowerDefense.UI.MouseScroll
    language: CSharp
    name:
      CSharp: MouseScroll
      VB: MouseScroll
    nameWithType:
      CSharp: MouseScroll
      VB: MouseScroll
    qualifiedName:
      CSharp: TowerDefense.UI.MouseScroll
      VB: TowerDefense.UI.MouseScroll
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: MouseScroll
      path: ''
      startLine: 7960
    summary: "\nComponent to override ScrollRect, uses normalized mouse position inside ScrollRect to scroll\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MouseScroll : MonoBehaviour'
        VB: >-
          Public Class MouseScroll

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.MouseScroll.clampScroll
      commentId: F:TowerDefense.UI.MouseScroll.clampScroll
      language: CSharp
      name:
        CSharp: clampScroll
        VB: clampScroll
      nameWithType:
        CSharp: MouseScroll.clampScroll
        VB: MouseScroll.clampScroll
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.clampScroll
        VB: TowerDefense.UI.MouseScroll.clampScroll
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: clampScroll
        path: ''
        startLine: 7966
      syntax:
        content:
          CSharp: public bool clampScroll
          VB: Public clampScroll As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.MouseScroll.scrollXBuffer
      commentId: F:TowerDefense.UI.MouseScroll.scrollXBuffer
      language: CSharp
      name:
        CSharp: scrollXBuffer
        VB: scrollXBuffer
      nameWithType:
        CSharp: MouseScroll.scrollXBuffer
        VB: MouseScroll.scrollXBuffer
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.scrollXBuffer
        VB: TowerDefense.UI.MouseScroll.scrollXBuffer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: scrollXBuffer
        path: ''
        startLine: 7971
      summary: "\nBuffer to adjust ScrollRect size\n"
      example: []
      syntax:
        content:
          CSharp: public float scrollXBuffer
          VB: Public scrollXBuffer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.MouseScroll.scrollYBuffer
      commentId: F:TowerDefense.UI.MouseScroll.scrollYBuffer
      language: CSharp
      name:
        CSharp: scrollYBuffer
        VB: scrollYBuffer
      nameWithType:
        CSharp: MouseScroll.scrollYBuffer
        VB: MouseScroll.scrollYBuffer
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.scrollYBuffer
        VB: TowerDefense.UI.MouseScroll.scrollYBuffer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: scrollYBuffer
        path: ''
        startLine: 7973
      syntax:
        content:
          CSharp: public float scrollYBuffer
          VB: Public scrollYBuffer As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.MouseScroll.m_ScrollRect
      commentId: F:TowerDefense.UI.MouseScroll.m_ScrollRect
      language: CSharp
      name:
        CSharp: m_ScrollRect
        VB: m_ScrollRect
      nameWithType:
        CSharp: MouseScroll.m_ScrollRect
        VB: MouseScroll.m_ScrollRect
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.m_ScrollRect
        VB: TowerDefense.UI.MouseScroll.m_ScrollRect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_ScrollRect
        path: ''
        startLine: 7975
      syntax:
        content:
          CSharp: protected ScrollRect m_ScrollRect
          VB: Protected m_ScrollRect As ScrollRect
        return:
          type: ScrollRect
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.MouseScroll.m_ScrollRectTransform
      commentId: F:TowerDefense.UI.MouseScroll.m_ScrollRectTransform
      language: CSharp
      name:
        CSharp: m_ScrollRectTransform
        VB: m_ScrollRectTransform
      nameWithType:
        CSharp: MouseScroll.m_ScrollRectTransform
        VB: MouseScroll.m_ScrollRectTransform
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.m_ScrollRectTransform
        VB: TowerDefense.UI.MouseScroll.m_ScrollRectTransform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_ScrollRectTransform
        path: ''
        startLine: 7976
      syntax:
        content:
          CSharp: protected RectTransform m_ScrollRectTransform
          VB: Protected m_ScrollRectTransform As RectTransform
        return:
          type: RectTransform
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.MouseScroll.m_OverrideScrolling
      commentId: F:TowerDefense.UI.MouseScroll.m_OverrideScrolling
      language: CSharp
      name:
        CSharp: m_OverrideScrolling
        VB: m_OverrideScrolling
      nameWithType:
        CSharp: MouseScroll.m_OverrideScrolling
        VB: MouseScroll.m_OverrideScrolling
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.m_OverrideScrolling
        VB: TowerDefense.UI.MouseScroll.m_OverrideScrolling
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_OverrideScrolling
        path: ''
        startLine: 7978
      syntax:
        content:
          CSharp: protected bool m_OverrideScrolling
          VB: Protected m_OverrideScrolling As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.MouseScroll.m_HasRightBuffer
      commentId: F:TowerDefense.UI.MouseScroll.m_HasRightBuffer
      language: CSharp
      name:
        CSharp: m_HasRightBuffer
        VB: m_HasRightBuffer
      nameWithType:
        CSharp: MouseScroll.m_HasRightBuffer
        VB: MouseScroll.m_HasRightBuffer
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.m_HasRightBuffer
        VB: TowerDefense.UI.MouseScroll.m_HasRightBuffer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_HasRightBuffer
        path: ''
        startLine: 7979
      syntax:
        content:
          CSharp: protected bool m_HasRightBuffer
          VB: Protected m_HasRightBuffer As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.MouseScroll.SetHasRightBuffer(System.Boolean)
      commentId: M:TowerDefense.UI.MouseScroll.SetHasRightBuffer(System.Boolean)
      language: CSharp
      name:
        CSharp: SetHasRightBuffer(Boolean)
        VB: SetHasRightBuffer(Boolean)
      nameWithType:
        CSharp: MouseScroll.SetHasRightBuffer(Boolean)
        VB: MouseScroll.SetHasRightBuffer(Boolean)
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.SetHasRightBuffer(System.Boolean)
        VB: TowerDefense.UI.MouseScroll.SetHasRightBuffer(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: SetHasRightBuffer
        path: ''
        startLine: 7981
      syntax:
        content:
          CSharp: public void SetHasRightBuffer(bool rightBuffer)
          VB: Public Sub SetHasRightBuffer(rightBuffer As Boolean)
        parameters:
        - id: rightBuffer
          type: System.Boolean
      overload: TowerDefense.UI.MouseScroll.SetHasRightBuffer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.MouseScroll.SelectChild(TowerDefense.UI.LevelSelectButton)
      commentId: M:TowerDefense.UI.MouseScroll.SelectChild(TowerDefense.UI.LevelSelectButton)
      language: CSharp
      name:
        CSharp: SelectChild(LevelSelectButton)
        VB: SelectChild(LevelSelectButton)
      nameWithType:
        CSharp: MouseScroll.SelectChild(LevelSelectButton)
        VB: MouseScroll.SelectChild(LevelSelectButton)
      qualifiedName:
        CSharp: TowerDefense.UI.MouseScroll.SelectChild(TowerDefense.UI.LevelSelectButton)
        VB: TowerDefense.UI.MouseScroll.SelectChild(TowerDefense.UI.LevelSelectButton)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: SelectChild
        path: ''
        startLine: 8043
      summary: "\nCalled when a button inside the scroll is selected\n"
      example: []
      syntax:
        content:
          CSharp: public void SelectChild(LevelSelectButton levelSelectButton)
          VB: Public Sub SelectChild(levelSelectButton As LevelSelectButton)
        parameters:
        - id: levelSelectButton
          type: TowerDefense.UI.LevelSelectButton
          description: Selected child
      overload: TowerDefense.UI.MouseScroll.SelectChild*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.MovingCanvas
    commentId: T:TowerDefense.UI.MovingCanvas
    language: CSharp
    name:
      CSharp: MovingCanvas
      VB: MovingCanvas
    nameWithType:
      CSharp: MovingCanvas
      VB: MovingCanvas
    qualifiedName:
      CSharp: TowerDefense.UI.MovingCanvas
      VB: TowerDefense.UI.MovingCanvas
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: MovingCanvas
      path: ''
      startLine: 8062
    summary: "\nA class for controlling conditional motion of the canvas\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MovingCanvas : MonoBehaviour'
        VB: >-
          Public Class MovingCanvas

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.MovingCanvas.content
      commentId: F:TowerDefense.UI.MovingCanvas.content
      language: CSharp
      name:
        CSharp: content
        VB: content
      nameWithType:
        CSharp: MovingCanvas.content
        VB: MovingCanvas.content
      qualifiedName:
        CSharp: TowerDefense.UI.MovingCanvas.content
        VB: TowerDefense.UI.MovingCanvas.content
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: content
        path: ''
        startLine: 8068
      summary: "\nThe RectTransform used to check against the screen bounds\n"
      example: []
      syntax:
        content:
          CSharp: public RectTransform content
          VB: Public content As RectTransform
        return:
          type: RectTransform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.MovingCanvas.offset
      commentId: F:TowerDefense.UI.MovingCanvas.offset
      language: CSharp
      name:
        CSharp: offset
        VB: offset
      nameWithType:
        CSharp: MovingCanvas.offset
        VB: MovingCanvas.offset
      qualifiedName:
        CSharp: TowerDefense.UI.MovingCanvas.offset
        VB: TowerDefense.UI.MovingCanvas.offset
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: offset
        path: ''
        startLine: 8073
      summary: "\nTo offset the position the canvas is placed at\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 offset
          VB: Public offset As Vector2
        return:
          type: Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.MovingCanvas.canvasEnabled
      commentId: P:TowerDefense.UI.MovingCanvas.canvasEnabled
      language: CSharp
      name:
        CSharp: canvasEnabled
        VB: canvasEnabled
      nameWithType:
        CSharp: MovingCanvas.canvasEnabled
        VB: MovingCanvas.canvasEnabled
      qualifiedName:
        CSharp: TowerDefense.UI.MovingCanvas.canvasEnabled
        VB: TowerDefense.UI.MovingCanvas.canvasEnabled
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: canvasEnabled
        path: ''
        startLine: 8083
      summary: "\nProperty for disabling and enabling the attached canvas\n"
      example: []
      syntax:
        content:
          CSharp: public bool canvasEnabled { get; set; }
          VB: Public Property canvasEnabled As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.UI.MovingCanvas.canvasEnabled*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: TowerDefense.UI.MovingCanvas.TryMove(Vector3)
      commentId: M:TowerDefense.UI.MovingCanvas.TryMove(Vector3)
      language: CSharp
      name:
        CSharp: TryMove(Vector3)
        VB: TryMove(Vector3)
      nameWithType:
        CSharp: MovingCanvas.TryMove(Vector3)
        VB: MovingCanvas.TryMove(Vector3)
      qualifiedName:
        CSharp: TowerDefense.UI.MovingCanvas.TryMove(Vector3)
        VB: TowerDefense.UI.MovingCanvas.TryMove(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: TryMove
        path: ''
        startLine: 8109
      summary: "\nTry to move the canvas based on <xref href=\"TowerDefense.UI.MovingCanvas.content\" data-throw-if-not-resolved=\"false\"></xref>&apos;s rect\n"
      example: []
      syntax:
        content:
          CSharp: public void TryMove(Vector3 position)
          VB: Public Sub TryMove(position As Vector3)
        parameters:
        - id: position
          type: Vector3
          description: "\nThe position to move to\n"
      overload: TowerDefense.UI.MovingCanvas.TryMove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.MovingCanvas.content: 
    - id: TowerDefense.UI.MovingCanvas.Awake
      commentId: M:TowerDefense.UI.MovingCanvas.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: MovingCanvas.Awake()
        VB: MovingCanvas.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.MovingCanvas.Awake()
        VB: TowerDefense.UI.MovingCanvas.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Awake
        path: ''
        startLine: 8137
      summary: "\nCache the attached canvas\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.UI.MovingCanvas.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.UI.OptionsMenu
    commentId: T:TowerDefense.UI.OptionsMenu
    language: CSharp
    name:
      CSharp: OptionsMenu
      VB: OptionsMenu
    nameWithType:
      CSharp: OptionsMenu
      VB: OptionsMenu
    qualifiedName:
      CSharp: TowerDefense.UI.OptionsMenu
      VB: TowerDefense.UI.OptionsMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: OptionsMenu
      path: ''
      startLine: 8152
    summary: "\nSimple options menu for setting volumes \n"
    example: []
    syntax:
      content:
        CSharp: 'public class OptionsMenu : SimpleMainMenuPage'
        VB: >-
          Public Class OptionsMenu

              Inherits SimpleMainMenuPage
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.OptionsMenu.masterSlider
      commentId: F:TowerDefense.UI.OptionsMenu.masterSlider
      language: CSharp
      name:
        CSharp: masterSlider
        VB: masterSlider
      nameWithType:
        CSharp: OptionsMenu.masterSlider
        VB: OptionsMenu.masterSlider
      qualifiedName:
        CSharp: TowerDefense.UI.OptionsMenu.masterSlider
        VB: TowerDefense.UI.OptionsMenu.masterSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: masterSlider
        path: ''
        startLine: 8154
      syntax:
        content:
          CSharp: public Slider masterSlider
          VB: Public masterSlider As Slider
        return:
          type: Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.OptionsMenu.sfxSlider
      commentId: F:TowerDefense.UI.OptionsMenu.sfxSlider
      language: CSharp
      name:
        CSharp: sfxSlider
        VB: sfxSlider
      nameWithType:
        CSharp: OptionsMenu.sfxSlider
        VB: OptionsMenu.sfxSlider
      qualifiedName:
        CSharp: TowerDefense.UI.OptionsMenu.sfxSlider
        VB: TowerDefense.UI.OptionsMenu.sfxSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: sfxSlider
        path: ''
        startLine: 8156
      syntax:
        content:
          CSharp: public Slider sfxSlider
          VB: Public sfxSlider As Slider
        return:
          type: Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.OptionsMenu.musicSlider
      commentId: F:TowerDefense.UI.OptionsMenu.musicSlider
      language: CSharp
      name:
        CSharp: musicSlider
        VB: musicSlider
      nameWithType:
        CSharp: OptionsMenu.musicSlider
        VB: OptionsMenu.musicSlider
      qualifiedName:
        CSharp: TowerDefense.UI.OptionsMenu.musicSlider
        VB: TowerDefense.UI.OptionsMenu.musicSlider
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: musicSlider
        path: ''
        startLine: 8158
      syntax:
        content:
          CSharp: public Slider musicSlider
          VB: Public musicSlider As Slider
        return:
          type: Slider
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.OptionsMenu.UpdateVolumes
      commentId: M:TowerDefense.UI.OptionsMenu.UpdateVolumes
      language: CSharp
      name:
        CSharp: UpdateVolumes()
        VB: UpdateVolumes()
      nameWithType:
        CSharp: OptionsMenu.UpdateVolumes()
        VB: OptionsMenu.UpdateVolumes()
      qualifiedName:
        CSharp: TowerDefense.UI.OptionsMenu.UpdateVolumes()
        VB: TowerDefense.UI.OptionsMenu.UpdateVolumes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: UpdateVolumes
        path: ''
        startLine: 8163
      summary: "\nEvent fired when sliders change\n"
      example: []
      syntax:
        content:
          CSharp: public void UpdateVolumes()
          VB: Public Sub UpdateVolumes
      overload: TowerDefense.UI.OptionsMenu.UpdateVolumes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.OptionsMenu.Show
      commentId: M:TowerDefense.UI.OptionsMenu.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: OptionsMenu.Show()
        VB: OptionsMenu.Show()
      qualifiedName:
        CSharp: TowerDefense.UI.OptionsMenu.Show()
        VB: TowerDefense.UI.OptionsMenu.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Show
        path: ''
        startLine: 8177
      summary: "\nSet initial slider values\n"
      example: []
      syntax:
        content:
          CSharp: public override void Show()
          VB: Public Overrides Sub Show
      overload: TowerDefense.UI.OptionsMenu.Show*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: TowerDefense.UI.OptionsMenu.Hide
      commentId: M:TowerDefense.UI.OptionsMenu.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: OptionsMenu.Hide()
        VB: OptionsMenu.Hide()
      qualifiedName:
        CSharp: TowerDefense.UI.OptionsMenu.Hide()
        VB: TowerDefense.UI.OptionsMenu.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Hide
        path: ''
        startLine: 8204
      summary: "\nPersist volumes to data store\n"
      example: []
      syntax:
        content:
          CSharp: public override void Hide()
          VB: Public Overrides Sub Hide
      overload: TowerDefense.UI.OptionsMenu.Hide*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: TowerDefense.UI.PauseMenu
    commentId: T:TowerDefense.UI.PauseMenu
    language: CSharp
    name:
      CSharp: PauseMenu
      VB: PauseMenu
    nameWithType:
      CSharp: PauseMenu
      VB: PauseMenu
    qualifiedName:
      CSharp: TowerDefense.UI.PauseMenu
      VB: TowerDefense.UI.PauseMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: PauseMenu
      path: ''
      startLine: 8240
    summary: "\nIn-game pause menu\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PauseMenu : MonoBehaviour'
        VB: >-
          Public Class PauseMenu

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.PauseMenu.pauseMenuCanvas
      commentId: F:TowerDefense.UI.PauseMenu.pauseMenuCanvas
      language: CSharp
      name:
        CSharp: pauseMenuCanvas
        VB: pauseMenuCanvas
      nameWithType:
        CSharp: PauseMenu.pauseMenuCanvas
        VB: PauseMenu.pauseMenuCanvas
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.pauseMenuCanvas
        VB: TowerDefense.UI.PauseMenu.pauseMenuCanvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: pauseMenuCanvas
        path: ''
        startLine: 8256
      summary: "\nThe CanvasGroup that holds the pause menu UI\n"
      example: []
      syntax:
        content:
          CSharp: public Canvas pauseMenuCanvas
          VB: Public pauseMenuCanvas As Canvas
        return:
          type: Canvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.titleText
      commentId: F:TowerDefense.UI.PauseMenu.titleText
      language: CSharp
      name:
        CSharp: titleText
        VB: titleText
      nameWithType:
        CSharp: PauseMenu.titleText
        VB: PauseMenu.titleText
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.titleText
        VB: TowerDefense.UI.PauseMenu.titleText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: titleText
        path: ''
        startLine: 8258
      syntax:
        content:
          CSharp: public Text titleText
          VB: Public titleText As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.descriptionText
      commentId: F:TowerDefense.UI.PauseMenu.descriptionText
      language: CSharp
      name:
        CSharp: descriptionText
        VB: descriptionText
      nameWithType:
        CSharp: PauseMenu.descriptionText
        VB: PauseMenu.descriptionText
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.descriptionText
        VB: TowerDefense.UI.PauseMenu.descriptionText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: descriptionText
        path: ''
        startLine: 8260
      syntax:
        content:
          CSharp: public Text descriptionText
          VB: Public descriptionText As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.levelSelectConfirmButton
      commentId: F:TowerDefense.UI.PauseMenu.levelSelectConfirmButton
      language: CSharp
      name:
        CSharp: levelSelectConfirmButton
        VB: levelSelectConfirmButton
      nameWithType:
        CSharp: PauseMenu.levelSelectConfirmButton
        VB: PauseMenu.levelSelectConfirmButton
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.levelSelectConfirmButton
        VB: TowerDefense.UI.PauseMenu.levelSelectConfirmButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: levelSelectConfirmButton
        path: ''
        startLine: 8265
      summary: "\nThe buttons present in the pause menu\n"
      example: []
      syntax:
        content:
          CSharp: public Button levelSelectConfirmButton
          VB: Public levelSelectConfirmButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.restartConfirmButton
      commentId: F:TowerDefense.UI.PauseMenu.restartConfirmButton
      language: CSharp
      name:
        CSharp: restartConfirmButton
        VB: restartConfirmButton
      nameWithType:
        CSharp: PauseMenu.restartConfirmButton
        VB: PauseMenu.restartConfirmButton
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.restartConfirmButton
        VB: TowerDefense.UI.PauseMenu.restartConfirmButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: restartConfirmButton
        path: ''
        startLine: 8267
      syntax:
        content:
          CSharp: public Button restartConfirmButton
          VB: Public restartConfirmButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.levelSelectButton
      commentId: F:TowerDefense.UI.PauseMenu.levelSelectButton
      language: CSharp
      name:
        CSharp: levelSelectButton
        VB: levelSelectButton
      nameWithType:
        CSharp: PauseMenu.levelSelectButton
        VB: PauseMenu.levelSelectButton
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.levelSelectButton
        VB: TowerDefense.UI.PauseMenu.levelSelectButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: levelSelectButton
        path: ''
        startLine: 8269
      syntax:
        content:
          CSharp: public Button levelSelectButton
          VB: Public levelSelectButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.restartButton
      commentId: F:TowerDefense.UI.PauseMenu.restartButton
      language: CSharp
      name:
        CSharp: restartButton
        VB: restartButton
      nameWithType:
        CSharp: PauseMenu.restartButton
        VB: PauseMenu.restartButton
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.restartButton
        VB: TowerDefense.UI.PauseMenu.restartButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: restartButton
        path: ''
        startLine: 8271
      syntax:
        content:
          CSharp: public Button restartButton
          VB: Public restartButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.topPanel
      commentId: F:TowerDefense.UI.PauseMenu.topPanel
      language: CSharp
      name:
        CSharp: topPanel
        VB: topPanel
      nameWithType:
        CSharp: PauseMenu.topPanel
        VB: PauseMenu.topPanel
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.topPanel
        VB: TowerDefense.UI.PauseMenu.topPanel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: topPanel
        path: ''
        startLine: 8273
      syntax:
        content:
          CSharp: public Image topPanel
          VB: Public topPanel As Image
        return:
          type: Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.topPanelDisabledColor
      commentId: F:TowerDefense.UI.PauseMenu.topPanelDisabledColor
      language: CSharp
      name:
        CSharp: topPanelDisabledColor
        VB: topPanelDisabledColor
      nameWithType:
        CSharp: PauseMenu.topPanelDisabledColor
        VB: PauseMenu.topPanelDisabledColor
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.topPanelDisabledColor
        VB: TowerDefense.UI.PauseMenu.topPanelDisabledColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: topPanelDisabledColor
        path: ''
        startLine: 8278
      summary: "\nColor to change the top panel to highlight confirmation button\n"
      example: []
      syntax:
        content:
          CSharp: public Color topPanelDisabledColor
          VB: Public topPanelDisabledColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.m_State
      commentId: F:TowerDefense.UI.PauseMenu.m_State
      language: CSharp
      name:
        CSharp: m_State
        VB: m_State
      nameWithType:
        CSharp: PauseMenu.m_State
        VB: PauseMenu.m_State
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.m_State
        VB: TowerDefense.UI.PauseMenu.m_State
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: m_State
        path: ''
        startLine: 8283
      summary: "\nState of pause menu\n"
      example: []
      syntax:
        content:
          CSharp: protected PauseMenu.State m_State
          VB: Protected m_State As PauseMenu.State
        return:
          type: TowerDefense.UI.PauseMenu.State
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.PauseMenu.OpenPauseMenu
      commentId: M:TowerDefense.UI.PauseMenu.OpenPauseMenu
      language: CSharp
      name:
        CSharp: OpenPauseMenu()
        VB: OpenPauseMenu()
      nameWithType:
        CSharp: PauseMenu.OpenPauseMenu()
        VB: PauseMenu.OpenPauseMenu()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.OpenPauseMenu()
        VB: TowerDefense.UI.PauseMenu.OpenPauseMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OpenPauseMenu
        path: ''
        startLine: 8293
      summary: "\nOpen the pause menu\n"
      example: []
      syntax:
        content:
          CSharp: public void OpenPauseMenu()
          VB: Public Sub OpenPauseMenu
      overload: TowerDefense.UI.PauseMenu.OpenPauseMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.OnGameUIStateChanged(GameUIState,GameUIState)
      commentId: M:TowerDefense.UI.PauseMenu.OnGameUIStateChanged(GameUIState,GameUIState)
      language: CSharp
      name:
        CSharp: OnGameUIStateChanged(GameUIState, GameUIState)
        VB: OnGameUIStateChanged(GameUIState, GameUIState)
      nameWithType:
        CSharp: PauseMenu.OnGameUIStateChanged(GameUIState, GameUIState)
        VB: PauseMenu.OnGameUIStateChanged(GameUIState, GameUIState)
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.OnGameUIStateChanged(GameUIState, GameUIState)
        VB: TowerDefense.UI.PauseMenu.OnGameUIStateChanged(GameUIState, GameUIState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OnGameUIStateChanged
        path: ''
        startLine: 8319
      summary: "\nFired when GameUI&apos;s State changes\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnGameUIStateChanged(GameUIState oldState, GameUIState newState)
          VB: Protected Sub OnGameUIStateChanged(oldState As GameUIState, newState As GameUIState)
        parameters:
        - id: oldState
          type: GameUIState
          description: The State that GameUI is leaving
        - id: newState
          type: GameUIState
          description: The State that GameUI is entering
      overload: TowerDefense.UI.PauseMenu.OnGameUIStateChanged*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.PauseMenu.LevelSelectPressed
      commentId: M:TowerDefense.UI.PauseMenu.LevelSelectPressed
      language: CSharp
      name:
        CSharp: LevelSelectPressed()
        VB: LevelSelectPressed()
      nameWithType:
        CSharp: PauseMenu.LevelSelectPressed()
        VB: PauseMenu.LevelSelectPressed()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.LevelSelectPressed()
        VB: TowerDefense.UI.PauseMenu.LevelSelectPressed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: LevelSelectPressed
        path: ''
        startLine: 8335
      summary: "\nLevel select button pressed, display/hide confirmation button\n"
      example: []
      syntax:
        content:
          CSharp: public void LevelSelectPressed()
          VB: Public Sub LevelSelectPressed
      overload: TowerDefense.UI.PauseMenu.LevelSelectPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.RestartPressed
      commentId: M:TowerDefense.UI.PauseMenu.RestartPressed
      language: CSharp
      name:
        CSharp: RestartPressed()
        VB: RestartPressed()
      nameWithType:
        CSharp: PauseMenu.RestartPressed()
        VB: PauseMenu.RestartPressed()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.RestartPressed()
        VB: TowerDefense.UI.PauseMenu.RestartPressed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: RestartPressed
        path: ''
        startLine: 8347
      summary: "\nRestart button pressed, display/hide confirmation button\n"
      example: []
      syntax:
        content:
          CSharp: public void RestartPressed()
          VB: Public Sub RestartPressed
      overload: TowerDefense.UI.PauseMenu.RestartPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.ClosePauseMenu
      commentId: M:TowerDefense.UI.PauseMenu.ClosePauseMenu
      language: CSharp
      name:
        CSharp: ClosePauseMenu()
        VB: ClosePauseMenu()
      nameWithType:
        CSharp: PauseMenu.ClosePauseMenu()
        VB: PauseMenu.ClosePauseMenu()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.ClosePauseMenu()
        VB: TowerDefense.UI.PauseMenu.ClosePauseMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: ClosePauseMenu
        path: ''
        startLine: 8359
      summary: "\nClose the pause menu\n"
      example: []
      syntax:
        content:
          CSharp: public void ClosePauseMenu()
          VB: Public Sub ClosePauseMenu
      overload: TowerDefense.UI.PauseMenu.ClosePauseMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.Awake
      commentId: M:TowerDefense.UI.PauseMenu.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PauseMenu.Awake()
        VB: PauseMenu.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.Awake()
        VB: TowerDefense.UI.PauseMenu.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Awake
        path: ''
        startLine: 8375
      summary: "\nHide the pause menu on awake\n"
      example: []
      syntax:
        content:
          CSharp: protected void Awake()
          VB: Protected Sub Awake
      overload: TowerDefense.UI.PauseMenu.Awake*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.PauseMenu.Start
      commentId: M:TowerDefense.UI.PauseMenu.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PauseMenu.Start()
        VB: PauseMenu.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.Start()
        VB: TowerDefense.UI.PauseMenu.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Start
        path: ''
        startLine: 8384
      summary: "\nSubscribe to GameUI&apos;s stateChanged event\n"
      example: []
      syntax:
        content:
          CSharp: protected void Start()
          VB: Protected Sub Start
      overload: TowerDefense.UI.PauseMenu.Start*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.PauseMenu.Update
      commentId: M:TowerDefense.UI.PauseMenu.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: PauseMenu.Update()
        VB: PauseMenu.Update()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.Update()
        VB: TowerDefense.UI.PauseMenu.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Update
        path: ''
        startLine: 8395
      summary: "\nUnpause the game if the game is paused and the Escape key is pressed\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.UI.PauseMenu.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas(System.Boolean)
      commentId: M:TowerDefense.UI.PauseMenu.SetPauseMenuCanvas(System.Boolean)
      language: CSharp
      name:
        CSharp: SetPauseMenuCanvas(Boolean)
        VB: SetPauseMenuCanvas(Boolean)
      nameWithType:
        CSharp: PauseMenu.SetPauseMenuCanvas(Boolean)
        VB: PauseMenu.SetPauseMenuCanvas(Boolean)
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas(System.Boolean)
        VB: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: SetPauseMenuCanvas
        path: ''
        startLine: 8412
      summary: "\nShow/Hide the pause menu canvas group\n"
      example: []
      syntax:
        content:
          CSharp: protected void SetPauseMenuCanvas(bool enable)
          VB: Protected Sub SetPauseMenuCanvas(enable As Boolean)
        parameters:
        - id: enable
          type: System.Boolean
      overload: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.PauseMenu.Pause
      commentId: M:TowerDefense.UI.PauseMenu.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: PauseMenu.Pause()
        VB: PauseMenu.Pause()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.Pause()
        VB: TowerDefense.UI.PauseMenu.Pause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Pause
        path: ''
        startLine: 8417
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: TowerDefense.UI.PauseMenu.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.PauseMenu.Unpause
      commentId: M:TowerDefense.UI.PauseMenu.Unpause
      language: CSharp
      name:
        CSharp: Unpause()
        VB: Unpause()
      nameWithType:
        CSharp: PauseMenu.Unpause()
        VB: PauseMenu.Unpause()
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.Unpause()
        VB: TowerDefense.UI.PauseMenu.Unpause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Unpause
        path: ''
        startLine: 8425
      syntax:
        content:
          CSharp: public void Unpause()
          VB: Public Sub Unpause
      overload: TowerDefense.UI.PauseMenu.Unpause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.PauseMenu.State
    commentId: T:TowerDefense.UI.PauseMenu.State
    language: CSharp
    name:
      CSharp: PauseMenu.State
      VB: PauseMenu.State
    nameWithType:
      CSharp: PauseMenu.State
      VB: PauseMenu.State
    qualifiedName:
      CSharp: TowerDefense.UI.PauseMenu.State
      VB: TowerDefense.UI.PauseMenu.State
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: State
      path: ''
      startLine: 8245
    summary: "\nEnum to represent state of pause menu\n"
    example: []
    syntax:
      content:
        CSharp: protected enum State
        VB: Protected Enum State
    modifiers:
      CSharp:
      - protected
      - enum
      VB:
      - Protected
      - Enum
    items:
    - id: TowerDefense.UI.PauseMenu.State.Open
      commentId: F:TowerDefense.UI.PauseMenu.State.Open
      language: CSharp
      name:
        CSharp: Open
        VB: Open
      nameWithType:
        CSharp: PauseMenu.State.Open
        VB: PauseMenu.State.Open
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.State.Open
        VB: TowerDefense.UI.PauseMenu.State.Open
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Open
        path: ''
        startLine: 8247
      syntax:
        content:
          CSharp: Open = 0
          VB: Open = 0
        return:
          type: TowerDefense.UI.PauseMenu.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.PauseMenu.State.LevelSelectPressed
      commentId: F:TowerDefense.UI.PauseMenu.State.LevelSelectPressed
      language: CSharp
      name:
        CSharp: LevelSelectPressed
        VB: LevelSelectPressed
      nameWithType:
        CSharp: PauseMenu.State.LevelSelectPressed
        VB: PauseMenu.State.LevelSelectPressed
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.State.LevelSelectPressed
        VB: TowerDefense.UI.PauseMenu.State.LevelSelectPressed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: LevelSelectPressed
        path: ''
        startLine: 8248
      syntax:
        content:
          CSharp: LevelSelectPressed = 1
          VB: LevelSelectPressed = 1
        return:
          type: TowerDefense.UI.PauseMenu.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.PauseMenu.State.RestartPressed
      commentId: F:TowerDefense.UI.PauseMenu.State.RestartPressed
      language: CSharp
      name:
        CSharp: RestartPressed
        VB: RestartPressed
      nameWithType:
        CSharp: PauseMenu.State.RestartPressed
        VB: PauseMenu.State.RestartPressed
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.State.RestartPressed
        VB: TowerDefense.UI.PauseMenu.State.RestartPressed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: RestartPressed
        path: ''
        startLine: 8249
      syntax:
        content:
          CSharp: RestartPressed = 2
          VB: RestartPressed = 2
        return:
          type: TowerDefense.UI.PauseMenu.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.PauseMenu.State.Closed
      commentId: F:TowerDefense.UI.PauseMenu.State.Closed
      language: CSharp
      name:
        CSharp: Closed
        VB: Closed
      nameWithType:
        CSharp: PauseMenu.State.Closed
        VB: PauseMenu.State.Closed
      qualifiedName:
        CSharp: TowerDefense.UI.PauseMenu.State.Closed
        VB: TowerDefense.UI.PauseMenu.State.Closed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Closed
        path: ''
        startLine: 8250
      syntax:
        content:
          CSharp: Closed = 3
          VB: Closed = 3
        return:
          type: TowerDefense.UI.PauseMenu.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.UI.PlayAnimation
    commentId: T:TowerDefense.UI.PlayAnimation
    language: CSharp
    name:
      CSharp: PlayAnimation
      VB: PlayAnimation
    nameWithType:
      CSharp: PlayAnimation
      VB: PlayAnimation
    qualifiedName:
      CSharp: TowerDefense.UI.PlayAnimation
      VB: TowerDefense.UI.PlayAnimation
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: PlayAnimation
      path: ''
      startLine: 8441
    summary: "\nA simple component that plays an animation\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayAnimation : MonoBehaviour'
        VB: >-
          Public Class PlayAnimation

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.PlayAnimation.Play(System.String)
      commentId: M:TowerDefense.UI.PlayAnimation.Play(System.String)
      language: CSharp
      name:
        CSharp: Play(String)
        VB: Play(String)
      nameWithType:
        CSharp: PlayAnimation.Play(String)
        VB: PlayAnimation.Play(String)
      qualifiedName:
        CSharp: TowerDefense.UI.PlayAnimation.Play(System.String)
        VB: TowerDefense.UI.PlayAnimation.Play(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Play
        path: ''
        startLine: 8446
      syntax:
        content:
          CSharp: public void Play(string animationName)
          VB: Public Sub Play(animationName As String)
        parameters:
        - id: animationName
          type: System.String
      overload: TowerDefense.UI.PlayAnimation.Play*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.RadiusVisualizerController
    commentId: T:TowerDefense.UI.RadiusVisualizerController
    language: CSharp
    name:
      CSharp: RadiusVisualizerController
      VB: RadiusVisualizerController
    nameWithType:
      CSharp: RadiusVisualizerController
      VB: RadiusVisualizerController
    qualifiedName:
      CSharp: TowerDefense.UI.RadiusVisualizerController
      VB: TowerDefense.UI.RadiusVisualizerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: RadiusVisualizerController
      path: ''
      startLine: 8465
    syntax:
      content:
        CSharp: 'public class RadiusVisualizerController : MonoBehaviour'
        VB: >-
          Public Class RadiusVisualizerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.RadiusVisualizerController.radiusVisualizerPrefab
      commentId: F:TowerDefense.UI.RadiusVisualizerController.radiusVisualizerPrefab
      language: CSharp
      name:
        CSharp: radiusVisualizerPrefab
        VB: radiusVisualizerPrefab
      nameWithType:
        CSharp: RadiusVisualizerController.radiusVisualizerPrefab
        VB: RadiusVisualizerController.radiusVisualizerPrefab
      qualifiedName:
        CSharp: TowerDefense.UI.RadiusVisualizerController.radiusVisualizerPrefab
        VB: TowerDefense.UI.RadiusVisualizerController.radiusVisualizerPrefab
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: radiusVisualizerPrefab
        path: ''
        startLine: 8470
      summary: "\nPrefab used to visualize effect radius of tower\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject radiusVisualizerPrefab
          VB: Public radiusVisualizerPrefab As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.RadiusVisualizerController.radiusVisualizerHeight
      commentId: F:TowerDefense.UI.RadiusVisualizerController.radiusVisualizerHeight
      language: CSharp
      name:
        CSharp: radiusVisualizerHeight
        VB: radiusVisualizerHeight
      nameWithType:
        CSharp: RadiusVisualizerController.radiusVisualizerHeight
        VB: RadiusVisualizerController.radiusVisualizerHeight
      qualifiedName:
        CSharp: TowerDefense.UI.RadiusVisualizerController.radiusVisualizerHeight
        VB: TowerDefense.UI.RadiusVisualizerController.radiusVisualizerHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: radiusVisualizerHeight
        path: ''
        startLine: 8472
      syntax:
        content:
          CSharp: public float radiusVisualizerHeight
          VB: Public radiusVisualizerHeight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.RadiusVisualizerController.localEuler
      commentId: F:TowerDefense.UI.RadiusVisualizerController.localEuler
      language: CSharp
      name:
        CSharp: localEuler
        VB: localEuler
      nameWithType:
        CSharp: RadiusVisualizerController.localEuler
        VB: RadiusVisualizerController.localEuler
      qualifiedName:
        CSharp: TowerDefense.UI.RadiusVisualizerController.localEuler
        VB: TowerDefense.UI.RadiusVisualizerController.localEuler
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: localEuler
        path: ''
        startLine: 8477
      summary: "\nThe local euler angles\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 localEuler
          VB: Public localEuler As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers(Tower,Transform)
      commentId: M:TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers(Tower,Transform)
      language: CSharp
      name:
        CSharp: SetupRadiusVisualizers(Tower, Transform)
        VB: SetupRadiusVisualizers(Tower, Transform)
      nameWithType:
        CSharp: RadiusVisualizerController.SetupRadiusVisualizers(Tower, Transform)
        VB: RadiusVisualizerController.SetupRadiusVisualizers(Tower, Transform)
      qualifiedName:
        CSharp: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers(Tower, Transform)
        VB: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers(Tower, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: SetupRadiusVisualizers
        path: ''
        startLine: 8488
      summary: "\nSets up the radius visualizer for a tower or ghost tower\n"
      example: []
      syntax:
        content:
          CSharp: public void SetupRadiusVisualizers(Tower tower, Transform ghost = null)
          VB: Public Sub SetupRadiusVisualizers(tower As Tower, ghost As Transform = Nothing)
        parameters:
        - id: tower
          type: Tower
          description: "\nThe tower to get the data from\n"
        - id: ghost
          type: Transform
          description: Transform of ghost to parent the visualiser to.
      overload: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers
      commentId: M:TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers
      language: CSharp
      name:
        CSharp: HideRadiusVisualizers()
        VB: HideRadiusVisualizers()
      nameWithType:
        CSharp: RadiusVisualizerController.HideRadiusVisualizers()
        VB: RadiusVisualizerController.HideRadiusVisualizers()
      qualifiedName:
        CSharp: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers()
        VB: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: HideRadiusVisualizers
        path: ''
        startLine: 8522
      summary: "\nHides the radius visualizers\n"
      example: []
      syntax:
        content:
          CSharp: public void HideRadiusVisualizers()
          VB: Public Sub HideRadiusVisualizers
      overload: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.Rotator
    commentId: T:TowerDefense.UI.Rotator
    language: CSharp
    name:
      CSharp: Rotator
      VB: Rotator
    nameWithType:
      CSharp: Rotator
      VB: Rotator
    qualifiedName:
      CSharp: TowerDefense.UI.Rotator
      VB: TowerDefense.UI.Rotator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: Rotator
      path: ''
      startLine: 8539
    summary: "\nA simple component that applies a constant rotation to a transform\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Rotator : MonoBehaviour'
        VB: >-
          Public Class Rotator

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.Rotator.rotationSpeed
      commentId: F:TowerDefense.UI.Rotator.rotationSpeed
      language: CSharp
      name:
        CSharp: rotationSpeed
        VB: rotationSpeed
      nameWithType:
        CSharp: Rotator.rotationSpeed
        VB: Rotator.rotationSpeed
      qualifiedName:
        CSharp: TowerDefense.UI.Rotator.rotationSpeed
        VB: TowerDefense.UI.Rotator.rotationSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: rotationSpeed
        path: ''
        startLine: 8541
      syntax:
        content:
          CSharp: public Vector3 rotationSpeed
          VB: Public rotationSpeed As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.SceneLoader
    commentId: T:TowerDefense.UI.SceneLoader
    language: CSharp
    name:
      CSharp: SceneLoader
      VB: SceneLoader
    nameWithType:
      CSharp: SceneLoader
      VB: SceneLoader
    qualifiedName:
      CSharp: TowerDefense.UI.SceneLoader
      VB: TowerDefense.UI.SceneLoader
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: SceneLoader
      path: ''
      startLine: 8558
    summary: "\nSimple component to load scenes by name\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SceneLoader : MonoBehaviour'
        VB: >-
          Public Class SceneLoader

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.SceneLoader.sceneToLoadName
      commentId: F:TowerDefense.UI.SceneLoader.sceneToLoadName
      language: CSharp
      name:
        CSharp: sceneToLoadName
        VB: sceneToLoadName
      nameWithType:
        CSharp: SceneLoader.sceneToLoadName
        VB: SceneLoader.sceneToLoadName
      qualifiedName:
        CSharp: TowerDefense.UI.SceneLoader.sceneToLoadName
        VB: TowerDefense.UI.SceneLoader.sceneToLoadName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: sceneToLoadName
        path: ''
        startLine: 8563
      summary: "\nName of the scene to load\n"
      example: []
      syntax:
        content:
          CSharp: public string sceneToLoadName
          VB: Public sceneToLoadName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.SceneLoader.LoadScene
      commentId: M:TowerDefense.UI.SceneLoader.LoadScene
      language: CSharp
      name:
        CSharp: LoadScene()
        VB: LoadScene()
      nameWithType:
        CSharp: SceneLoader.LoadScene()
        VB: SceneLoader.LoadScene()
      qualifiedName:
        CSharp: TowerDefense.UI.SceneLoader.LoadScene()
        VB: TowerDefense.UI.SceneLoader.LoadScene()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: LoadScene
        path: ''
        startLine: 8569
      summary: "\nLoads the scene from <xref href=\"TowerDefense.UI.SceneLoader.sceneToLoadName\" data-throw-if-not-resolved=\"false\"></xref>\nif a scene with that name exists\n"
      example: []
      syntax:
        content:
          CSharp: public void LoadScene()
          VB: Public Sub LoadScene
      overload: TowerDefense.UI.SceneLoader.LoadScene*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.SceneLoader.sceneToLoadName: 
    - id: TowerDefense.UI.SceneLoader.RestartCurrentScene
      commentId: M:TowerDefense.UI.SceneLoader.RestartCurrentScene
      language: CSharp
      name:
        CSharp: RestartCurrentScene()
        VB: RestartCurrentScene()
      nameWithType:
        CSharp: SceneLoader.RestartCurrentScene()
        VB: SceneLoader.RestartCurrentScene()
      qualifiedName:
        CSharp: TowerDefense.UI.SceneLoader.RestartCurrentScene()
        VB: TowerDefense.UI.SceneLoader.RestartCurrentScene()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: RestartCurrentScene
        path: ''
        startLine: 8577
      summary: "\nRestarts the current scene\n"
      example: []
      syntax:
        content:
          CSharp: public void RestartCurrentScene()
          VB: Public Sub RestartCurrentScene
      overload: TowerDefense.UI.SceneLoader.RestartCurrentScene*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.ScorePanel
    commentId: T:TowerDefense.UI.ScorePanel
    language: CSharp
    name:
      CSharp: ScorePanel
      VB: ScorePanel
    nameWithType:
      CSharp: ScorePanel
      VB: ScorePanel
    qualifiedName:
      CSharp: TowerDefense.UI.ScorePanel
      VB: TowerDefense.UI.ScorePanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: ScorePanel
      path: ''
      startLine: 8592
    summary: "\nUI object to display final score\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ScorePanel : MonoBehaviour'
        VB: >-
          Public Class ScorePanel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.ScorePanel.starImages
      commentId: F:TowerDefense.UI.ScorePanel.starImages
      language: CSharp
      name:
        CSharp: starImages
        VB: starImages
      nameWithType:
        CSharp: ScorePanel.starImages
        VB: ScorePanel.starImages
      qualifiedName:
        CSharp: TowerDefense.UI.ScorePanel.starImages
        VB: TowerDefense.UI.ScorePanel.starImages
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: starImages
        path: ''
        startLine: 8597
      summary: "\nObjects that represent the stars\n"
      example: []
      syntax:
        content:
          CSharp: public Image[] starImages
          VB: Public starImages As Image()
        return:
          type: Image[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.ScorePanel.achievedStarSprite
      commentId: F:TowerDefense.UI.ScorePanel.achievedStarSprite
      language: CSharp
      name:
        CSharp: achievedStarSprite
        VB: achievedStarSprite
      nameWithType:
        CSharp: ScorePanel.achievedStarSprite
        VB: ScorePanel.achievedStarSprite
      qualifiedName:
        CSharp: TowerDefense.UI.ScorePanel.achievedStarSprite
        VB: TowerDefense.UI.ScorePanel.achievedStarSprite
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: achievedStarSprite
        path: ''
        startLine: 8599
      syntax:
        content:
          CSharp: public Sprite achievedStarSprite
          VB: Public achievedStarSprite As Sprite
        return:
          type: Sprite
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.ScorePanel.SetStars(System.Int32)
      commentId: M:TowerDefense.UI.ScorePanel.SetStars(System.Int32)
      language: CSharp
      name:
        CSharp: SetStars(Int32)
        VB: SetStars(Int32)
      nameWithType:
        CSharp: ScorePanel.SetStars(Int32)
        VB: ScorePanel.SetStars(Int32)
      qualifiedName:
        CSharp: TowerDefense.UI.ScorePanel.SetStars(System.Int32)
        VB: TowerDefense.UI.ScorePanel.SetStars(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: SetStars
        path: ''
        startLine: 8605
      summary: "\nShow the correct number of stars for the score\n"
      example: []
      syntax:
        content:
          CSharp: public void SetStars(int score)
          VB: Public Sub SetStars(score As Integer)
        parameters:
        - id: score
          type: System.Int32
          description: The final score
      overload: TowerDefense.UI.ScorePanel.SetStars*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
    commentId: T:TowerDefense.UI.TowerDefenseInputSchemeSwitcher
    language: CSharp
    name:
      CSharp: TowerDefenseInputSchemeSwitcher
      VB: TowerDefenseInputSchemeSwitcher
    nameWithType:
      CSharp: TowerDefenseInputSchemeSwitcher
      VB: TowerDefenseInputSchemeSwitcher
    qualifiedName:
      CSharp: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
      VB: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: TowerDefenseInputSchemeSwitcher
      path: ''
      startLine: 8628
    summary: "\nTD Specific input switcher that also disables controls when the game is paused\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerDefenseInputSchemeSwitcher : InputSchemeSwitcher'
        VB: >-
          Public Class TowerDefenseInputSchemeSwitcher

              Inherits InputSchemeSwitcher
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
      commentId: P:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
      language: CSharp
      name:
        CSharp: isPaused
        VB: isPaused
      nameWithType:
        CSharp: TowerDefenseInputSchemeSwitcher.isPaused
        VB: TowerDefenseInputSchemeSwitcher.isPaused
      qualifiedName:
        CSharp: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
        VB: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: isPaused
        path: ''
        startLine: 8633
      summary: "\nGets whether the game is in a paused state\n"
      example: []
      syntax:
        content:
          CSharp: public bool isPaused { get; }
          VB: Public ReadOnly Property isPaused As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start
      commentId: M:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: TowerDefenseInputSchemeSwitcher.Start()
        VB: TowerDefenseInputSchemeSwitcher.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start()
        VB: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Start
        path: ''
        startLine: 8641
      summary: "\nRegister GameUI&apos;s stateChanged event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update
      commentId: M:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TowerDefenseInputSchemeSwitcher.Update()
        VB: TowerDefenseInputSchemeSwitcher.Update()
      qualifiedName:
        CSharp: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update()
        VB: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: Update
        path: ''
        startLine: 8652
      summary: "\nDo nothing when game is paused\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy
      commentId: M:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: TowerDefenseInputSchemeSwitcher.OnDestroy()
        VB: TowerDefenseInputSchemeSwitcher.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy()
        VB: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OnDestroy
        path: ''
        startLine: 8665
      summary: "\nUnregister from GameUI&apos;s stateChanged event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.UI.UrlOpen
    commentId: T:TowerDefense.UI.UrlOpen
    language: CSharp
    name:
      CSharp: UrlOpen
      VB: UrlOpen
    nameWithType:
      CSharp: UrlOpen
      VB: UrlOpen
    qualifiedName:
      CSharp: TowerDefense.UI.UrlOpen
      VB: TowerDefense.UI.UrlOpen
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI
    source:
      id: UrlOpen
      path: ''
      startLine: 8700
    summary: "\nSimple script to open a URL\n"
    example: []
    syntax:
      content:
        CSharp: 'public class UrlOpen : MonoBehaviour'
        VB: >-
          Public Class UrlOpen

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.UrlOpen.OpenUrl(System.String)
      commentId: M:TowerDefense.UI.UrlOpen.OpenUrl(System.String)
      language: CSharp
      name:
        CSharp: OpenUrl(String)
        VB: OpenUrl(String)
      nameWithType:
        CSharp: UrlOpen.OpenUrl(String)
        VB: UrlOpen.OpenUrl(String)
      qualifiedName:
        CSharp: TowerDefense.UI.UrlOpen.OpenUrl(System.String)
        VB: TowerDefense.UI.UrlOpen.OpenUrl(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI
      source:
        id: OpenUrl
        path: ''
        startLine: 8705
      summary: "\nOpen the given url\n"
      example: []
      syntax:
        content:
          CSharp: public void OpenUrl(string url)
          VB: Public Sub OpenUrl(url As String)
        parameters:
        - id: url
          type: System.String
      overload: TowerDefense.UI.UrlOpen.OpenUrl*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TowerDefense.UI.HUD
  commentId: N:TowerDefense.UI.HUD
  language: CSharp
  name:
    CSharp: TowerDefense.UI.HUD
    VB: TowerDefense.UI.HUD
  nameWithType:
    CSharp: TowerDefense.UI.HUD
    VB: TowerDefense.UI.HUD
  qualifiedName:
    CSharp: TowerDefense.UI.HUD
    VB: TowerDefense.UI.HUD
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TowerDefense.UI.HUD.BuildInfoUI
    commentId: T:TowerDefense.UI.HUD.BuildInfoUI
    language: CSharp
    name:
      CSharp: BuildInfoUI
      VB: BuildInfoUI
    nameWithType:
      CSharp: BuildInfoUI
      VB: BuildInfoUI
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.BuildInfoUI
      VB: TowerDefense.UI.HUD.BuildInfoUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: BuildInfoUI
      path: ''
      startLine: 8720
    summary: "\nA class that controls the information display \nwhilst dragging the ghost tower\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BuildInfoUI : MonoBehaviour'
        VB: >-
          Public Class BuildInfoUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.BuildInfoUI.anim
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.anim
      language: CSharp
      name:
        CSharp: anim
        VB: anim
      nameWithType:
        CSharp: BuildInfoUI.anim
        VB: BuildInfoUI.anim
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.anim
        VB: TowerDefense.UI.HUD.BuildInfoUI.anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: anim
        path: ''
        startLine: 8752
      summary: "\nThe attached animator\n"
      example: []
      syntax:
        content:
          CSharp: public Animation anim
          VB: Public anim As Animation
        return:
          type: Animation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.BuildInfoUI.showClipName
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.showClipName
      language: CSharp
      name:
        CSharp: showClipName
        VB: showClipName
      nameWithType:
        CSharp: BuildInfoUI.showClipName
        VB: BuildInfoUI.showClipName
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.showClipName
        VB: TowerDefense.UI.HUD.BuildInfoUI.showClipName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: showClipName
        path: ''
        startLine: 8757
      summary: "\nThe name of the clip that shows the UI\n"
      example: []
      syntax:
        content:
          CSharp: public string showClipName
          VB: Public showClipName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.BuildInfoUI.hideClipName
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.hideClipName
      language: CSharp
      name:
        CSharp: hideClipName
        VB: hideClipName
      nameWithType:
        CSharp: BuildInfoUI.hideClipName
        VB: BuildInfoUI.hideClipName
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.hideClipName
        VB: TowerDefense.UI.HUD.BuildInfoUI.hideClipName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: hideClipName
        path: ''
        startLine: 8762
      summary: "\nThe name of the clip that hides the UI\n"
      example: []
      syntax:
        content:
          CSharp: public string hideClipName
          VB: Public hideClipName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.BuildInfoUI.m_TowerUI
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.m_TowerUI
      language: CSharp
      name:
        CSharp: m_TowerUI
        VB: m_TowerUI
      nameWithType:
        CSharp: BuildInfoUI.m_TowerUI
        VB: BuildInfoUI.m_TowerUI
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.m_TowerUI
        VB: TowerDefense.UI.HUD.BuildInfoUI.m_TowerUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_TowerUI
        path: ''
        startLine: 8767
      summary: "\nThe attached <xref href=\"TowerDefense.UI.HUD.TowerUI\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected TowerUI m_TowerUI
          VB: Protected m_TowerUI As TowerUI
        return:
          type: TowerDefense.UI.HUD.TowerUI
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.UI.HUD.TowerUI: 
    - id: TowerDefense.UI.HUD.BuildInfoUI.m_Canvas
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.m_Canvas
      language: CSharp
      name:
        CSharp: m_Canvas
        VB: m_Canvas
      nameWithType:
        CSharp: BuildInfoUI.m_Canvas
        VB: BuildInfoUI.m_Canvas
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.m_Canvas
        VB: TowerDefense.UI.HUD.BuildInfoUI.m_Canvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_Canvas
        path: ''
        startLine: 8772
      summary: "\nThe attached canvas\n"
      example: []
      syntax:
        content:
          CSharp: protected Canvas m_Canvas
          VB: Protected m_Canvas As Canvas
        return:
          type: Canvas
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd
      commentId: M:TowerDefense.UI.HUD.BuildInfoUI.ShowEnd
      language: CSharp
      name:
        CSharp: ShowEnd()
        VB: ShowEnd()
      nameWithType:
        CSharp: BuildInfoUI.ShowEnd()
        VB: BuildInfoUI.ShowEnd()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd()
        VB: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ShowEnd
        path: ''
        startLine: 8784
      summary: "\nNOTE: Plays from Show animation clip event\nFires at the end of the show animation\nSets <xref href=\"TowerDefense.UI.HUD.BuildInfoUI.m_State\" data-throw-if-not-resolved=\"false\"></xref> to Show\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowEnd()
          VB: Public Sub ShowEnd
      overload: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.BuildInfoUI.m_State: 
    - id: TowerDefense.UI.HUD.BuildInfoUI.HideEnd
      commentId: M:TowerDefense.UI.HUD.BuildInfoUI.HideEnd
      language: CSharp
      name:
        CSharp: HideEnd()
        VB: HideEnd()
      nameWithType:
        CSharp: BuildInfoUI.HideEnd()
        VB: BuildInfoUI.HideEnd()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.HideEnd()
        VB: TowerDefense.UI.HUD.BuildInfoUI.HideEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: HideEnd
        path: ''
        startLine: 8794
      summary: "\nNOTE: Plays from Hide animation clip event\nFires at the end of the hide animation\nSets <xref href=\"TowerDefense.UI.HUD.BuildInfoUI.m_State\" data-throw-if-not-resolved=\"false\"></xref> to Hidden\n"
      example: []
      syntax:
        content:
          CSharp: public void HideEnd()
          VB: Public Sub HideEnd
      overload: TowerDefense.UI.HUD.BuildInfoUI.HideEnd*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.BuildInfoUI.m_State: 
    - id: TowerDefense.UI.HUD.BuildInfoUI.Show(Tower)
      commentId: M:TowerDefense.UI.HUD.BuildInfoUI.Show(Tower)
      language: CSharp
      name:
        CSharp: Show(Tower)
        VB: Show(Tower)
      nameWithType:
        CSharp: BuildInfoUI.Show(Tower)
        VB: BuildInfoUI.Show(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.Show(Tower)
        VB: TowerDefense.UI.HUD.BuildInfoUI.Show(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Show
        path: ''
        startLine: 8805
      summary: "\nShows the information\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Show(Tower controller)
          VB: Public Overridable Sub Show(controller As Tower)
        parameters:
        - id: controller
          type: Tower
          description: "\nThe tower information to display\n"
      overload: TowerDefense.UI.HUD.BuildInfoUI.Show*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.BuildInfoUI.Hide
      commentId: M:TowerDefense.UI.HUD.BuildInfoUI.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: BuildInfoUI.Hide()
        VB: BuildInfoUI.Hide()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.Hide()
        VB: TowerDefense.UI.HUD.BuildInfoUI.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Hide
        path: ''
        startLine: 8826
      summary: "\nHides the information\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Hide()
          VB: Public Overridable Sub Hide
      overload: TowerDefense.UI.HUD.BuildInfoUI.Hide*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.BuildInfoUI.Awake
      commentId: M:TowerDefense.UI.HUD.BuildInfoUI.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: BuildInfoUI.Awake()
        VB: BuildInfoUI.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.Awake()
        VB: TowerDefense.UI.HUD.BuildInfoUI.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Awake
        path: ''
        startLine: 8841
      summary: "\nCache the attached Canvas and the attached TowerControllerUI\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.UI.HUD.BuildInfoUI.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
    commentId: T:TowerDefense.UI.HUD.BuildInfoUI.AnimationState
    language: CSharp
    name:
      CSharp: BuildInfoUI.AnimationState
      VB: BuildInfoUI.AnimationState
    nameWithType:
      CSharp: BuildInfoUI.AnimationState
      VB: BuildInfoUI.AnimationState
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
      VB: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: AnimationState
      path: ''
      startLine: 8726
    summary: "\nan enum for easily keeping track of UI animation\n"
    example: []
    syntax:
      content:
        CSharp: public enum AnimationState
        VB: Public Enum AnimationState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hidden
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hidden
      language: CSharp
      name:
        CSharp: Hidden
        VB: Hidden
      nameWithType:
        CSharp: BuildInfoUI.AnimationState.Hidden
        VB: BuildInfoUI.AnimationState.Hidden
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hidden
        VB: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hidden
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Hidden
        path: ''
        startLine: 8731
      summary: "\nThe UI is completely hidden\n"
      example: []
      syntax:
        content:
          CSharp: Hidden = 0
          VB: Hidden = 0
        return:
          type: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Showing
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Showing
      language: CSharp
      name:
        CSharp: Showing
        VB: Showing
      nameWithType:
        CSharp: BuildInfoUI.AnimationState.Showing
        VB: BuildInfoUI.AnimationState.Showing
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Showing
        VB: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Showing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Showing
        path: ''
        startLine: 8736
      summary: "\nThe UI is animation to be shown\n"
      example: []
      syntax:
        content:
          CSharp: Showing = 1
          VB: Showing = 1
        return:
          type: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Shown
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Shown
      language: CSharp
      name:
        CSharp: Shown
        VB: Shown
      nameWithType:
        CSharp: BuildInfoUI.AnimationState.Shown
        VB: BuildInfoUI.AnimationState.Shown
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Shown
        VB: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Shown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Shown
        path: ''
        startLine: 8741
      summary: "\nthe UI is completely shown\n"
      example: []
      syntax:
        content:
          CSharp: Shown = 2
          VB: Shown = 2
        return:
          type: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hiding
      commentId: F:TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hiding
      language: CSharp
      name:
        CSharp: Hiding
        VB: Hiding
      nameWithType:
        CSharp: BuildInfoUI.AnimationState.Hiding
        VB: BuildInfoUI.AnimationState.Hiding
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hiding
        VB: TowerDefense.UI.HUD.BuildInfoUI.AnimationState.Hiding
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Hiding
        path: ''
        startLine: 8746
      summary: "\nThe UI is animating \n"
      example: []
      syntax:
        content:
          CSharp: Hiding = 3
          VB: Hiding = 3
        return:
          type: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.UI.HUD.BuildSidebar
    commentId: T:TowerDefense.UI.HUD.BuildSidebar
    language: CSharp
    name:
      CSharp: BuildSidebar
      VB: BuildSidebar
    nameWithType:
      CSharp: BuildSidebar
      VB: BuildSidebar
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.BuildSidebar
      VB: TowerDefense.UI.HUD.BuildSidebar
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: BuildSidebar
      path: ''
      startLine: 8857
    summary: "\nUI component that displays towers that can be built on this level.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BuildSidebar : MonoBehaviour'
        VB: >-
          Public Class BuildSidebar

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.BuildSidebar.towerSpawnButton
      commentId: F:TowerDefense.UI.HUD.BuildSidebar.towerSpawnButton
      language: CSharp
      name:
        CSharp: towerSpawnButton
        VB: towerSpawnButton
      nameWithType:
        CSharp: BuildSidebar.towerSpawnButton
        VB: BuildSidebar.towerSpawnButton
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildSidebar.towerSpawnButton
        VB: TowerDefense.UI.HUD.BuildSidebar.towerSpawnButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerSpawnButton
        path: ''
        startLine: 8862
      summary: "\nThe prefab spawned for each button\n"
      example: []
      syntax:
        content:
          CSharp: public TowerSpawnButton towerSpawnButton
          VB: Public towerSpawnButton As TowerSpawnButton
        return:
          type: TowerDefense.UI.HUD.TowerSpawnButton
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.BuildSidebar.Start
      commentId: M:TowerDefense.UI.HUD.BuildSidebar.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BuildSidebar.Start()
        VB: BuildSidebar.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildSidebar.Start()
        VB: TowerDefense.UI.HUD.BuildSidebar.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Start
        path: ''
        startLine: 8867
      summary: "\nInitialize the tower spawn buttons\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.HUD.BuildSidebar.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed
      commentId: M:TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed
      language: CSharp
      name:
        CSharp: StartWaveButtonPressed()
        VB: StartWaveButtonPressed()
      nameWithType:
        CSharp: BuildSidebar.StartWaveButtonPressed()
        VB: BuildSidebar.StartWaveButtonPressed()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed()
        VB: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: StartWaveButtonPressed
        path: ''
        startLine: 8925
      summary: "\nCalled by start wave button in scene\n"
      example: []
      syntax:
        content:
          CSharp: public void StartWaveButtonPressed()
          VB: Public Sub StartWaveButtonPressed
      overload: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.BuildSidebar.AddCurrency(System.Int32)
      commentId: M:TowerDefense.UI.HUD.BuildSidebar.AddCurrency(System.Int32)
      language: CSharp
      name:
        CSharp: AddCurrency(Int32)
        VB: AddCurrency(Int32)
      nameWithType:
        CSharp: BuildSidebar.AddCurrency(Int32)
        VB: BuildSidebar.AddCurrency(Int32)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.BuildSidebar.AddCurrency(System.Int32)
        VB: TowerDefense.UI.HUD.BuildSidebar.AddCurrency(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: AddCurrency
        path: ''
        startLine: 8937
      summary: "\nDebug button to add currency\n"
      example: []
      syntax:
        content:
          CSharp: public void AddCurrency(int amount)
          VB: Public Sub AddCurrency(amount As Integer)
        parameters:
        - id: amount
          type: System.Int32
          description: How much to add
      overload: TowerDefense.UI.HUD.BuildSidebar.AddCurrency*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.HUD.CurrencyUI
    commentId: T:TowerDefense.UI.HUD.CurrencyUI
    language: CSharp
    name:
      CSharp: CurrencyUI
      VB: CurrencyUI
    nameWithType:
      CSharp: CurrencyUI
      VB: CurrencyUI
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.CurrencyUI
      VB: TowerDefense.UI.HUD.CurrencyUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: CurrencyUI
      path: ''
      startLine: 8956
    summary: "\nA class for controlling the displaying the currency\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CurrencyUI : MonoBehaviour'
        VB: >-
          Public Class CurrencyUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.CurrencyUI.display
      commentId: F:TowerDefense.UI.HUD.CurrencyUI.display
      language: CSharp
      name:
        CSharp: display
        VB: display
      nameWithType:
        CSharp: CurrencyUI.display
        VB: CurrencyUI.display
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.CurrencyUI.display
        VB: TowerDefense.UI.HUD.CurrencyUI.display
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: display
        path: ''
        startLine: 8961
      summary: "\nThe text element to display information on\n"
      example: []
      syntax:
        content:
          CSharp: public Text display
          VB: Public display As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.CurrencyUI.currencySymbol
      commentId: F:TowerDefense.UI.HUD.CurrencyUI.currencySymbol
      language: CSharp
      name:
        CSharp: currencySymbol
        VB: currencySymbol
      nameWithType:
        CSharp: CurrencyUI.currencySymbol
        VB: CurrencyUI.currencySymbol
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.CurrencyUI.currencySymbol
        VB: TowerDefense.UI.HUD.CurrencyUI.currencySymbol
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: currencySymbol
        path: ''
        startLine: 8966
      summary: "\nThe currency prefix to display next to the amount\n"
      example: []
      syntax:
        content:
          CSharp: public string currencySymbol
          VB: Public currencySymbol As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.CurrencyUI.m_Currency
      commentId: F:TowerDefense.UI.HUD.CurrencyUI.m_Currency
      language: CSharp
      name:
        CSharp: m_Currency
        VB: m_Currency
      nameWithType:
        CSharp: CurrencyUI.m_Currency
        VB: CurrencyUI.m_Currency
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.CurrencyUI.m_Currency
        VB: TowerDefense.UI.HUD.CurrencyUI.m_Currency
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_Currency
        path: ''
        startLine: 8968
      syntax:
        content:
          CSharp: protected Currency m_Currency
          VB: Protected m_Currency As Currency
        return:
          type: Currency
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.CurrencyUI.Start
      commentId: M:TowerDefense.UI.HUD.CurrencyUI.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: CurrencyUI.Start()
        VB: CurrencyUI.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.CurrencyUI.Start()
        VB: TowerDefense.UI.HUD.CurrencyUI.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Start
        path: ''
        startLine: 8973
      summary: "\nAssign the correct currency value\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.HUD.CurrencyUI.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.CurrencyUI.OnDestroy
      commentId: M:TowerDefense.UI.HUD.CurrencyUI.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: CurrencyUI.OnDestroy()
        VB: CurrencyUI.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.CurrencyUI.OnDestroy()
        VB: TowerDefense.UI.HUD.CurrencyUI.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDestroy
        path: ''
        startLine: 8991
      summary: "\nUnsubscribe from events\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.UI.HUD.CurrencyUI.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay
      commentId: M:TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay
      language: CSharp
      name:
        CSharp: UpdateDisplay()
        VB: UpdateDisplay()
      nameWithType:
        CSharp: CurrencyUI.UpdateDisplay()
        VB: CurrencyUI.UpdateDisplay()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay()
        VB: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: UpdateDisplay
        path: ''
        startLine: 9002
      summary: "\nA method for updating the display based on the current currency\n"
      example: []
      syntax:
        content:
          CSharp: protected void UpdateDisplay()
          VB: Protected Sub UpdateDisplay
      overload: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.UI.HUD.UIPointer
    commentId: T:TowerDefense.UI.HUD.UIPointer
    language: CSharp
    name:
      CSharp: UIPointer
      VB: UIPointer
    nameWithType:
      CSharp: UIPointer
      VB: UIPointer
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.UIPointer
      VB: TowerDefense.UI.HUD.UIPointer
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: UIPointer
      path: ''
      startLine: 9025
    summary: "\nA game UI wrapper for a pointer that also contains raycast information\n"
    example: []
    syntax:
      content:
        CSharp: public struct UIPointer
        VB: Public Structure UIPointer
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: TowerDefense.UI.HUD.UIPointer.pointer
      commentId: F:TowerDefense.UI.HUD.UIPointer.pointer
      language: CSharp
      name:
        CSharp: pointer
        VB: pointer
      nameWithType:
        CSharp: UIPointer.pointer
        VB: UIPointer.pointer
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.UIPointer.pointer
        VB: TowerDefense.UI.HUD.UIPointer.pointer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: pointer
        path: ''
        startLine: 9030
      summary: "\nThe pointer info\n"
      example: []
      syntax:
        content:
          CSharp: public PointerInfo pointer
          VB: Public pointer As PointerInfo
        return:
          type: PointerInfo
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.UIPointer.ray
      commentId: F:TowerDefense.UI.HUD.UIPointer.ray
      language: CSharp
      name:
        CSharp: ray
        VB: ray
      nameWithType:
        CSharp: UIPointer.ray
        VB: UIPointer.ray
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.UIPointer.ray
        VB: TowerDefense.UI.HUD.UIPointer.ray
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ray
        path: ''
        startLine: 9035
      summary: "\nThe ray for this pointer\n"
      example: []
      syntax:
        content:
          CSharp: public Ray ray
          VB: Public ray As Ray
        return:
          type: Ray
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.UIPointer.raycast
      commentId: F:TowerDefense.UI.HUD.UIPointer.raycast
      language: CSharp
      name:
        CSharp: raycast
        VB: raycast
      nameWithType:
        CSharp: UIPointer.raycast
        VB: UIPointer.raycast
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.UIPointer.raycast
        VB: TowerDefense.UI.HUD.UIPointer.raycast
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: raycast
        path: ''
        startLine: 9040
      summary: "\nThe raycast hit object into the 3D scene\n"
      example: []
      syntax:
        content:
          CSharp: public RaycastHit? raycast
          VB: Public raycast As RaycastHit?
        return:
          type: System.Nullable{RaycastHit}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.UIPointer.overUI
      commentId: F:TowerDefense.UI.HUD.UIPointer.overUI
      language: CSharp
      name:
        CSharp: overUI
        VB: overUI
      nameWithType:
        CSharp: UIPointer.overUI
        VB: UIPointer.overUI
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.UIPointer.overUI
        VB: TowerDefense.UI.HUD.UIPointer.overUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: overUI
        path: ''
        startLine: 9045
      summary: "\nTrue if this pointer started over a UI element or anything the event system catches\n"
      example: []
      syntax:
        content:
          CSharp: public bool overUI
          VB: Public overUI As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.HUD.GameUI
    commentId: T:TowerDefense.UI.HUD.GameUI
    language: CSharp
    name:
      CSharp: GameUI
      VB: GameUI
    nameWithType:
      CSharp: GameUI
      VB: GameUI
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.GameUI
      VB: TowerDefense.UI.HUD.GameUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: GameUI
      path: ''
      startLine: 9059
    summary: "\nAn object that manages user interaction with the game. Its responsibilities deal with\n<ul><li>Building towers</li><li>Selecting towers and units</li></ul>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameUI : Singleton<GameUI>'
        VB: >-
          Public Class GameUI

              Inherits Singleton(Of GameUI)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.GameUI.state
      commentId: P:TowerDefense.UI.HUD.GameUI.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: GameUI.state
        VB: GameUI.state
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.state
        VB: TowerDefense.UI.HUD.GameUI.state
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: state
        path: ''
        startLine: 9096
      summary: "\nGets the current UI state\n"
      example: []
      syntax:
        content:
          CSharp: public GameUI.State state { get; }
          VB: Public ReadOnly Property state As GameUI.State
        parameters: []
        return:
          type: TowerDefense.UI.HUD.GameUI.State
      overload: TowerDefense.UI.HUD.GameUI.state*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.HUD.GameUI.placementAreaMask
      commentId: F:TowerDefense.UI.HUD.GameUI.placementAreaMask
      language: CSharp
      name:
        CSharp: placementAreaMask
        VB: placementAreaMask
      nameWithType:
        CSharp: GameUI.placementAreaMask
        VB: GameUI.placementAreaMask
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.placementAreaMask
        VB: TowerDefense.UI.HUD.GameUI.placementAreaMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: placementAreaMask
        path: ''
        startLine: 9101
      summary: "\nThe currently selected tower\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask placementAreaMask
          VB: Public placementAreaMask As LayerMask
        return:
          type: LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.towerSelectionLayer
      commentId: F:TowerDefense.UI.HUD.GameUI.towerSelectionLayer
      language: CSharp
      name:
        CSharp: towerSelectionLayer
        VB: towerSelectionLayer
      nameWithType:
        CSharp: GameUI.towerSelectionLayer
        VB: GameUI.towerSelectionLayer
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.towerSelectionLayer
        VB: TowerDefense.UI.HUD.GameUI.towerSelectionLayer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerSelectionLayer
        path: ''
        startLine: 9106
      summary: "\nThe layer for tower selection\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask towerSelectionLayer
          VB: Public towerSelectionLayer As LayerMask
        return:
          type: LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.ghostWorldPlacementMask
      commentId: F:TowerDefense.UI.HUD.GameUI.ghostWorldPlacementMask
      language: CSharp
      name:
        CSharp: ghostWorldPlacementMask
        VB: ghostWorldPlacementMask
      nameWithType:
        CSharp: GameUI.ghostWorldPlacementMask
        VB: GameUI.ghostWorldPlacementMask
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.ghostWorldPlacementMask
        VB: TowerDefense.UI.HUD.GameUI.ghostWorldPlacementMask
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ghostWorldPlacementMask
        path: ''
        startLine: 9112
      summary: "\nThe physics layer for moving the ghost around the world\nwhen the placement is not valid\n"
      example: []
      syntax:
        content:
          CSharp: public LayerMask ghostWorldPlacementMask
          VB: Public ghostWorldPlacementMask As LayerMask
        return:
          type: LayerMask
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.sphereCastRadius
      commentId: F:TowerDefense.UI.HUD.GameUI.sphereCastRadius
      language: CSharp
      name:
        CSharp: sphereCastRadius
        VB: sphereCastRadius
      nameWithType:
        CSharp: GameUI.sphereCastRadius
        VB: GameUI.sphereCastRadius
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.sphereCastRadius
        VB: TowerDefense.UI.HUD.GameUI.sphereCastRadius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: sphereCastRadius
        path: ''
        startLine: 9118
      summary: "\nThe radius of the sphere cast \nfor checking ghost placement\n"
      example: []
      syntax:
        content:
          CSharp: public float sphereCastRadius
          VB: Public sphereCastRadius As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.radiusVisualizerController
      commentId: F:TowerDefense.UI.HUD.GameUI.radiusVisualizerController
      language: CSharp
      name:
        CSharp: radiusVisualizerController
        VB: radiusVisualizerController
      nameWithType:
        CSharp: GameUI.radiusVisualizerController
        VB: GameUI.radiusVisualizerController
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.radiusVisualizerController
        VB: TowerDefense.UI.HUD.GameUI.radiusVisualizerController
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: radiusVisualizerController
        path: ''
        startLine: 9123
      summary: "\nComponent that manages the radius visualizers of ghosts and towers\n"
      example: []
      syntax:
        content:
          CSharp: public RadiusVisualizerController radiusVisualizerController
          VB: Public radiusVisualizerController As RadiusVisualizerController
        return:
          type: TowerDefense.UI.RadiusVisualizerController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.towerUI
      commentId: F:TowerDefense.UI.HUD.GameUI.towerUI
      language: CSharp
      name:
        CSharp: towerUI
        VB: towerUI
      nameWithType:
        CSharp: GameUI.towerUI
        VB: GameUI.towerUI
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.towerUI
        VB: TowerDefense.UI.HUD.GameUI.towerUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerUI
        path: ''
        startLine: 9128
      summary: "\nThe UI controller for displaying individual tower data\n"
      example: []
      syntax:
        content:
          CSharp: public TowerUI towerUI
          VB: Public towerUI As TowerUI
        return:
          type: TowerDefense.UI.HUD.TowerUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.buildInfoUI
      commentId: F:TowerDefense.UI.HUD.GameUI.buildInfoUI
      language: CSharp
      name:
        CSharp: buildInfoUI
        VB: buildInfoUI
      nameWithType:
        CSharp: GameUI.buildInfoUI
        VB: GameUI.buildInfoUI
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.buildInfoUI
        VB: TowerDefense.UI.HUD.GameUI.buildInfoUI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: buildInfoUI
        path: ''
        startLine: 9134
      summary: "\nThe UI controller for displaying tower information\nwhilst placing\n"
      example: []
      syntax:
        content:
          CSharp: public BuildInfoUI buildInfoUI
          VB: Public buildInfoUI As BuildInfoUI
        return:
          type: TowerDefense.UI.HUD.BuildInfoUI
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.stateChanged
      commentId: E:TowerDefense.UI.HUD.GameUI.stateChanged
      language: CSharp
      name:
        CSharp: stateChanged
        VB: stateChanged
      nameWithType:
        CSharp: GameUI.stateChanged
        VB: GameUI.stateChanged
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.stateChanged
        VB: TowerDefense.UI.HUD.GameUI.stateChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: stateChanged
        path: ''
        startLine: 9140
      summary: "\nFires when the <xref href=\"TowerDefense.UI.HUD.GameUI.State\" data-throw-if-not-resolved=\"false\"></xref> changes\nshould only allow firing when TouchUI is used\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<GameUI.State, GameUI.State> stateChanged
          VB: Public Event stateChanged As Action(Of GameUI.State, GameUI.State)
        return:
          type: Action{TowerDefense.UI.HUD.GameUI.State,TowerDefense.UI.HUD.GameUI.State}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.State: 
    - id: TowerDefense.UI.HUD.GameUI.ghostBecameValid
      commentId: E:TowerDefense.UI.HUD.GameUI.ghostBecameValid
      language: CSharp
      name:
        CSharp: ghostBecameValid
        VB: ghostBecameValid
      nameWithType:
        CSharp: GameUI.ghostBecameValid
        VB: GameUI.ghostBecameValid
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.ghostBecameValid
        VB: TowerDefense.UI.HUD.GameUI.ghostBecameValid
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ghostBecameValid
        path: ''
        startLine: 9145
      summary: "\nFires off when the ghost was previously not valid but now is due to currency amount change\n"
      example: []
      syntax:
        content:
          CSharp: public event Action ghostBecameValid
          VB: Public Event ghostBecameValid As Action
        return:
          type: Action
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.selectionChanged
      commentId: E:TowerDefense.UI.HUD.GameUI.selectionChanged
      language: CSharp
      name:
        CSharp: selectionChanged
        VB: selectionChanged
      nameWithType:
        CSharp: GameUI.selectionChanged
        VB: GameUI.selectionChanged
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.selectionChanged
        VB: TowerDefense.UI.HUD.GameUI.selectionChanged
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: selectionChanged
        path: ''
        startLine: 9150
      summary: "\nFires when a tower is selected/deselected\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Tower> selectionChanged
          VB: Public Event selectionChanged As Action(Of Tower)
        return:
          type: Action{Tower}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.currentSelectedTower
      commentId: P:TowerDefense.UI.HUD.GameUI.currentSelectedTower
      language: CSharp
      name:
        CSharp: currentSelectedTower
        VB: currentSelectedTower
      nameWithType:
        CSharp: GameUI.currentSelectedTower
        VB: GameUI.currentSelectedTower
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.currentSelectedTower
        VB: TowerDefense.UI.HUD.GameUI.currentSelectedTower
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: currentSelectedTower
        path: ''
        startLine: 9180
      summary: "\nGets the current selected tower\n"
      example: []
      syntax:
        content:
          CSharp: public Tower currentSelectedTower { get; }
          VB: Public ReadOnly Property currentSelectedTower As Tower
        parameters: []
        return:
          type: Tower
      overload: TowerDefense.UI.HUD.GameUI.currentSelectedTower*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.HUD.GameUI.isTowerSelected
      commentId: P:TowerDefense.UI.HUD.GameUI.isTowerSelected
      language: CSharp
      name:
        CSharp: isTowerSelected
        VB: isTowerSelected
      nameWithType:
        CSharp: GameUI.isTowerSelected
        VB: GameUI.isTowerSelected
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.isTowerSelected
        VB: TowerDefense.UI.HUD.GameUI.isTowerSelected
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: isTowerSelected
        path: ''
        startLine: 9185
      summary: "\nGets whether a tower has been selected\n"
      example: []
      syntax:
        content:
          CSharp: public bool isTowerSelected { get; }
          VB: Public ReadOnly Property isTowerSelected As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.UI.HUD.GameUI.isTowerSelected*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.HUD.GameUI.isBuilding
      commentId: P:TowerDefense.UI.HUD.GameUI.isBuilding
      language: CSharp
      name:
        CSharp: isBuilding
        VB: isBuilding
      nameWithType:
        CSharp: GameUI.isBuilding
        VB: GameUI.isBuilding
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.isBuilding
        VB: TowerDefense.UI.HUD.GameUI.isBuilding
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: isBuilding
        path: ''
        startLine: 9193
      summary: "\nGets whether certain build operations are valid\n"
      example: []
      syntax:
        content:
          CSharp: public bool isBuilding { get; }
          VB: Public ReadOnly Property isBuilding As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TowerDefense.UI.HUD.GameUI.isBuilding*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement
      commentId: M:TowerDefense.UI.HUD.GameUI.CancelGhostPlacement
      language: CSharp
      name:
        CSharp: CancelGhostPlacement()
        VB: CancelGhostPlacement()
      nameWithType:
        CSharp: GameUI.CancelGhostPlacement()
        VB: GameUI.CancelGhostPlacement()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement()
        VB: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: CancelGhostPlacement
        path: ''
        startLine: 9204
      summary: "\nCancel placing the ghost\n"
      example: []
      syntax:
        content:
          CSharp: public void CancelGhostPlacement()
          VB: Public Sub CancelGhostPlacement
      overload: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.ChangeToDragMode
      commentId: M:TowerDefense.UI.HUD.GameUI.ChangeToDragMode
      language: CSharp
      name:
        CSharp: ChangeToDragMode()
        VB: ChangeToDragMode()
      nameWithType:
        CSharp: GameUI.ChangeToDragMode()
        VB: GameUI.ChangeToDragMode()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.ChangeToDragMode()
        VB: TowerDefense.UI.HUD.GameUI.ChangeToDragMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ChangeToDragMode
        path: ''
        startLine: 9227
      summary: "\nReturns the GameUI to dragging mode with the curent tower\n"
      example: []
      syntax:
        content:
          CSharp: public void ChangeToDragMode()
          VB: Public Sub ChangeToDragMode
      overload: TowerDefense.UI.HUD.GameUI.ChangeToDragMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode
      commentId: M:TowerDefense.UI.HUD.GameUI.ReturnToBuildMode
      language: CSharp
      name:
        CSharp: ReturnToBuildMode()
        VB: ReturnToBuildMode()
      nameWithType:
        CSharp: GameUI.ReturnToBuildMode()
        VB: GameUI.ReturnToBuildMode()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode()
        VB: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ReturnToBuildMode
        path: ''
        startLine: 9242
      summary: "\nReturns the GameUI to BuildMode with the current tower\n"
      example: []
      syntax:
        content:
          CSharp: public void ReturnToBuildMode()
          VB: Public Sub ReturnToBuildMode
      overload: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.GameOver
      commentId: M:TowerDefense.UI.HUD.GameUI.GameOver
      language: CSharp
      name:
        CSharp: GameOver()
        VB: GameOver()
      nameWithType:
        CSharp: GameUI.GameOver()
        VB: GameUI.GameOver()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.GameOver()
        VB: TowerDefense.UI.HUD.GameUI.GameOver()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: GameOver
        path: ''
        startLine: 9298
      summary: "\nCalled when the game is over\n"
      example: []
      syntax:
        content:
          CSharp: public void GameOver()
          VB: Public Sub GameOver
      overload: TowerDefense.UI.HUD.GameUI.GameOver*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.Pause
      commentId: M:TowerDefense.UI.HUD.GameUI.Pause
      language: CSharp
      name:
        CSharp: Pause()
        VB: Pause()
      nameWithType:
        CSharp: GameUI.Pause()
        VB: GameUI.Pause()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.Pause()
        VB: TowerDefense.UI.HUD.GameUI.Pause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Pause
        path: ''
        startLine: 9306
      summary: "\nPause the game and display the pause menu\n"
      example: []
      syntax:
        content:
          CSharp: public void Pause()
          VB: Public Sub Pause
      overload: TowerDefense.UI.HUD.GameUI.Pause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.Unpause
      commentId: M:TowerDefense.UI.HUD.GameUI.Unpause
      language: CSharp
      name:
        CSharp: Unpause()
        VB: Unpause()
      nameWithType:
        CSharp: GameUI.Unpause()
        VB: GameUI.Unpause()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.Unpause()
        VB: TowerDefense.UI.HUD.GameUI.Unpause()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Unpause
        path: ''
        startLine: 9314
      summary: "\nResume the game and close the pause menu\n"
      example: []
      syntax:
        content:
          CSharp: public void Unpause()
          VB: Public Sub Unpause
      overload: TowerDefense.UI.HUD.GameUI.Unpause*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.SetToDragMode(Tower)
      commentId: M:TowerDefense.UI.HUD.GameUI.SetToDragMode(Tower)
      language: CSharp
      name:
        CSharp: SetToDragMode(Tower)
        VB: SetToDragMode(Tower)
      nameWithType:
        CSharp: GameUI.SetToDragMode(Tower)
        VB: GameUI.SetToDragMode(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.SetToDragMode(Tower)
        VB: TowerDefense.UI.HUD.GameUI.SetToDragMode(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SetToDragMode
        path: ''
        startLine: 9328
      summary: "\nChanges the mode to drag\n"
      example: []
      syntax:
        content:
          CSharp: public void SetToDragMode(Tower towerToBuild)
          VB: Public Sub SetToDragMode(towerToBuild As Tower)
        parameters:
        - id: towerToBuild
          type: Tower
          description: "\nThe tower to build\n"
      overload: TowerDefense.UI.HUD.GameUI.SetToDragMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.SetToBuildMode(Tower)
      commentId: M:TowerDefense.UI.HUD.GameUI.SetToBuildMode(Tower)
      language: CSharp
      name:
        CSharp: SetToBuildMode(Tower)
        VB: SetToBuildMode(Tower)
      nameWithType:
        CSharp: GameUI.SetToBuildMode(Tower)
        VB: GameUI.SetToBuildMode(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.SetToBuildMode(Tower)
        VB: TowerDefense.UI.HUD.GameUI.SetToBuildMode(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SetToBuildMode
        path: ''
        startLine: 9353
      summary: "\nSets the UI into a build state for a given tower\n"
      example: []
      syntax:
        content:
          CSharp: public void SetToBuildMode(Tower towerToBuild)
          VB: Public Sub SetToBuildMode(towerToBuild As Tower)
        parameters:
        - id: towerToBuild
          type: Tower
          description: "\nThe tower to build\n"
      overload: TowerDefense.UI.HUD.GameUI.SetToBuildMode*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.TryPlaceTower(PointerInfo)
      commentId: M:TowerDefense.UI.HUD.GameUI.TryPlaceTower(PointerInfo)
      language: CSharp
      name:
        CSharp: TryPlaceTower(PointerInfo)
        VB: TryPlaceTower(PointerInfo)
      nameWithType:
        CSharp: GameUI.TryPlaceTower(PointerInfo)
        VB: GameUI.TryPlaceTower(PointerInfo)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.TryPlaceTower(PointerInfo)
        VB: TowerDefense.UI.HUD.GameUI.TryPlaceTower(PointerInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: TryPlaceTower
        path: ''
        startLine: 9373
      summary: "\nAttempt to position a tower at the given location\n"
      example: []
      syntax:
        content:
          CSharp: public void TryPlaceTower(PointerInfo pointerInfo)
          VB: Public Sub TryPlaceTower(pointerInfo As PointerInfo)
        parameters:
        - id: pointerInfo
          type: PointerInfo
          description: The pointer we&apos;re using to position the tower
      overload: TowerDefense.UI.HUD.GameUI.TryPlaceTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.TryMoveGhost(PointerInfo,System.Boolean)
      commentId: M:TowerDefense.UI.HUD.GameUI.TryMoveGhost(PointerInfo,System.Boolean)
      language: CSharp
      name:
        CSharp: TryMoveGhost(PointerInfo, Boolean)
        VB: TryMoveGhost(PointerInfo, Boolean)
      nameWithType:
        CSharp: GameUI.TryMoveGhost(PointerInfo, Boolean)
        VB: GameUI.TryMoveGhost(PointerInfo, Boolean)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.TryMoveGhost(PointerInfo, System.Boolean)
        VB: TowerDefense.UI.HUD.GameUI.TryMoveGhost(PointerInfo, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: TryMoveGhost
        path: ''
        startLine: 9390
      summary: "\nPosition the ghost tower at the given pointer\n"
      example: []
      syntax:
        content:
          CSharp: public void TryMoveGhost(PointerInfo pointerInfo, bool hideWhenInvalid = true)
          VB: Public Sub TryMoveGhost(pointerInfo As PointerInfo, hideWhenInvalid As Boolean = True)
        parameters:
        - id: pointerInfo
          type: PointerInfo
          description: The pointer we&apos;re using to position the tower
        - id: hideWhenInvalid
          type: System.Boolean
          description: Optional parameter for configuring if the ghost is hidden when in an invalid location
      overload: TowerDefense.UI.HUD.GameUI.TryMoveGhost*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer(Tower,Transform)
      commentId: M:TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer(Tower,Transform)
      language: CSharp
      name:
        CSharp: SetupRadiusVisualizer(Tower, Transform)
        VB: SetupRadiusVisualizer(Tower, Transform)
      nameWithType:
        CSharp: GameUI.SetupRadiusVisualizer(Tower, Transform)
        VB: GameUI.SetupRadiusVisualizer(Tower, Transform)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer(Tower, Transform)
        VB: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer(Tower, Transform)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SetupRadiusVisualizer
        path: ''
        startLine: 9410
      summary: "\nSets up the radius visualizer for a tower or ghost tower\n"
      example: []
      syntax:
        content:
          CSharp: public void SetupRadiusVisualizer(Tower tower, Transform ghost = null)
          VB: Public Sub SetupRadiusVisualizer(tower As Tower, ghost As Transform = Nothing)
        parameters:
        - id: tower
          type: Tower
        - id: ghost
          type: Transform
      overload: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer
      commentId: M:TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer
      language: CSharp
      name:
        CSharp: HideRadiusVisualizer()
        VB: HideRadiusVisualizer()
      nameWithType:
        CSharp: GameUI.HideRadiusVisualizer()
        VB: GameUI.HideRadiusVisualizer()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer()
        VB: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: HideRadiusVisualizer
        path: ''
        startLine: 9418
      summary: "\nHides the radius visualizer\n"
      example: []
      syntax:
        content:
          CSharp: public void HideRadiusVisualizer()
          VB: Public Sub HideRadiusVisualizer
      overload: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.SelectTower(Tower)
      commentId: M:TowerDefense.UI.HUD.GameUI.SelectTower(Tower)
      language: CSharp
      name:
        CSharp: SelectTower(Tower)
        VB: SelectTower(Tower)
      nameWithType:
        CSharp: GameUI.SelectTower(Tower)
        VB: GameUI.SelectTower(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.SelectTower(Tower)
        VB: TowerDefense.UI.HUD.GameUI.SelectTower(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SelectTower
        path: ''
        startLine: 9432
      summary: "\nActivates the tower controller UI with the specific information\n"
      example: []
      syntax:
        content:
          CSharp: public void SelectTower(Tower tower)
          VB: Public Sub SelectTower(tower As Tower)
        parameters:
        - id: tower
          type: Tower
          description: "\nThe tower controller information to use\n"
      overload: TowerDefense.UI.HUD.GameUI.SelectTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.State: 
        TowerDefense.UI.HUD.GameUI.State.Normal: 
    - id: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower
      commentId: M:TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower
      language: CSharp
      name:
        CSharp: UpgradeSelectedTower()
        VB: UpgradeSelectedTower()
      nameWithType:
        CSharp: GameUI.UpgradeSelectedTower()
        VB: GameUI.UpgradeSelectedTower()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower()
        VB: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: UpgradeSelectedTower
        path: ''
        startLine: 9459
      summary: "\nUpgrades <xref href=\"TowerDefense.UI.HUD.GameUI.currentSelectedTower\" data-throw-if-not-resolved=\"false\"></xref>, if possible\n"
      example: []
      syntax:
        content:
          CSharp: public void UpgradeSelectedTower()
          VB: Public Sub UpgradeSelectedTower
      overload: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.currentSelectedTower: 
        TowerDefense.UI.HUD.GameUI.State: 
        TowerDefense.UI.HUD.GameUI.State.Normal: 
    - id: TowerDefense.UI.HUD.GameUI.SellSelectedTower
      commentId: M:TowerDefense.UI.HUD.GameUI.SellSelectedTower
      language: CSharp
      name:
        CSharp: SellSelectedTower()
        VB: SellSelectedTower()
      nameWithType:
        CSharp: GameUI.SellSelectedTower()
        VB: GameUI.SellSelectedTower()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.SellSelectedTower()
        VB: TowerDefense.UI.HUD.GameUI.SellSelectedTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SellSelectedTower
        path: ''
        startLine: 9490
      summary: "\nSells <xref href=\"TowerDefense.UI.HUD.GameUI.currentSelectedTower\" data-throw-if-not-resolved=\"false\"></xref> if possible\n"
      example: []
      syntax:
        content:
          CSharp: public void SellSelectedTower()
          VB: Public Sub SellSelectedTower
      overload: TowerDefense.UI.HUD.GameUI.SellSelectedTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.currentSelectedTower: 
        TowerDefense.UI.HUD.GameUI.State: 
        TowerDefense.UI.HUD.GameUI.State.Normal: 
    - id: TowerDefense.UI.HUD.GameUI.BuyTower
      commentId: M:TowerDefense.UI.HUD.GameUI.BuyTower
      language: CSharp
      name:
        CSharp: BuyTower()
        VB: BuyTower()
      nameWithType:
        CSharp: GameUI.BuyTower()
        VB: GameUI.BuyTower()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.BuyTower()
        VB: TowerDefense.UI.HUD.GameUI.BuyTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: BuyTower
        path: ''
        startLine: 9515
      summary: "\nBuys the tower and places it in the place that it currently is\n"
      example: []
      syntax:
        content:
          CSharp: public void BuyTower()
          VB: Public Sub BuyTower
      overload: TowerDefense.UI.HUD.GameUI.BuyTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.BuyTower(TowerDefense.UI.HUD.UIPointer)
      commentId: M:TowerDefense.UI.HUD.GameUI.BuyTower(TowerDefense.UI.HUD.UIPointer)
      language: CSharp
      name:
        CSharp: BuyTower(UIPointer)
        VB: BuyTower(UIPointer)
      nameWithType:
        CSharp: GameUI.BuyTower(UIPointer)
        VB: GameUI.BuyTower(UIPointer)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.BuyTower(TowerDefense.UI.HUD.UIPointer)
        VB: TowerDefense.UI.HUD.GameUI.BuyTower(TowerDefense.UI.HUD.UIPointer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: BuyTower
        path: ''
        startLine: 9540
      summary: "\nUsed to buy the tower during the build phase\nChecks currency and calls <xref href=\"TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer)\" data-throw-if-not-resolved=\"false\"></xref>\n<exception cref=\"!:InvalidOperationException\">\nThrows exception when not in a build mode or when tower is not a valid position\n</exception>\n"
      example: []
      syntax:
        content:
          CSharp: public void BuyTower(UIPointer pointer)
          VB: Public Sub BuyTower(pointer As UIPointer)
        parameters:
        - id: pointer
          type: TowerDefense.UI.HUD.UIPointer
      overload: TowerDefense.UI.HUD.GameUI.BuyTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer): 
    - id: TowerDefense.UI.HUD.GameUI.DeselectTower
      commentId: M:TowerDefense.UI.HUD.GameUI.DeselectTower
      language: CSharp
      name:
        CSharp: DeselectTower()
        VB: DeselectTower()
      nameWithType:
        CSharp: GameUI.DeselectTower()
        VB: GameUI.DeselectTower()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.DeselectTower()
        VB: TowerDefense.UI.HUD.GameUI.DeselectTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: DeselectTower
        path: ''
        startLine: 9567
      summary: "\nDeselect the current tower and hides the UI\n"
      example: []
      syntax:
        content:
          CSharp: public void DeselectTower()
          VB: Public Sub DeselectTower
      overload: TowerDefense.UI.HUD.GameUI.DeselectTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition
      commentId: M:TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition
      language: CSharp
      name:
        CSharp: IsGhostAtValidPosition()
        VB: IsGhostAtValidPosition()
      nameWithType:
        CSharp: GameUI.IsGhostAtValidPosition()
        VB: GameUI.IsGhostAtValidPosition()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition()
        VB: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: IsGhostAtValidPosition
        path: ''
        startLine: 9596
      summary: "\nChecks the position of the <xref href=\"TowerDefense.UI.HUD.GameUI.m_CurrentTower\" data-throw-if-not-resolved=\"false\"></xref> \non the <xref href=\"TowerDefense.UI.HUD.GameUI.m_CurrentArea\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsGhostAtValidPosition()
          VB: Public Function IsGhostAtValidPosition As Boolean
        return:
          type: System.Boolean
          description: "\nTrue if the placement is valid\n"
      overload: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.m_CurrentTower: 
        TowerDefense.UI.HUD.GameUI.m_CurrentArea: 
        TowerDefense.UI.HUD.GameUI.State.Normal: 
    - id: TowerDefense.UI.HUD.GameUI.IsValidPurchase
      commentId: M:TowerDefense.UI.HUD.GameUI.IsValidPurchase
      language: CSharp
      name:
        CSharp: IsValidPurchase()
        VB: IsValidPurchase()
      nameWithType:
        CSharp: GameUI.IsValidPurchase()
        VB: GameUI.IsValidPurchase()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.IsValidPurchase()
        VB: TowerDefense.UI.HUD.GameUI.IsValidPurchase()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: IsValidPurchase
        path: ''
        startLine: 9623
      summary: "\nChecks if buying the ghost tower is possible\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsValidPurchase()
          VB: Public Function IsValidPurchase As Boolean
        return:
          type: System.Boolean
          description: "\nTrue if can purchase\n"
      overload: TowerDefense.UI.HUD.GameUI.IsValidPurchase*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.PlaceTower
      commentId: M:TowerDefense.UI.HUD.GameUI.PlaceTower
      language: CSharp
      name:
        CSharp: PlaceTower()
        VB: PlaceTower()
      nameWithType:
        CSharp: GameUI.PlaceTower()
        VB: GameUI.PlaceTower()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.PlaceTower()
        VB: TowerDefense.UI.HUD.GameUI.PlaceTower()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: PlaceTower
        path: ''
        startLine: 9646
      summary: "\nPlaces a tower where the ghost tower is\n"
      example: []
      syntax:
        content:
          CSharp: public void PlaceTower()
          VB: Public Sub PlaceTower
      overload: TowerDefense.UI.HUD.GameUI.PlaceTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.m_CurrentTower: 
    - id: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost(PointerInfo)
      commentId: M:TowerDefense.UI.HUD.GameUI.IsPointerOverGhost(PointerInfo)
      language: CSharp
      name:
        CSharp: IsPointerOverGhost(PointerInfo)
        VB: IsPointerOverGhost(PointerInfo)
      nameWithType:
        CSharp: GameUI.IsPointerOverGhost(PointerInfo)
        VB: GameUI.IsPointerOverGhost(PointerInfo)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost(PointerInfo)
        VB: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost(PointerInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: IsPointerOverGhost
        path: ''
        startLine: 9675
      summary: "\nCalculates whether the given pointer is over the current tower ghost\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsPointerOverGhost(PointerInfo pointerInfo)
          VB: Public Function IsPointerOverGhost(pointerInfo As PointerInfo) As Boolean
        parameters:
        - id: pointerInfo
          type: PointerInfo
          description: "\nThe information used to check against the <xref href=\"TowerDefense.UI.HUD.GameUI.m_CurrentTower\" data-throw-if-not-resolved=\"false\"></xref>\n"
        return:
          type: System.Boolean
      overload: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.m_CurrentTower: 
    - id: TowerDefense.UI.HUD.GameUI.TrySelectTower(PointerInfo)
      commentId: M:TowerDefense.UI.HUD.GameUI.TrySelectTower(PointerInfo)
      language: CSharp
      name:
        CSharp: TrySelectTower(PointerInfo)
        VB: TrySelectTower(PointerInfo)
      nameWithType:
        CSharp: GameUI.TrySelectTower(PointerInfo)
        VB: GameUI.TrySelectTower(PointerInfo)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.TrySelectTower(PointerInfo)
        VB: TowerDefense.UI.HUD.GameUI.TrySelectTower(PointerInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: TrySelectTower
        path: ''
        startLine: 9695
      summary: "\nSelects a tower beneath the given pointer if there is one\n"
      example: []
      syntax:
        content:
          CSharp: public void TrySelectTower(PointerInfo info)
          VB: Public Sub TrySelectTower(info As PointerInfo)
        parameters:
        - id: info
          type: PointerInfo
          description: "\nThe pointer information concerning the selector of the pointer\n"
      overload: TowerDefense.UI.HUD.GameUI.TrySelectTower*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI.State.Normal: 
    - id: TowerDefense.UI.HUD.GameUI.GetGhostPosition
      commentId: M:TowerDefense.UI.HUD.GameUI.GetGhostPosition
      language: CSharp
      name:
        CSharp: GetGhostPosition()
        VB: GetGhostPosition()
      nameWithType:
        CSharp: GameUI.GetGhostPosition()
        VB: GameUI.GetGhostPosition()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.GetGhostPosition()
        VB: TowerDefense.UI.HUD.GameUI.GetGhostPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: GetGhostPosition
        path: ''
        startLine: 9722
      summary: "\nGets the world position of the ghost tower\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetGhostPosition()
          VB: Public Function GetGhostPosition As Vector3
        return:
          type: Vector3
      overload: TowerDefense.UI.HUD.GameUI.GetGhostPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter
      commentId: M:TowerDefense.UI.HUD.GameUI.MoveGhostToCenter
      language: CSharp
      name:
        CSharp: MoveGhostToCenter()
        VB: MoveGhostToCenter()
      nameWithType:
        CSharp: GameUI.MoveGhostToCenter()
        VB: GameUI.MoveGhostToCenter()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter()
        VB: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: MoveGhostToCenter
        path: ''
        startLine: 9741
      summary: "\nMoves the ghost to the center of the screen\n"
      example: []
      syntax:
        content:
          CSharp: public void MoveGhostToCenter()
          VB: Public Sub MoveGhostToCenter
      overload: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.GameUI.Awake
      commentId: M:TowerDefense.UI.HUD.GameUI.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GameUI.Awake()
        VB: GameUI.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.Awake()
        VB: TowerDefense.UI.HUD.GameUI.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Awake
        path: ''
        startLine: 9765
      summary: "\nSet initial values, cache attached components\nand configure the controls\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: TowerDefense.UI.HUD.GameUI.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.UI.HUD.GameUI.OnDestroy
      commentId: M:TowerDefense.UI.HUD.GameUI.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: GameUI.OnDestroy()
        VB: GameUI.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.OnDestroy()
        VB: TowerDefense.UI.HUD.GameUI.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDestroy
        path: ''
        startLine: 9776
      summary: "\nReset TimeScale if game is paused\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnDestroy()
          VB: Protected Overrides Sub OnDestroy
      overload: TowerDefense.UI.HUD.GameUI.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: TowerDefense.UI.HUD.GameUI.OnEnable
      commentId: M:TowerDefense.UI.HUD.GameUI.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: GameUI.OnEnable()
        VB: GameUI.OnEnable()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.OnEnable()
        VB: TowerDefense.UI.HUD.GameUI.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnEnable
        path: ''
        startLine: 9785
      summary: "\nSubscribe to the level manager\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: TowerDefense.UI.HUD.GameUI.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.GameUI.OnDisable
      commentId: M:TowerDefense.UI.HUD.GameUI.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: GameUI.OnDisable()
        VB: GameUI.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.OnDisable()
        VB: TowerDefense.UI.HUD.GameUI.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDisable
        path: ''
        startLine: 9796
      summary: "\nUnsubscribe from the level manager\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: TowerDefense.UI.HUD.GameUI.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.GameUI.WrapPointer(PointerInfo)
      commentId: M:TowerDefense.UI.HUD.GameUI.WrapPointer(PointerInfo)
      language: CSharp
      name:
        CSharp: WrapPointer(PointerInfo)
        VB: WrapPointer(PointerInfo)
      nameWithType:
        CSharp: GameUI.WrapPointer(PointerInfo)
        VB: GameUI.WrapPointer(PointerInfo)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.WrapPointer(PointerInfo)
        VB: TowerDefense.UI.HUD.GameUI.WrapPointer(PointerInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: WrapPointer
        path: ''
        startLine: 9807
      summary: "\nCreates a new UIPointer holding data object for the given pointer position\n"
      example: []
      syntax:
        content:
          CSharp: protected UIPointer WrapPointer(PointerInfo pointerInfo)
          VB: Protected Function WrapPointer(pointerInfo As PointerInfo) As UIPointer
        parameters:
        - id: pointerInfo
          type: PointerInfo
        return:
          type: TowerDefense.UI.HUD.UIPointer
      overload: TowerDefense.UI.HUD.GameUI.WrapPointer*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.GameUI.IsOverUI(PointerInfo)
      commentId: M:TowerDefense.UI.HUD.GameUI.IsOverUI(PointerInfo)
      language: CSharp
      name:
        CSharp: IsOverUI(PointerInfo)
        VB: IsOverUI(PointerInfo)
      nameWithType:
        CSharp: GameUI.IsOverUI(PointerInfo)
        VB: GameUI.IsOverUI(PointerInfo)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.IsOverUI(PointerInfo)
        VB: TowerDefense.UI.HUD.GameUI.IsOverUI(PointerInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: IsOverUI
        path: ''
        startLine: 9822
      summary: "\nChecks whether a given pointer is over any UI\n"
      example: []
      syntax:
        content:
          CSharp: protected bool IsOverUI(PointerInfo pointerInfo)
          VB: Protected Function IsOverUI(pointerInfo As PointerInfo) As Boolean
        parameters:
        - id: pointerInfo
          type: PointerInfo
          description: The pointer to test
        return:
          type: System.Boolean
          description: True if the event system reports this pointer being over UI
      overload: TowerDefense.UI.HUD.GameUI.IsOverUI*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.GameUI.MoveGhost(TowerDefense.UI.HUD.UIPointer,System.Boolean)
      commentId: M:TowerDefense.UI.HUD.GameUI.MoveGhost(TowerDefense.UI.HUD.UIPointer,System.Boolean)
      language: CSharp
      name:
        CSharp: MoveGhost(UIPointer, Boolean)
        VB: MoveGhost(UIPointer, Boolean)
      nameWithType:
        CSharp: GameUI.MoveGhost(UIPointer, Boolean)
        VB: GameUI.MoveGhost(UIPointer, Boolean)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.MoveGhost(TowerDefense.UI.HUD.UIPointer, System.Boolean)
        VB: TowerDefense.UI.HUD.GameUI.MoveGhost(TowerDefense.UI.HUD.UIPointer, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: MoveGhost
        path: ''
        startLine: 9859
      summary: "\nMove the ghost to the pointer&apos;s position\n"
      example: []
      syntax:
        content:
          CSharp: protected void MoveGhost(UIPointer pointer, bool hideWhenInvalid = true)
          VB: Protected Sub MoveGhost(pointer As UIPointer, hideWhenInvalid As Boolean = True)
        parameters:
        - id: pointer
          type: TowerDefense.UI.HUD.UIPointer
          description: The pointer to place the ghost at
        - id: hideWhenInvalid
          type: System.Boolean
          description: Optional parameter for whether the ghost should be hidden or not
      overload: TowerDefense.UI.HUD.GameUI.MoveGhost*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit(RaycastHit)
      commentId: M:TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit(RaycastHit)
      language: CSharp
      name:
        CSharp: MoveGhostWithRaycastHit(RaycastHit)
        VB: MoveGhostWithRaycastHit(RaycastHit)
      nameWithType:
        CSharp: GameUI.MoveGhostWithRaycastHit(RaycastHit)
        VB: GameUI.MoveGhostWithRaycastHit(RaycastHit)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit(RaycastHit)
        VB: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit(RaycastHit)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: MoveGhostWithRaycastHit
        path: ''
        startLine: 9884
      summary: "\nMove ghost with successful raycastHit onto m_PlacementAreaMask\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void MoveGhostWithRaycastHit(RaycastHit raycast)
          VB: Protected Overridable Sub MoveGhostWithRaycastHit(raycast As RaycastHit)
        parameters:
        - id: raycast
          type: RaycastHit
      overload: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld(Ray,System.Boolean)
      commentId: M:TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld(Ray,System.Boolean)
      language: CSharp
      name:
        CSharp: MoveGhostOntoWorld(Ray, Boolean)
        VB: MoveGhostOntoWorld(Ray, Boolean)
      nameWithType:
        CSharp: GameUI.MoveGhostOntoWorld(Ray, Boolean)
        VB: GameUI.MoveGhostOntoWorld(Ray, Boolean)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld(Ray, System.Boolean)
        VB: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld(Ray, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: MoveGhostOntoWorld
        path: ''
        startLine: 9909
      summary: "\nMove ghost with the given ray\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void MoveGhostOntoWorld(Ray ray, bool hideWhenInvalid)
          VB: Protected Overridable Sub MoveGhostOntoWorld(ray As Ray, hideWhenInvalid As Boolean)
        parameters:
        - id: ray
          type: Ray
        - id: hideWhenInvalid
          type: System.Boolean
      overload: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer)
      commentId: M:TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer)
      language: CSharp
      name:
        CSharp: PlaceGhost(UIPointer)
        VB: PlaceGhost(UIPointer)
      nameWithType:
        CSharp: GameUI.PlaceGhost(UIPointer)
        VB: GameUI.PlaceGhost(UIPointer)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer)
        VB: TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: PlaceGhost
        path: ''
        startLine: 9936
      summary: "\nPlace the ghost at the pointer&apos;s position\n"
      example: []
      syntax:
        content:
          CSharp: protected void PlaceGhost(UIPointer pointer)
          VB: Protected Sub PlaceGhost(pointer As UIPointer)
        parameters:
        - id: pointer
          type: TowerDefense.UI.HUD.UIPointer
          description: The pointer to place the ghost at
      overload: TowerDefense.UI.HUD.GameUI.PlaceGhost*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast(TowerDefense.UI.HUD.UIPointer@)
      commentId: M:TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast(TowerDefense.UI.HUD.UIPointer@)
      language: CSharp
      name:
        CSharp: PlacementAreaRaycast(ref UIPointer)
        VB: PlacementAreaRaycast(ByRef UIPointer)
      nameWithType:
        CSharp: GameUI.PlacementAreaRaycast(ref UIPointer)
        VB: GameUI.PlacementAreaRaycast(ByRef UIPointer)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast(ref TowerDefense.UI.HUD.UIPointer)
        VB: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast(ByRef TowerDefense.UI.HUD.UIPointer)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: PlacementAreaRaycast
        path: ''
        startLine: 9967
      summary: "\nRaycast onto tower placement areas\n"
      example: []
      syntax:
        content:
          CSharp: protected void PlacementAreaRaycast(ref UIPointer pointer)
          VB: Protected Sub PlacementAreaRaycast(ByRef pointer As UIPointer)
        parameters:
        - id: pointer
          type: TowerDefense.UI.HUD.UIPointer
          description: The pointer we&apos;re testing
      overload: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged
      commentId: M:TowerDefense.UI.HUD.GameUI.OnCurrencyChanged
      language: CSharp
      name:
        CSharp: OnCurrencyChanged()
        VB: OnCurrencyChanged()
      nameWithType:
        CSharp: GameUI.OnCurrencyChanged()
        VB: GameUI.OnCurrencyChanged()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged()
        VB: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnCurrencyChanged
        path: ''
        startLine: 9988
      summary: "\nModifies the valid rendering of the ghost tower once there is enough currency\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnCurrencyChanged()
          VB: Protected Overridable Sub OnCurrencyChanged
      overload: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.GameUI.OnTowerDied(DamageableBehaviour)
      commentId: M:TowerDefense.UI.HUD.GameUI.OnTowerDied(DamageableBehaviour)
      language: CSharp
      name:
        CSharp: OnTowerDied(DamageableBehaviour)
        VB: OnTowerDied(DamageableBehaviour)
      nameWithType:
        CSharp: GameUI.OnTowerDied(DamageableBehaviour)
        VB: GameUI.OnTowerDied(DamageableBehaviour)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.OnTowerDied(DamageableBehaviour)
        VB: TowerDefense.UI.HUD.GameUI.OnTowerDied(DamageableBehaviour)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnTowerDied
        path: ''
        startLine: 10009
      summary: "\nCloses the Tower UI on death of tower\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnTowerDied(DamageableBehaviour targetable)
          VB: Protected Sub OnTowerDied(targetable As DamageableBehaviour)
        parameters:
        - id: targetable
          type: DamageableBehaviour
      overload: TowerDefense.UI.HUD.GameUI.OnTowerDied*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.UI.HUD.GameUI.State
    commentId: T:TowerDefense.UI.HUD.GameUI.State
    language: CSharp
    name:
      CSharp: GameUI.State
      VB: GameUI.State
    nameWithType:
      CSharp: GameUI.State
      VB: GameUI.State
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.GameUI.State
      VB: TowerDefense.UI.HUD.GameUI.State
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: State
      path: ''
      startLine: 9065
    summary: "\nThe states the UI can be in\n"
    example: []
    syntax:
      content:
        CSharp: public enum State
        VB: Public Enum State
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.UI.HUD.GameUI.State.Normal
      commentId: F:TowerDefense.UI.HUD.GameUI.State.Normal
      language: CSharp
      name:
        CSharp: Normal
        VB: Normal
      nameWithType:
        CSharp: GameUI.State.Normal
        VB: GameUI.State.Normal
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.State.Normal
        VB: TowerDefense.UI.HUD.GameUI.State.Normal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Normal
        path: ''
        startLine: 9070
      summary: "\nThe game is in its normal state. Here the player can pan the camera, select units and towers\n"
      example: []
      syntax:
        content:
          CSharp: Normal = 0
          VB: Normal = 0
        return:
          type: TowerDefense.UI.HUD.GameUI.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.GameUI.State.Building
      commentId: F:TowerDefense.UI.HUD.GameUI.State.Building
      language: CSharp
      name:
        CSharp: Building
        VB: Building
      nameWithType:
        CSharp: GameUI.State.Building
        VB: GameUI.State.Building
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.State.Building
        VB: TowerDefense.UI.HUD.GameUI.State.Building
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Building
        path: ''
        startLine: 9075
      summary: "\nThe game is in &apos;build mode&apos;. Here the player can pan the camera, confirm or deny placement\n"
      example: []
      syntax:
        content:
          CSharp: Building = 1
          VB: Building = 1
        return:
          type: TowerDefense.UI.HUD.GameUI.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.GameUI.State.Paused
      commentId: F:TowerDefense.UI.HUD.GameUI.State.Paused
      language: CSharp
      name:
        CSharp: Paused
        VB: Paused
      nameWithType:
        CSharp: GameUI.State.Paused
        VB: GameUI.State.Paused
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.State.Paused
        VB: TowerDefense.UI.HUD.GameUI.State.Paused
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Paused
        path: ''
        startLine: 9080
      summary: "\nThe game is Paused. Here, the player can restart the level, or quit to the main menu\n"
      example: []
      syntax:
        content:
          CSharp: Paused = 2
          VB: Paused = 2
        return:
          type: TowerDefense.UI.HUD.GameUI.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.GameUI.State.GameOver
      commentId: F:TowerDefense.UI.HUD.GameUI.State.GameOver
      language: CSharp
      name:
        CSharp: GameOver
        VB: GameOver
      nameWithType:
        CSharp: GameUI.State.GameOver
        VB: GameUI.State.GameOver
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.State.GameOver
        VB: TowerDefense.UI.HUD.GameUI.State.GameOver
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: GameOver
        path: ''
        startLine: 9085
      summary: "\nThe game is over and the level was failed/completed\n"
      example: []
      syntax:
        content:
          CSharp: GameOver = 3
          VB: GameOver = 3
        return:
          type: TowerDefense.UI.HUD.GameUI.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.GameUI.State.BuildingWithDrag
      commentId: F:TowerDefense.UI.HUD.GameUI.State.BuildingWithDrag
      language: CSharp
      name:
        CSharp: BuildingWithDrag
        VB: BuildingWithDrag
      nameWithType:
        CSharp: GameUI.State.BuildingWithDrag
        VB: GameUI.State.BuildingWithDrag
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.GameUI.State.BuildingWithDrag
        VB: TowerDefense.UI.HUD.GameUI.State.BuildingWithDrag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: BuildingWithDrag
        path: ''
        startLine: 9090
      summary: "\nThe game is in &apos;build mode&apos; and the player is dragging the ghost tower\n"
      example: []
      syntax:
        content:
          CSharp: BuildingWithDrag = 4
          VB: BuildingWithDrag = 4
        return:
          type: TowerDefense.UI.HUD.GameUI.State
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.UI.HUD.PlacementTileState
    commentId: T:TowerDefense.UI.HUD.PlacementTileState
    language: CSharp
    name:
      CSharp: PlacementTileState
      VB: PlacementTileState
    nameWithType:
      CSharp: PlacementTileState
      VB: PlacementTileState
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.PlacementTileState
      VB: TowerDefense.UI.HUD.PlacementTileState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: PlacementTileState
      path: ''
      startLine: 10048
    summary: "\nStates the placement tile can be in\n"
    example: []
    syntax:
      content:
        CSharp: public enum PlacementTileState
        VB: Public Enum PlacementTileState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: TowerDefense.UI.HUD.PlacementTileState.Filled
      commentId: F:TowerDefense.UI.HUD.PlacementTileState.Filled
      language: CSharp
      name:
        CSharp: Filled
        VB: Filled
      nameWithType:
        CSharp: PlacementTileState.Filled
        VB: PlacementTileState.Filled
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlacementTileState.Filled
        VB: TowerDefense.UI.HUD.PlacementTileState.Filled
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Filled
        path: ''
        startLine: 10050
      syntax:
        content:
          CSharp: Filled = 0
          VB: Filled = 0
        return:
          type: TowerDefense.UI.HUD.PlacementTileState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: TowerDefense.UI.HUD.PlacementTileState.Empty
      commentId: F:TowerDefense.UI.HUD.PlacementTileState.Empty
      language: CSharp
      name:
        CSharp: Empty
        VB: Empty
      nameWithType:
        CSharp: PlacementTileState.Empty
        VB: PlacementTileState.Empty
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlacementTileState.Empty
        VB: TowerDefense.UI.HUD.PlacementTileState.Empty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Empty
        path: ''
        startLine: 10051
      syntax:
        content:
          CSharp: Empty = 1
          VB: Empty = 1
        return:
          type: TowerDefense.UI.HUD.PlacementTileState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: TowerDefense.UI.HUD.PlacementTile
    commentId: T:TowerDefense.UI.HUD.PlacementTile
    language: CSharp
    name:
      CSharp: PlacementTile
      VB: PlacementTile
    nameWithType:
      CSharp: PlacementTile
      VB: PlacementTile
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.PlacementTile
      VB: TowerDefense.UI.HUD.PlacementTile
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: PlacementTile
      path: ''
      startLine: 10057
    summary: "\nSimple class to illustrate tile placement locations\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlacementTile : MonoBehaviour'
        VB: >-
          Public Class PlacementTile

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.PlacementTile.emptyMaterial
      commentId: F:TowerDefense.UI.HUD.PlacementTile.emptyMaterial
      language: CSharp
      name:
        CSharp: emptyMaterial
        VB: emptyMaterial
      nameWithType:
        CSharp: PlacementTile.emptyMaterial
        VB: PlacementTile.emptyMaterial
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlacementTile.emptyMaterial
        VB: TowerDefense.UI.HUD.PlacementTile.emptyMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: emptyMaterial
        path: ''
        startLine: 10062
      summary: "\nMaterial to use when this tile is empty\n"
      example: []
      syntax:
        content:
          CSharp: public Material emptyMaterial
          VB: Public emptyMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.PlacementTile.filledMaterial
      commentId: F:TowerDefense.UI.HUD.PlacementTile.filledMaterial
      language: CSharp
      name:
        CSharp: filledMaterial
        VB: filledMaterial
      nameWithType:
        CSharp: PlacementTile.filledMaterial
        VB: PlacementTile.filledMaterial
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlacementTile.filledMaterial
        VB: TowerDefense.UI.HUD.PlacementTile.filledMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: filledMaterial
        path: ''
        startLine: 10066
      summary: "\nMaterial to use when this tile is filled\n"
      example: []
      syntax:
        content:
          CSharp: public Material filledMaterial
          VB: Public filledMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.PlacementTile.tileRenderer
      commentId: F:TowerDefense.UI.HUD.PlacementTile.tileRenderer
      language: CSharp
      name:
        CSharp: tileRenderer
        VB: tileRenderer
      nameWithType:
        CSharp: PlacementTile.tileRenderer
        VB: PlacementTile.tileRenderer
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlacementTile.tileRenderer
        VB: TowerDefense.UI.HUD.PlacementTile.tileRenderer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: tileRenderer
        path: ''
        startLine: 10070
      summary: "\nThe renderer whose material we&apos;re changing\n"
      example: []
      syntax:
        content:
          CSharp: public Renderer tileRenderer
          VB: Public tileRenderer As Renderer
        return:
          type: Renderer
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.PlacementTile.SetState(TowerDefense.UI.HUD.PlacementTileState)
      commentId: M:TowerDefense.UI.HUD.PlacementTile.SetState(TowerDefense.UI.HUD.PlacementTileState)
      language: CSharp
      name:
        CSharp: SetState(PlacementTileState)
        VB: SetState(PlacementTileState)
      nameWithType:
        CSharp: PlacementTile.SetState(PlacementTileState)
        VB: PlacementTile.SetState(PlacementTileState)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlacementTile.SetState(TowerDefense.UI.HUD.PlacementTileState)
        VB: TowerDefense.UI.HUD.PlacementTile.SetState(TowerDefense.UI.HUD.PlacementTileState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SetState
        path: ''
        startLine: 10075
      summary: "\nUpdate the state of this placement tile\n"
      example: []
      syntax:
        content:
          CSharp: public void SetState(PlacementTileState newState)
          VB: Public Sub SetState(newState As PlacementTileState)
        parameters:
        - id: newState
          type: TowerDefense.UI.HUD.PlacementTileState
      overload: TowerDefense.UI.HUD.PlacementTile.SetState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.HUD.PlayerBaseHealth
    commentId: T:TowerDefense.UI.HUD.PlayerBaseHealth
    language: CSharp
    name:
      CSharp: PlayerBaseHealth
      VB: PlayerBaseHealth
    nameWithType:
      CSharp: PlayerBaseHealth
      VB: PlayerBaseHealth
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.PlayerBaseHealth
      VB: TowerDefense.UI.HUD.PlayerBaseHealth
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: PlayerBaseHealth
      path: ''
      startLine: 10106
    summary: "\nA simple implementation of UI for player base health\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerBaseHealth : MonoBehaviour'
        VB: >-
          Public Class PlayerBaseHealth

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.PlayerBaseHealth.display
      commentId: F:TowerDefense.UI.HUD.PlayerBaseHealth.display
      language: CSharp
      name:
        CSharp: display
        VB: display
      nameWithType:
        CSharp: PlayerBaseHealth.display
        VB: PlayerBaseHealth.display
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlayerBaseHealth.display
        VB: TowerDefense.UI.HUD.PlayerBaseHealth.display
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: display
        path: ''
        startLine: 10111
      summary: "\nThe text element to display information on\n"
      example: []
      syntax:
        content:
          CSharp: public Text display
          VB: Public display As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.PlayerBaseHealth.m_MaxHealth
      commentId: F:TowerDefense.UI.HUD.PlayerBaseHealth.m_MaxHealth
      language: CSharp
      name:
        CSharp: m_MaxHealth
        VB: m_MaxHealth
      nameWithType:
        CSharp: PlayerBaseHealth.m_MaxHealth
        VB: PlayerBaseHealth.m_MaxHealth
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlayerBaseHealth.m_MaxHealth
        VB: TowerDefense.UI.HUD.PlayerBaseHealth.m_MaxHealth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_MaxHealth
        path: ''
        startLine: 10116
      summary: "\nThe highest health that the base can go to\n"
      example: []
      syntax:
        content:
          CSharp: protected float m_MaxHealth
          VB: Protected m_MaxHealth As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.PlayerBaseHealth.Start
      commentId: M:TowerDefense.UI.HUD.PlayerBaseHealth.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PlayerBaseHealth.Start()
        VB: PlayerBaseHealth.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlayerBaseHealth.Start()
        VB: TowerDefense.UI.HUD.PlayerBaseHealth.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Start
        path: ''
        startLine: 10121
      summary: "\nGet the max health of the player base\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.HUD.PlayerBaseHealth.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged(HealthChangeInfo)
      commentId: M:TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged(HealthChangeInfo)
      language: CSharp
      name:
        CSharp: OnBaseDamaged(HealthChangeInfo)
        VB: OnBaseDamaged(HealthChangeInfo)
      nameWithType:
        CSharp: PlayerBaseHealth.OnBaseDamaged(HealthChangeInfo)
        VB: PlayerBaseHealth.OnBaseDamaged(HealthChangeInfo)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged(HealthChangeInfo)
        VB: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged(HealthChangeInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnBaseDamaged
        path: ''
        startLine: 10145
      summary: "\nSubscribes to the player base health died event\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnBaseDamaged(HealthChangeInfo info)
          VB: Protected Overridable Sub OnBaseDamaged(info As HealthChangeInfo)
        parameters:
        - id: info
          type: HealthChangeInfo
          description: "\nThe associated health change information\n"
      overload: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay
      commentId: M:TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay
      language: CSharp
      name:
        CSharp: UpdateDisplay()
        VB: UpdateDisplay()
      nameWithType:
        CSharp: PlayerBaseHealth.UpdateDisplay()
        VB: PlayerBaseHealth.UpdateDisplay()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay()
        VB: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: UpdateDisplay
        path: ''
        startLine: 10153
      summary: "\nGet the current health of the home base and display it on m_Display\n"
      example: []
      syntax:
        content:
          CSharp: protected void UpdateDisplay()
          VB: Protected Sub UpdateDisplay
      overload: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: TowerDefense.UI.HUD.TowerDefenseMainMenu
    commentId: T:TowerDefense.UI.HUD.TowerDefenseMainMenu
    language: CSharp
    name:
      CSharp: TowerDefenseMainMenu
      VB: TowerDefenseMainMenu
    nameWithType:
      CSharp: TowerDefenseMainMenu
      VB: TowerDefenseMainMenu
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu
      VB: TowerDefense.UI.HUD.TowerDefenseMainMenu
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: TowerDefenseMainMenu
      path: ''
      startLine: 10173
    summary: "\nMain menu implementation for tower defense\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerDefenseMainMenu : MainMenu'
        VB: >-
          Public Class TowerDefenseMainMenu

              Inherits MainMenu
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.optionsMenu
      commentId: F:TowerDefense.UI.HUD.TowerDefenseMainMenu.optionsMenu
      language: CSharp
      name:
        CSharp: optionsMenu
        VB: optionsMenu
      nameWithType:
        CSharp: TowerDefenseMainMenu.optionsMenu
        VB: TowerDefenseMainMenu.optionsMenu
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.optionsMenu
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.optionsMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: optionsMenu
        path: ''
        startLine: 10178
      summary: "\nReference to options menu\n"
      example: []
      syntax:
        content:
          CSharp: public OptionsMenu optionsMenu
          VB: Public optionsMenu As OptionsMenu
        return:
          type: TowerDefense.UI.OptionsMenu
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.titleMenu
      commentId: F:TowerDefense.UI.HUD.TowerDefenseMainMenu.titleMenu
      language: CSharp
      name:
        CSharp: titleMenu
        VB: titleMenu
      nameWithType:
        CSharp: TowerDefenseMainMenu.titleMenu
        VB: TowerDefenseMainMenu.titleMenu
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.titleMenu
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.titleMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: titleMenu
        path: ''
        startLine: 10183
      summary: "\nReference to title menu\n"
      example: []
      syntax:
        content:
          CSharp: public SimpleMainMenuPage titleMenu
          VB: Public titleMenu As SimpleMainMenuPage
        return:
          type: SimpleMainMenuPage
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.levelSelectMenu
      commentId: F:TowerDefense.UI.HUD.TowerDefenseMainMenu.levelSelectMenu
      language: CSharp
      name:
        CSharp: levelSelectMenu
        VB: levelSelectMenu
      nameWithType:
        CSharp: TowerDefenseMainMenu.levelSelectMenu
        VB: TowerDefenseMainMenu.levelSelectMenu
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.levelSelectMenu
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.levelSelectMenu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: levelSelectMenu
        path: ''
        startLine: 10188
      summary: "\nReference to level select menu\n"
      example: []
      syntax:
        content:
          CSharp: public LevelSelectScreen levelSelectMenu
          VB: Public levelSelectMenu As LevelSelectScreen
        return:
          type: TowerDefense.UI.LevelSelectScreen
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu
      commentId: M:TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu
      language: CSharp
      name:
        CSharp: ShowOptionsMenu()
        VB: ShowOptionsMenu()
      nameWithType:
        CSharp: TowerDefenseMainMenu.ShowOptionsMenu()
        VB: TowerDefenseMainMenu.ShowOptionsMenu()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu()
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ShowOptionsMenu
        path: ''
        startLine: 10193
      summary: "\nBring up the options menu\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowOptionsMenu()
          VB: Public Sub ShowOptionsMenu
      overload: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu
      commentId: M:TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu
      language: CSharp
      name:
        CSharp: ShowLevelSelectMenu()
        VB: ShowLevelSelectMenu()
      nameWithType:
        CSharp: TowerDefenseMainMenu.ShowLevelSelectMenu()
        VB: TowerDefenseMainMenu.ShowLevelSelectMenu()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu()
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ShowLevelSelectMenu
        path: ''
        startLine: 10201
      summary: "\nBring up the options menu\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowLevelSelectMenu()
          VB: Public Sub ShowLevelSelectMenu
      overload: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen
      commentId: M:TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen
      language: CSharp
      name:
        CSharp: ShowTitleScreen()
        VB: ShowTitleScreen()
      nameWithType:
        CSharp: TowerDefenseMainMenu.ShowTitleScreen()
        VB: TowerDefenseMainMenu.ShowTitleScreen()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen()
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ShowTitleScreen
        path: ''
        startLine: 10209
      summary: "\nReturns to the title screen\n"
      example: []
      syntax:
        content:
          CSharp: public void ShowTitleScreen()
          VB: Public Sub ShowTitleScreen
      overload: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake
      commentId: M:TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: TowerDefenseMainMenu.Awake()
        VB: TowerDefenseMainMenu.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake()
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Awake
        path: ''
        startLine: 10217
      summary: "\nSet initial page\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update
      commentId: M:TowerDefense.UI.HUD.TowerDefenseMainMenu.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TowerDefenseMainMenu.Update()
        VB: TowerDefenseMainMenu.Update()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update()
        VB: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Update
        path: ''
        startLine: 10225
      summary: "\nEscape key input\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.UI.HUD.TowerInfoDisplay
    commentId: T:TowerDefense.UI.HUD.TowerInfoDisplay
    language: CSharp
    name:
      CSharp: TowerInfoDisplay
      VB: TowerInfoDisplay
    nameWithType:
      CSharp: TowerInfoDisplay
      VB: TowerInfoDisplay
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.TowerInfoDisplay
      VB: TowerDefense.UI.HUD.TowerInfoDisplay
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: TowerInfoDisplay
      path: ''
      startLine: 10250
    summary: "\nUsed to display infomation about a tower using Unity UI\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerInfoDisplay : MonoBehaviour'
        VB: >-
          Public Class TowerInfoDisplay

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.towerName
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.towerName
      language: CSharp
      name:
        CSharp: towerName
        VB: towerName
      nameWithType:
        CSharp: TowerInfoDisplay.towerName
        VB: TowerInfoDisplay.towerName
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.towerName
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.towerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerName
        path: ''
        startLine: 10255
      summary: "\nThe text component for the name\n"
      example: []
      syntax:
        content:
          CSharp: public Text towerName
          VB: Public towerName As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.description
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: TowerInfoDisplay.description
        VB: TowerInfoDisplay.description
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.description
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: description
        path: ''
        startLine: 10260
      summary: "\nThe text component for the description\n"
      example: []
      syntax:
        content:
          CSharp: public Text description
          VB: Public description As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.dps
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.dps
      language: CSharp
      name:
        CSharp: dps
        VB: dps
      nameWithType:
        CSharp: TowerInfoDisplay.dps
        VB: TowerInfoDisplay.dps
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.dps
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.dps
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: dps
        path: ''
        startLine: 10265
      summary: "\nThe text component for the description\n"
      example: []
      syntax:
        content:
          CSharp: public Text dps
          VB: Public dps As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.level
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.level
      language: CSharp
      name:
        CSharp: level
        VB: level
      nameWithType:
        CSharp: TowerInfoDisplay.level
        VB: TowerInfoDisplay.level
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.level
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.level
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: level
        path: ''
        startLine: 10270
      summary: "\nThe text component for the level\n"
      example: []
      syntax:
        content:
          CSharp: public Text level
          VB: Public level As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.health
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.health
      language: CSharp
      name:
        CSharp: health
        VB: health
      nameWithType:
        CSharp: TowerInfoDisplay.health
        VB: TowerInfoDisplay.health
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.health
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.health
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: health
        path: ''
        startLine: 10275
      summary: "\nThe text component for the health\n"
      example: []
      syntax:
        content:
          CSharp: public Text health
          VB: Public health As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.dimensions
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.dimensions
      language: CSharp
      name:
        CSharp: dimensions
        VB: dimensions
      nameWithType:
        CSharp: TowerInfoDisplay.dimensions
        VB: TowerInfoDisplay.dimensions
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.dimensions
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.dimensions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: dimensions
        path: ''
        startLine: 10280
      summary: "\nThe text component for the dimensions\n"
      example: []
      syntax:
        content:
          CSharp: public Text dimensions
          VB: Public dimensions As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.upgradeCost
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.upgradeCost
      language: CSharp
      name:
        CSharp: upgradeCost
        VB: upgradeCost
      nameWithType:
        CSharp: TowerInfoDisplay.upgradeCost
        VB: TowerInfoDisplay.upgradeCost
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.upgradeCost
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.upgradeCost
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: upgradeCost
        path: ''
        startLine: 10285
      summary: "\nThe text component for the dimensions\n"
      example: []
      syntax:
        content:
          CSharp: public Text upgradeCost
          VB: Public upgradeCost As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.sellPrice
      commentId: F:TowerDefense.UI.HUD.TowerInfoDisplay.sellPrice
      language: CSharp
      name:
        CSharp: sellPrice
        VB: sellPrice
      nameWithType:
        CSharp: TowerInfoDisplay.sellPrice
        VB: TowerInfoDisplay.sellPrice
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.sellPrice
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.sellPrice
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: sellPrice
        path: ''
        startLine: 10290
      summary: "\nThe text component for the dimensions\n"
      example: []
      syntax:
        content:
          CSharp: public Text sellPrice
          VB: Public sellPrice As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower)
      commentId: M:TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower)
      language: CSharp
      name:
        CSharp: Show(Tower)
        VB: Show(Tower)
      nameWithType:
        CSharp: TowerInfoDisplay.Show(Tower)
        VB: TowerInfoDisplay.Show(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower)
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Show
        path: ''
        startLine: 10298
      summary: "\nDraws the tower data on to the canvas, if the relevant text components are populated\n"
      example: []
      syntax:
        content:
          CSharp: public void Show(Tower tower)
          VB: Public Sub Show(tower As Tower)
        parameters:
        - id: tower
          type: Tower
          description: "\nThe tower to gain info from\n"
      overload: TowerDefense.UI.HUD.TowerInfoDisplay.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower,System.Int32)
      commentId: M:TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower,System.Int32)
      language: CSharp
      name:
        CSharp: Show(Tower, Int32)
        VB: Show(Tower, Int32)
      nameWithType:
        CSharp: TowerInfoDisplay.Show(Tower, Int32)
        VB: TowerInfoDisplay.Show(Tower, Int32)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower, System.Int32)
        VB: TowerDefense.UI.HUD.TowerInfoDisplay.Show(Tower, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Show
        path: ''
        startLine: 10309
      summary: "\nDraws the tower data on to the canvas, if the relevant text components are populated\n"
      example: []
      syntax:
        content:
          CSharp: public void Show(Tower tower, int levelOfTower)
          VB: Public Sub Show(tower As Tower, levelOfTower As Integer)
        parameters:
        - id: tower
          type: Tower
          description: The tower to gain info from
        - id: levelOfTower
          type: System.Int32
          description: The level of the tower
      overload: TowerDefense.UI.HUD.TowerInfoDisplay.Show*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.HUD.TowerPlacementGhost
    commentId: T:TowerDefense.UI.HUD.TowerPlacementGhost
    language: CSharp
    name:
      CSharp: TowerPlacementGhost
      VB: TowerPlacementGhost
    nameWithType:
      CSharp: TowerPlacementGhost
      VB: TowerPlacementGhost
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.TowerPlacementGhost
      VB: TowerDefense.UI.HUD.TowerPlacementGhost
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: TowerPlacementGhost
      path: ''
      startLine: 10357
    summary: "\nTower placement &quot;ghost&quot; that indicates the position of the tower to be placed and its validity for placement.\nThis is built with mouse in mind for testing, but it should be possible to abstract a lot of this into a child \nclass for the purposes of a touch UI.\n\nShould exist on its own layer to ensure best placement.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerPlacementGhost : MonoBehaviour'
        VB: >-
          Public Class TowerPlacementGhost

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.controller
      commentId: P:TowerDefense.UI.HUD.TowerPlacementGhost.controller
      language: CSharp
      name:
        CSharp: controller
        VB: controller
      nameWithType:
        CSharp: TowerPlacementGhost.controller
        VB: TowerPlacementGhost.controller
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.controller
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.controller
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: controller
        path: ''
        startLine: 10363
      summary: "\nThe tower we represent\n"
      example: []
      syntax:
        content:
          CSharp: public Tower controller { get; }
          VB: Public ReadOnly Property controller As Tower
        parameters: []
        return:
          type: Tower
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.controller*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizer
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizer
      language: CSharp
      name:
        CSharp: radiusVisualizer
        VB: radiusVisualizer
      nameWithType:
        CSharp: TowerPlacementGhost.radiusVisualizer
        VB: TowerPlacementGhost.radiusVisualizer
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizer
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: radiusVisualizer
        path: ''
        startLine: 10368
      summary: "\nPrefab used to visualize effect radius of tower\n"
      example: []
      syntax:
        content:
          CSharp: public GameObject radiusVisualizer
          VB: Public radiusVisualizer As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizerHeight
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizerHeight
      language: CSharp
      name:
        CSharp: radiusVisualizerHeight
        VB: radiusVisualizerHeight
      nameWithType:
        CSharp: TowerPlacementGhost.radiusVisualizerHeight
        VB: TowerPlacementGhost.radiusVisualizerHeight
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizerHeight
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.radiusVisualizerHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: radiusVisualizerHeight
        path: ''
        startLine: 10373
      summary: "\nOffset height for radius visualizer\n"
      example: []
      syntax:
        content:
          CSharp: public float radiusVisualizerHeight
          VB: Public radiusVisualizerHeight As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.dampSpeed
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.dampSpeed
      language: CSharp
      name:
        CSharp: dampSpeed
        VB: dampSpeed
      nameWithType:
        CSharp: TowerPlacementGhost.dampSpeed
        VB: TowerPlacementGhost.dampSpeed
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.dampSpeed
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.dampSpeed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: dampSpeed
        path: ''
        startLine: 10378
      summary: "\nMovement damping factor\n"
      example: []
      syntax:
        content:
          CSharp: public float dampSpeed
          VB: Public dampSpeed As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.material
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.material
      language: CSharp
      name:
        CSharp: material
        VB: material
      nameWithType:
        CSharp: TowerPlacementGhost.material
        VB: TowerPlacementGhost.material
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.material
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.material
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: material
        path: ''
        startLine: 10383
      summary: "\nThe two materials used to represent valid and invalid placement, respectively\n"
      example: []
      syntax:
        content:
          CSharp: public Material material
          VB: Public material As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.invalidPositionMaterial
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.invalidPositionMaterial
      language: CSharp
      name:
        CSharp: invalidPositionMaterial
        VB: invalidPositionMaterial
      nameWithType:
        CSharp: TowerPlacementGhost.invalidPositionMaterial
        VB: TowerPlacementGhost.invalidPositionMaterial
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.invalidPositionMaterial
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.invalidPositionMaterial
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: invalidPositionMaterial
        path: ''
        startLine: 10385
      syntax:
        content:
          CSharp: public Material invalidPositionMaterial
          VB: Public invalidPositionMaterial As Material
        return:
          type: Material
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.m_MeshRenderers
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.m_MeshRenderers
      language: CSharp
      name:
        CSharp: m_MeshRenderers
        VB: m_MeshRenderers
      nameWithType:
        CSharp: TowerPlacementGhost.m_MeshRenderers
        VB: TowerPlacementGhost.m_MeshRenderers
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.m_MeshRenderers
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.m_MeshRenderers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_MeshRenderers
        path: ''
        startLine: 10390
      summary: "\nThe list of attached mesh renderers \n"
      example: []
      syntax:
        content:
          CSharp: protected MeshRenderer[] m_MeshRenderers
          VB: Protected m_MeshRenderers As MeshRenderer()
        return:
          type: MeshRenderer[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.m_MoveVel
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.m_MoveVel
      language: CSharp
      name:
        CSharp: m_MoveVel
        VB: m_MoveVel
      nameWithType:
        CSharp: TowerPlacementGhost.m_MoveVel
        VB: TowerPlacementGhost.m_MoveVel
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.m_MoveVel
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.m_MoveVel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_MoveVel
        path: ''
        startLine: 10395
      summary: "\nMovement velocity for smooth damping\n"
      example: []
      syntax:
        content:
          CSharp: protected Vector3 m_MoveVel
          VB: Protected m_MoveVel As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.m_TargetPosition
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.m_TargetPosition
      language: CSharp
      name:
        CSharp: m_TargetPosition
        VB: m_TargetPosition
      nameWithType:
        CSharp: TowerPlacementGhost.m_TargetPosition
        VB: TowerPlacementGhost.m_TargetPosition
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.m_TargetPosition
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.m_TargetPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_TargetPosition
        path: ''
        startLine: 10400
      summary: "\nTarget world position\n"
      example: []
      syntax:
        content:
          CSharp: protected Vector3 m_TargetPosition
          VB: Protected m_TargetPosition As Vector3
        return:
          type: Vector3
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.m_ValidPos
      commentId: F:TowerDefense.UI.HUD.TowerPlacementGhost.m_ValidPos
      language: CSharp
      name:
        CSharp: m_ValidPos
        VB: m_ValidPos
      nameWithType:
        CSharp: TowerPlacementGhost.m_ValidPos
        VB: TowerPlacementGhost.m_ValidPos
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.m_ValidPos
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.m_ValidPos
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_ValidPos
        path: ''
        startLine: 10405
      summary: "\nTrue if we&apos;re at a valid world position\n"
      example: []
      syntax:
        content:
          CSharp: protected bool m_ValidPos
          VB: Protected m_ValidPos As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
      commentId: P:TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
      language: CSharp
      name:
        CSharp: ghostCollider
        VB: ghostCollider
      nameWithType:
        CSharp: TowerPlacementGhost.ghostCollider
        VB: TowerPlacementGhost.ghostCollider
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: ghostCollider
        path: ''
        startLine: 10410
      summary: "\nThe attached the collider\n"
      example: []
      syntax:
        content:
          CSharp: public Collider ghostCollider { get; }
          VB: Public ReadOnly Property ghostCollider As Collider
        parameters: []
        return:
          type: Collider
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize(Tower)
      commentId: M:TowerDefense.UI.HUD.TowerPlacementGhost.Initialize(Tower)
      language: CSharp
      name:
        CSharp: Initialize(Tower)
        VB: Initialize(Tower)
      nameWithType:
        CSharp: TowerPlacementGhost.Initialize(Tower)
        VB: TowerPlacementGhost.Initialize(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize(Tower)
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Initialize
        path: ''
        startLine: 10416
      summary: "\nInitialize this ghost\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Initialize(Tower tower)
          VB: Public Overridable Sub Initialize(tower As Tower)
        parameters:
        - id: tower
          type: Tower
          description: The tower controller we&apos;re a ghost of
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.Hide
      commentId: M:TowerDefense.UI.HUD.TowerPlacementGhost.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: TowerPlacementGhost.Hide()
        VB: TowerPlacementGhost.Hide()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.Hide()
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Hide
        path: ''
        startLine: 10432
      summary: "\nHide this ghost\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Hide()
          VB: Public Overridable Sub Hide
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.Hide*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.Show
      commentId: M:TowerDefense.UI.HUD.TowerPlacementGhost.Show
      language: CSharp
      name:
        CSharp: Show()
        VB: Show()
      nameWithType:
        CSharp: TowerPlacementGhost.Show()
        VB: TowerPlacementGhost.Show()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.Show()
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.Show()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Show
        path: ''
        startLine: 10440
      summary: "\nShow this ghost\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Show()
          VB: Public Overridable Sub Show
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.Show*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.Move(Vector3,Quaternion,System.Boolean)
      commentId: M:TowerDefense.UI.HUD.TowerPlacementGhost.Move(Vector3,Quaternion,System.Boolean)
      language: CSharp
      name:
        CSharp: Move(Vector3, Quaternion, Boolean)
        VB: Move(Vector3, Quaternion, Boolean)
      nameWithType:
        CSharp: TowerPlacementGhost.Move(Vector3, Quaternion, Boolean)
        VB: TowerPlacementGhost.Move(Vector3, Quaternion, Boolean)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.Move(Vector3, Quaternion, System.Boolean)
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.Move(Vector3, Quaternion, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Move
        path: ''
        startLine: 10458
      summary: "\nMoves this ghost to a given world position\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Move(Vector3 worldPosition, Quaternion rotation, bool validLocation)
          VB: Public Overridable Sub Move(worldPosition As Vector3, rotation As Quaternion, validLocation As Boolean)
        parameters:
        - id: worldPosition
          type: Vector3
          description: The new position to move to in world space
        - id: rotation
          type: Quaternion
          description: The new rotation to adopt, in world space
        - id: validLocation
          type: System.Boolean
          description: >-
            Whether or not this position is valid. Ghost may display differently

            over invalid locations
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.Move*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerPlacementGhost.Update
      commentId: M:TowerDefense.UI.HUD.TowerPlacementGhost.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TowerPlacementGhost.Update()
        VB: TowerPlacementGhost.Update()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerPlacementGhost.Update()
        VB: TowerDefense.UI.HUD.TowerPlacementGhost.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Update
        path: ''
        startLine: 10480
      summary: "\nDamp the movement of the ghost\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.UI.HUD.TowerPlacementGhost.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: TowerDefense.UI.HUD.TowerSpawnButton
    commentId: T:TowerDefense.UI.HUD.TowerSpawnButton
    language: CSharp
    name:
      CSharp: TowerSpawnButton
      VB: TowerSpawnButton
    nameWithType:
      CSharp: TowerSpawnButton
      VB: TowerSpawnButton
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.TowerSpawnButton
      VB: TowerDefense.UI.HUD.TowerSpawnButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: TowerSpawnButton
      path: ''
      startLine: 10510
    summary: "\nA button controller for spawning towers\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerSpawnButton : MonoBehaviour, IDragHandler'
        VB: >-
          Public Class TowerSpawnButton

              Inherits MonoBehaviour

              Implements IDragHandler
    inheritance:
    - System.Object
    implements:
    - IDragHandler
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.TowerSpawnButton.buttonText
      commentId: F:TowerDefense.UI.HUD.TowerSpawnButton.buttonText
      language: CSharp
      name:
        CSharp: buttonText
        VB: buttonText
      nameWithType:
        CSharp: TowerSpawnButton.buttonText
        VB: TowerSpawnButton.buttonText
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.buttonText
        VB: TowerDefense.UI.HUD.TowerSpawnButton.buttonText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: buttonText
        path: ''
        startLine: 10516
      summary: "\nThe text attached to the button\n"
      example: []
      syntax:
        content:
          CSharp: public Text buttonText
          VB: Public buttonText As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.towerIcon
      commentId: F:TowerDefense.UI.HUD.TowerSpawnButton.towerIcon
      language: CSharp
      name:
        CSharp: towerIcon
        VB: towerIcon
      nameWithType:
        CSharp: TowerSpawnButton.towerIcon
        VB: TowerSpawnButton.towerIcon
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.towerIcon
        VB: TowerDefense.UI.HUD.TowerSpawnButton.towerIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerIcon
        path: ''
        startLine: 10518
      syntax:
        content:
          CSharp: public Image towerIcon
          VB: Public towerIcon As Image
        return:
          type: Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.buyButton
      commentId: F:TowerDefense.UI.HUD.TowerSpawnButton.buyButton
      language: CSharp
      name:
        CSharp: buyButton
        VB: buyButton
      nameWithType:
        CSharp: TowerSpawnButton.buyButton
        VB: TowerSpawnButton.buyButton
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.buyButton
        VB: TowerDefense.UI.HUD.TowerSpawnButton.buyButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: buyButton
        path: ''
        startLine: 10520
      syntax:
        content:
          CSharp: public Button buyButton
          VB: Public buyButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.energyIcon
      commentId: F:TowerDefense.UI.HUD.TowerSpawnButton.energyIcon
      language: CSharp
      name:
        CSharp: energyIcon
        VB: energyIcon
      nameWithType:
        CSharp: TowerSpawnButton.energyIcon
        VB: TowerSpawnButton.energyIcon
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.energyIcon
        VB: TowerDefense.UI.HUD.TowerSpawnButton.energyIcon
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: energyIcon
        path: ''
        startLine: 10522
      syntax:
        content:
          CSharp: public Image energyIcon
          VB: Public energyIcon As Image
        return:
          type: Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.energyDefaultColor
      commentId: F:TowerDefense.UI.HUD.TowerSpawnButton.energyDefaultColor
      language: CSharp
      name:
        CSharp: energyDefaultColor
        VB: energyDefaultColor
      nameWithType:
        CSharp: TowerSpawnButton.energyDefaultColor
        VB: TowerSpawnButton.energyDefaultColor
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.energyDefaultColor
        VB: TowerDefense.UI.HUD.TowerSpawnButton.energyDefaultColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: energyDefaultColor
        path: ''
        startLine: 10524
      syntax:
        content:
          CSharp: public Color energyDefaultColor
          VB: Public energyDefaultColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.energyInvalidColor
      commentId: F:TowerDefense.UI.HUD.TowerSpawnButton.energyInvalidColor
      language: CSharp
      name:
        CSharp: energyInvalidColor
        VB: energyInvalidColor
      nameWithType:
        CSharp: TowerSpawnButton.energyInvalidColor
        VB: TowerSpawnButton.energyInvalidColor
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.energyInvalidColor
        VB: TowerDefense.UI.HUD.TowerSpawnButton.energyInvalidColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: energyInvalidColor
        path: ''
        startLine: 10526
      syntax:
        content:
          CSharp: public Color energyInvalidColor
          VB: Public energyInvalidColor As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.buttonTapped
      commentId: E:TowerDefense.UI.HUD.TowerSpawnButton.buttonTapped
      language: CSharp
      name:
        CSharp: buttonTapped
        VB: buttonTapped
      nameWithType:
        CSharp: TowerSpawnButton.buttonTapped
        VB: TowerSpawnButton.buttonTapped
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.buttonTapped
        VB: TowerDefense.UI.HUD.TowerSpawnButton.buttonTapped
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: buttonTapped
        path: ''
        startLine: 10531
      summary: "\nFires when the button is tapped\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Tower> buttonTapped
          VB: Public Event buttonTapped As Action(Of Tower)
        return:
          type: Action{Tower}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.draggedOff
      commentId: E:TowerDefense.UI.HUD.TowerSpawnButton.draggedOff
      language: CSharp
      name:
        CSharp: draggedOff
        VB: draggedOff
      nameWithType:
        CSharp: TowerSpawnButton.draggedOff
        VB: TowerSpawnButton.draggedOff
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.draggedOff
        VB: TowerDefense.UI.HUD.TowerSpawnButton.draggedOff
      type: Event
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: draggedOff
        path: ''
        startLine: 10537
      summary: "\nFires when the pointer is outside of the button bounds\nand still down\n"
      example: []
      syntax:
        content:
          CSharp: public event Action<Tower> draggedOff
          VB: Public Event draggedOff As Action(Of Tower)
        return:
          type: Action{Tower}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag(PointerEventData)
      commentId: M:TowerDefense.UI.HUD.TowerSpawnButton.OnDrag(PointerEventData)
      language: CSharp
      name:
        CSharp: OnDrag(PointerEventData)
        VB: OnDrag(PointerEventData)
      nameWithType:
        CSharp: TowerSpawnButton.OnDrag(PointerEventData)
        VB: TowerSpawnButton.OnDrag(PointerEventData)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag(PointerEventData)
        VB: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag(PointerEventData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDrag
        path: ''
        startLine: 10558
      summary: "\nChecks if the pointer is out of bounds\nand then fires the draggedOff event\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnDrag(PointerEventData eventData)
          VB: Public Overridable Sub OnDrag(eventData As PointerEventData)
        parameters:
        - id: eventData
          type: PointerEventData
      overload: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton(Tower)
      commentId: M:TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton(Tower)
      language: CSharp
      name:
        CSharp: InitializeButton(Tower)
        VB: InitializeButton(Tower)
      nameWithType:
        CSharp: TowerSpawnButton.InitializeButton(Tower)
        VB: TowerSpawnButton.InitializeButton(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton(Tower)
        VB: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: InitializeButton
        path: ''
        startLine: 10575
      summary: "\nDefine the button information for the tower\n"
      example: []
      syntax:
        content:
          CSharp: public void InitializeButton(Tower towerData)
          VB: Public Sub InitializeButton(towerData As Tower)
        parameters:
        - id: towerData
          type: Tower
          description: "\nThe tower to initialize the button with\n"
      overload: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerSpawnButton.Awake
      commentId: M:TowerDefense.UI.HUD.TowerSpawnButton.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: TowerSpawnButton.Awake()
        VB: TowerSpawnButton.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.Awake()
        VB: TowerDefense.UI.HUD.TowerSpawnButton.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Awake
        path: ''
        startLine: 10605
      summary: "\nCache the rect transform\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.UI.HUD.TowerSpawnButton.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy
      commentId: M:TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: TowerSpawnButton.OnDestroy()
        VB: TowerSpawnButton.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy()
        VB: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDestroy
        path: ''
        startLine: 10613
      summary: "\nUnsubscribe from events\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerSpawnButton.OnClick
      commentId: M:TowerDefense.UI.HUD.TowerSpawnButton.OnClick
      language: CSharp
      name:
        CSharp: OnClick()
        VB: OnClick()
      nameWithType:
        CSharp: TowerSpawnButton.OnClick()
        VB: TowerSpawnButton.OnClick()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerSpawnButton.OnClick()
        VB: TowerDefense.UI.HUD.TowerSpawnButton.OnClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnClick
        path: ''
        startLine: 10624
      summary: "\nThe click for when the button is tapped\n"
      example: []
      syntax:
        content:
          CSharp: public void OnClick()
          VB: Public Sub OnClick
      overload: TowerDefense.UI.HUD.TowerSpawnButton.OnClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: TowerDefense.UI.HUD.TowerUI
    commentId: T:TowerDefense.UI.HUD.TowerUI
    language: CSharp
    name:
      CSharp: TowerUI
      VB: TowerUI
    nameWithType:
      CSharp: TowerUI
      VB: TowerUI
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.TowerUI
      VB: TowerDefense.UI.HUD.TowerUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: TowerUI
      path: ''
      startLine: 10666
    summary: "\nControls the UI objects that draw the tower data\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TowerUI : MonoBehaviour'
        VB: >-
          Public Class TowerUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.TowerUI.towerName
      commentId: F:TowerDefense.UI.HUD.TowerUI.towerName
      language: CSharp
      name:
        CSharp: towerName
        VB: towerName
      nameWithType:
        CSharp: TowerUI.towerName
        VB: TowerUI.towerName
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.towerName
        VB: TowerDefense.UI.HUD.TowerUI.towerName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerName
        path: ''
        startLine: 10672
      summary: "\nThe text object for the name\n"
      example: []
      syntax:
        content:
          CSharp: public Text towerName
          VB: Public towerName As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.description
      commentId: F:TowerDefense.UI.HUD.TowerUI.description
      language: CSharp
      name:
        CSharp: description
        VB: description
      nameWithType:
        CSharp: TowerUI.description
        VB: TowerUI.description
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.description
        VB: TowerDefense.UI.HUD.TowerUI.description
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: description
        path: ''
        startLine: 10677
      summary: "\nThe text object for the description\n"
      example: []
      syntax:
        content:
          CSharp: public Text description
          VB: Public description As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.upgradeDescription
      commentId: F:TowerDefense.UI.HUD.TowerUI.upgradeDescription
      language: CSharp
      name:
        CSharp: upgradeDescription
        VB: upgradeDescription
      nameWithType:
        CSharp: TowerUI.upgradeDescription
        VB: TowerUI.upgradeDescription
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.upgradeDescription
        VB: TowerDefense.UI.HUD.TowerUI.upgradeDescription
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: upgradeDescription
        path: ''
        startLine: 10679
      syntax:
        content:
          CSharp: public Text upgradeDescription
          VB: Public upgradeDescription As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.sellButton
      commentId: F:TowerDefense.UI.HUD.TowerUI.sellButton
      language: CSharp
      name:
        CSharp: sellButton
        VB: sellButton
      nameWithType:
        CSharp: TowerUI.sellButton
        VB: TowerUI.sellButton
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.sellButton
        VB: TowerDefense.UI.HUD.TowerUI.sellButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: sellButton
        path: ''
        startLine: 10684
      summary: "\nThe attached sell button\n"
      example: []
      syntax:
        content:
          CSharp: public Button sellButton
          VB: Public sellButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.upgradeButton
      commentId: F:TowerDefense.UI.HUD.TowerUI.upgradeButton
      language: CSharp
      name:
        CSharp: upgradeButton
        VB: upgradeButton
      nameWithType:
        CSharp: TowerUI.upgradeButton
        VB: TowerUI.upgradeButton
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.upgradeButton
        VB: TowerDefense.UI.HUD.TowerUI.upgradeButton
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: upgradeButton
        path: ''
        startLine: 10689
      summary: "\nThe attached upgrade button\n"
      example: []
      syntax:
        content:
          CSharp: public Button upgradeButton
          VB: Public upgradeButton As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.towerInfoDisplay
      commentId: F:TowerDefense.UI.HUD.TowerUI.towerInfoDisplay
      language: CSharp
      name:
        CSharp: towerInfoDisplay
        VB: towerInfoDisplay
      nameWithType:
        CSharp: TowerUI.towerInfoDisplay
        VB: TowerUI.towerInfoDisplay
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.towerInfoDisplay
        VB: TowerDefense.UI.HUD.TowerUI.towerInfoDisplay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: towerInfoDisplay
        path: ''
        startLine: 10694
      summary: "\nComponent to display the relevant information of the tower\n"
      example: []
      syntax:
        content:
          CSharp: public TowerInfoDisplay towerInfoDisplay
          VB: Public towerInfoDisplay As TowerInfoDisplay
        return:
          type: TowerDefense.UI.HUD.TowerInfoDisplay
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.panelRectTransform
      commentId: F:TowerDefense.UI.HUD.TowerUI.panelRectTransform
      language: CSharp
      name:
        CSharp: panelRectTransform
        VB: panelRectTransform
      nameWithType:
        CSharp: TowerUI.panelRectTransform
        VB: TowerUI.panelRectTransform
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.panelRectTransform
        VB: TowerDefense.UI.HUD.TowerUI.panelRectTransform
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: panelRectTransform
        path: ''
        startLine: 10696
      syntax:
        content:
          CSharp: public RectTransform panelRectTransform
          VB: Public panelRectTransform As RectTransform
        return:
          type: RectTransform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.confirmationButtons
      commentId: F:TowerDefense.UI.HUD.TowerUI.confirmationButtons
      language: CSharp
      name:
        CSharp: confirmationButtons
        VB: confirmationButtons
      nameWithType:
        CSharp: TowerUI.confirmationButtons
        VB: TowerUI.confirmationButtons
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.confirmationButtons
        VB: TowerDefense.UI.HUD.TowerUI.confirmationButtons
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: confirmationButtons
        path: ''
        startLine: 10698
      syntax:
        content:
          CSharp: public GameObject[] confirmationButtons
          VB: Public confirmationButtons As GameObject()
        return:
          type: GameObject[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.TowerUI.m_GameCamera
      commentId: F:TowerDefense.UI.HUD.TowerUI.m_GameCamera
      language: CSharp
      name:
        CSharp: m_GameCamera
        VB: m_GameCamera
      nameWithType:
        CSharp: TowerUI.m_GameCamera
        VB: TowerUI.m_GameCamera
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.m_GameCamera
        VB: TowerDefense.UI.HUD.TowerUI.m_GameCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_GameCamera
        path: ''
        startLine: 10703
      summary: "\nThe main game camera\n"
      example: []
      syntax:
        content:
          CSharp: protected Camera m_GameCamera
          VB: Protected m_GameCamera As Camera
        return:
          type: Camera
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerUI.m_Tower
      commentId: F:TowerDefense.UI.HUD.TowerUI.m_Tower
      language: CSharp
      name:
        CSharp: m_Tower
        VB: m_Tower
      nameWithType:
        CSharp: TowerUI.m_Tower
        VB: TowerUI.m_Tower
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.m_Tower
        VB: TowerDefense.UI.HUD.TowerUI.m_Tower
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_Tower
        path: ''
        startLine: 10708
      summary: "\nThe current tower to draw\n"
      example: []
      syntax:
        content:
          CSharp: protected Tower m_Tower
          VB: Protected m_Tower As Tower
        return:
          type: Tower
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerUI.m_Canvas
      commentId: F:TowerDefense.UI.HUD.TowerUI.m_Canvas
      language: CSharp
      name:
        CSharp: m_Canvas
        VB: m_Canvas
      nameWithType:
        CSharp: TowerUI.m_Canvas
        VB: TowerUI.m_Canvas
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.m_Canvas
        VB: TowerDefense.UI.HUD.TowerUI.m_Canvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_Canvas
        path: ''
        startLine: 10713
      summary: "\nThe canvas attached to the gameObject\n"
      example: []
      syntax:
        content:
          CSharp: protected Canvas m_Canvas
          VB: Protected m_Canvas As Canvas
        return:
          type: Canvas
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerUI.Show(Tower)
      commentId: M:TowerDefense.UI.HUD.TowerUI.Show(Tower)
      language: CSharp
      name:
        CSharp: Show(Tower)
        VB: Show(Tower)
      nameWithType:
        CSharp: TowerUI.Show(Tower)
        VB: TowerUI.Show(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.Show(Tower)
        VB: TowerDefense.UI.HUD.TowerUI.Show(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Show
        path: ''
        startLine: 10721
      summary: "\nDraws the tower data on to the canvas\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Show(Tower towerToShow)
          VB: Public Overridable Sub Show(towerToShow As Tower)
        parameters:
        - id: towerToShow
          type: Tower
          description: "\nThe tower to gain info from\n"
      overload: TowerDefense.UI.HUD.TowerUI.Show*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.Hide
      commentId: M:TowerDefense.UI.HUD.TowerUI.Hide
      language: CSharp
      name:
        CSharp: Hide()
        VB: Hide()
      nameWithType:
        CSharp: TowerUI.Hide()
        VB: TowerUI.Hide()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.Hide()
        VB: TowerDefense.UI.HUD.TowerUI.Hide()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Hide
        path: ''
        startLine: 10760
      summary: "\nHides the tower info UI and the radius visualizer\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Hide()
          VB: Public Overridable Sub Hide
      overload: TowerDefense.UI.HUD.TowerUI.Hide*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick
      commentId: M:TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick
      language: CSharp
      name:
        CSharp: UpgradeButtonClick()
        VB: UpgradeButtonClick()
      nameWithType:
        CSharp: TowerUI.UpgradeButtonClick()
        VB: TowerUI.UpgradeButtonClick()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick()
        VB: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: UpgradeButtonClick
        path: ''
        startLine: 10774
      summary: "\nUpgrades the tower through <xref href=\"TowerDefense.UI.HUD.GameUI\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public void UpgradeButtonClick()
          VB: Public Sub UpgradeButtonClick
      overload: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI: 
    - id: TowerDefense.UI.HUD.TowerUI.SellButtonClick
      commentId: M:TowerDefense.UI.HUD.TowerUI.SellButtonClick
      language: CSharp
      name:
        CSharp: SellButtonClick()
        VB: SellButtonClick()
      nameWithType:
        CSharp: TowerUI.SellButtonClick()
        VB: TowerUI.SellButtonClick()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.SellButtonClick()
        VB: TowerDefense.UI.HUD.TowerUI.SellButtonClick()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: SellButtonClick
        path: ''
        startLine: 10782
      summary: "\nSells the tower through <xref href=\"TowerDefense.UI.HUD.GameUI\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: public void SellButtonClick()
          VB: Public Sub SellButtonClick
      overload: TowerDefense.UI.HUD.TowerUI.SellButtonClick*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        TowerDefense.UI.HUD.GameUI: 
    - id: TowerDefense.UI.HUD.TowerUI.Awake
      commentId: M:TowerDefense.UI.HUD.TowerUI.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: TowerUI.Awake()
        VB: TowerUI.Awake()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.Awake()
        VB: TowerDefense.UI.HUD.TowerUI.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Awake
        path: ''
        startLine: 10790
      summary: "\nGet the text attached to the buttons\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: TowerDefense.UI.HUD.TowerUI.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged(Tower)
      commentId: M:TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged(Tower)
      language: CSharp
      name:
        CSharp: OnUISelectionChanged(Tower)
        VB: OnUISelectionChanged(Tower)
      nameWithType:
        CSharp: TowerUI.OnUISelectionChanged(Tower)
        VB: TowerUI.OnUISelectionChanged(Tower)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged(Tower)
        VB: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged(Tower)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnUISelectionChanged
        path: ''
        startLine: 10799
      summary: "\nFires when tower is selected/deselected\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnUISelectionChanged(Tower newTower)
          VB: Protected Overridable Sub OnUISelectionChanged(newTower As Tower)
        parameters:
        - id: newTower
          type: Tower
          description: ''
      overload: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.Start
      commentId: M:TowerDefense.UI.HUD.TowerUI.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: TowerUI.Start()
        VB: TowerUI.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.Start()
        VB: TowerDefense.UI.HUD.TowerUI.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Start
        path: ''
        startLine: 10814
      summary: "\nSubscribe to mouse button action\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.HUD.TowerUI.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.Update
      commentId: M:TowerDefense.UI.HUD.TowerUI.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TowerUI.Update()
        VB: TowerUI.Update()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.Update()
        VB: TowerDefense.UI.HUD.TowerUI.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Update
        path: ''
        startLine: 10828
      summary: "\nAdjust position when the camera moves\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.UI.HUD.TowerUI.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.OnDisable
      commentId: M:TowerDefense.UI.HUD.TowerUI.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: TowerUI.OnDisable()
        VB: TowerUI.OnDisable()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.OnDisable()
        VB: TowerDefense.UI.HUD.TowerUI.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDisable
        path: ''
        startLine: 10836
      summary: "\nUnsubscribe from currencyChanged\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: TowerDefense.UI.HUD.TowerUI.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.TowerUI.AdjustPosition
      commentId: M:TowerDefense.UI.HUD.TowerUI.AdjustPosition
      language: CSharp
      name:
        CSharp: AdjustPosition()
        VB: AdjustPosition()
      nameWithType:
        CSharp: TowerUI.AdjustPosition()
        VB: TowerUI.AdjustPosition()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.AdjustPosition()
        VB: TowerDefense.UI.HUD.TowerUI.AdjustPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: AdjustPosition
        path: ''
        startLine: 10847
      summary: "\nAdjust the position of the UI\n"
      example: []
      syntax:
        content:
          CSharp: protected void AdjustPosition()
          VB: Protected Sub AdjustPosition
      overload: TowerDefense.UI.HUD.TowerUI.AdjustPosition*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged(TowerDefense.UI.HUD.GameUI.State,TowerDefense.UI.HUD.GameUI.State)
      commentId: M:TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged(TowerDefense.UI.HUD.GameUI.State,TowerDefense.UI.HUD.GameUI.State)
      language: CSharp
      name:
        CSharp: OnGameUIStateChanged(GameUI.State, GameUI.State)
        VB: OnGameUIStateChanged(GameUI.State, GameUI.State)
      nameWithType:
        CSharp: TowerUI.OnGameUIStateChanged(GameUI.State, GameUI.State)
        VB: TowerUI.OnGameUIStateChanged(GameUI.State, GameUI.State)
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged(TowerDefense.UI.HUD.GameUI.State, TowerDefense.UI.HUD.GameUI.State)
        VB: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged(TowerDefense.UI.HUD.GameUI.State, TowerDefense.UI.HUD.GameUI.State)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnGameUIStateChanged
        path: ''
        startLine: 10864
      summary: "\nFired when the <xref href=\"TowerDefense.UI.HUD.GameUI\" data-throw-if-not-resolved=\"false\"></xref> state changes\nIf the new state is <xref href=\"TowerDefense.UI.HUD.GameUI.State.GameOver\" data-throw-if-not-resolved=\"false\"></xref> we need to hide the <xref href=\"TowerDefense.UI.HUD.TowerUI\" data-throw-if-not-resolved=\"false\"></xref>\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnGameUIStateChanged(GameUI.State oldState, GameUI.State newState)
          VB: Protected Sub OnGameUIStateChanged(oldState As GameUI.State, newState As GameUI.State)
        parameters:
        - id: oldState
          type: TowerDefense.UI.HUD.GameUI.State
          description: The previous state
        - id: newState
          type: TowerDefense.UI.HUD.GameUI.State
          description: The state to transition to
      overload: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
      references:
        TowerDefense.UI.HUD.GameUI: 
        TowerDefense.UI.HUD.GameUI.State.GameOver: 
        TowerDefense.UI.HUD.TowerUI: 
  - id: TowerDefense.UI.HUD.WaveUI
    commentId: T:TowerDefense.UI.HUD.WaveUI
    language: CSharp
    name:
      CSharp: WaveUI
      VB: WaveUI
    nameWithType:
      CSharp: WaveUI
      VB: WaveUI
    qualifiedName:
      CSharp: TowerDefense.UI.HUD.WaveUI
      VB: TowerDefense.UI.HUD.WaveUI
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TowerDefense.UI.HUD
    source:
      id: WaveUI
      path: ''
      startLine: 10906
    summary: "\nA class for displaying the wave feedback\n"
    example: []
    syntax:
      content:
        CSharp: 'public class WaveUI : MonoBehaviour'
        VB: >-
          Public Class WaveUI

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TowerDefense.UI.HUD.WaveUI.display
      commentId: F:TowerDefense.UI.HUD.WaveUI.display
      language: CSharp
      name:
        CSharp: display
        VB: display
      nameWithType:
        CSharp: WaveUI.display
        VB: WaveUI.display
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.display
        VB: TowerDefense.UI.HUD.WaveUI.display
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: display
        path: ''
        startLine: 10912
      summary: "\nThe text element to display information on\n"
      example: []
      syntax:
        content:
          CSharp: public Text display
          VB: Public display As Text
        return:
          type: Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.WaveUI.waveFillImage
      commentId: F:TowerDefense.UI.HUD.WaveUI.waveFillImage
      language: CSharp
      name:
        CSharp: waveFillImage
        VB: waveFillImage
      nameWithType:
        CSharp: WaveUI.waveFillImage
        VB: WaveUI.waveFillImage
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.waveFillImage
        VB: TowerDefense.UI.HUD.WaveUI.waveFillImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: waveFillImage
        path: ''
        startLine: 10914
      syntax:
        content:
          CSharp: public Image waveFillImage
          VB: Public waveFillImage As Image
        return:
          type: Image
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: TowerDefense.UI.HUD.WaveUI.m_TotalWaves
      commentId: F:TowerDefense.UI.HUD.WaveUI.m_TotalWaves
      language: CSharp
      name:
        CSharp: m_TotalWaves
        VB: m_TotalWaves
      nameWithType:
        CSharp: WaveUI.m_TotalWaves
        VB: WaveUI.m_TotalWaves
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.m_TotalWaves
        VB: TowerDefense.UI.HUD.WaveUI.m_TotalWaves
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_TotalWaves
        path: ''
        startLine: 10919
      summary: "\nThe total amount of waves for this level\n"
      example: []
      syntax:
        content:
          CSharp: protected int m_TotalWaves
          VB: Protected m_TotalWaves As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.WaveUI.m_Canvas
      commentId: F:TowerDefense.UI.HUD.WaveUI.m_Canvas
      language: CSharp
      name:
        CSharp: m_Canvas
        VB: m_Canvas
      nameWithType:
        CSharp: WaveUI.m_Canvas
        VB: WaveUI.m_Canvas
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.m_Canvas
        VB: TowerDefense.UI.HUD.WaveUI.m_Canvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: m_Canvas
        path: ''
        startLine: 10921
      syntax:
        content:
          CSharp: protected Canvas m_Canvas
          VB: Protected m_Canvas As Canvas
        return:
          type: Canvas
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.WaveUI.Start
      commentId: M:TowerDefense.UI.HUD.WaveUI.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: WaveUI.Start()
        VB: WaveUI.Start()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.Start()
        VB: TowerDefense.UI.HUD.WaveUI.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Start
        path: ''
        startLine: 10928
      summary: "\ncache the total amount of waves\nUpdate the display \nand Subscribe to waveChanged\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: TowerDefense.UI.HUD.WaveUI.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.WaveUI.UpdateDisplay
      commentId: M:TowerDefense.UI.HUD.WaveUI.UpdateDisplay
      language: CSharp
      name:
        CSharp: UpdateDisplay()
        VB: UpdateDisplay()
      nameWithType:
        CSharp: WaveUI.UpdateDisplay()
        VB: WaveUI.UpdateDisplay()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.UpdateDisplay()
        VB: TowerDefense.UI.HUD.WaveUI.UpdateDisplay()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: UpdateDisplay
        path: ''
        startLine: 10939
      summary: "\nWrite the current wave amount to the display\n"
      example: []
      syntax:
        content:
          CSharp: protected void UpdateDisplay()
          VB: Protected Sub UpdateDisplay
      overload: TowerDefense.UI.HUD.WaveUI.UpdateDisplay*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: TowerDefense.UI.HUD.WaveUI.Update
      commentId: M:TowerDefense.UI.HUD.WaveUI.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: WaveUI.Update()
        VB: WaveUI.Update()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.Update()
        VB: TowerDefense.UI.HUD.WaveUI.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: Update
        path: ''
        startLine: 10947
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: TowerDefense.UI.HUD.WaveUI.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: TowerDefense.UI.HUD.WaveUI.OnDestroy
      commentId: M:TowerDefense.UI.HUD.WaveUI.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: WaveUI.OnDestroy()
        VB: WaveUI.OnDestroy()
      qualifiedName:
        CSharp: TowerDefense.UI.HUD.WaveUI.OnDestroy()
        VB: TowerDefense.UI.HUD.WaveUI.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: TowerDefense.UI.HUD
      source:
        id: OnDestroy
        path: ''
        startLine: 10955
      summary: "\nUnsubscribe from events\n"
      example: []
      syntax:
        content:
          CSharp: protected void OnDestroy()
          VB: Protected Sub OnDestroy
      overload: TowerDefense.UI.HUD.WaveUI.OnDestroy*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
references:
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  IAlignmentProvider:
    name:
      CSharp:
      - id: IAlignmentProvider
        name: IAlignmentProvider
        nameWithType: IAlignmentProvider
        qualifiedName: IAlignmentProvider
        isExternal: true
      VB:
      - id: IAlignmentProvider
        name: IAlignmentProvider
        nameWithType: IAlignmentProvider
        qualifiedName: IAlignmentProvider
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.Affector.alignment*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.alignment*
        name: alignment
        nameWithType: Affector.alignment
        qualifiedName: TowerDefense.Affectors.Affector.alignment
      VB:
      - id: TowerDefense.Affectors.Affector.alignment*
        name: alignment
        nameWithType: Affector.alignment
        qualifiedName: TowerDefense.Affectors.Affector.alignment
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.Affector.alignment
  LayerMask:
    name:
      CSharp:
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      VB:
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.Affector.enemyMask*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.enemyMask*
        name: enemyMask
        nameWithType: Affector.enemyMask
        qualifiedName: TowerDefense.Affectors.Affector.enemyMask
      VB:
      - id: TowerDefense.Affectors.Affector.enemyMask*
        name: enemyMask
        nameWithType: Affector.enemyMask
        qualifiedName: TowerDefense.Affectors.Affector.enemyMask
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.Affector.enemyMask
  TowerDefense.Affectors.Affector.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.Initialize*
        name: Initialize
        nameWithType: Affector.Initialize
        qualifiedName: TowerDefense.Affectors.Affector.Initialize
      VB:
      - id: TowerDefense.Affectors.Affector.Initialize*
        name: Initialize
        nameWithType: Affector.Initialize
        qualifiedName: TowerDefense.Affectors.Affector.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.Affector.Initialize
  TowerDefense.Affectors.Affector:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector
        name: Affector
        nameWithType: Affector
        qualifiedName: TowerDefense.Affectors.Affector
      VB:
      - id: TowerDefense.Affectors.Affector
        name: Affector
        nameWithType: Affector
        qualifiedName: TowerDefense.Affectors.Affector
    isDefinition: true
    parent: TowerDefense.Affectors
    commentId: T:TowerDefense.Affectors.Affector
  TowerDefense.Affectors:
    name:
      CSharp:
      - name: TowerDefense.Affectors
        nameWithType: TowerDefense.Affectors
        qualifiedName: TowerDefense.Affectors
      VB:
      - name: TowerDefense.Affectors
        nameWithType: TowerDefense.Affectors
        qualifiedName: TowerDefense.Affectors
    isDefinition: true
    commentId: N:TowerDefense.Affectors
  TowerDefense.Affectors.Affector.description:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.description
        name: description
        nameWithType: Affector.description
        qualifiedName: TowerDefense.Affectors.Affector.description
      VB:
      - id: TowerDefense.Affectors.Affector.description
        name: description
        nameWithType: Affector.description
        qualifiedName: TowerDefense.Affectors.Affector.description
    isDefinition: true
    parent: TowerDefense.Affectors.Affector
    commentId: F:TowerDefense.Affectors.Affector.description
  TowerDefense.Affectors.Affector.alignment:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.alignment
        name: alignment
        nameWithType: Affector.alignment
        qualifiedName: TowerDefense.Affectors.Affector.alignment
      VB:
      - id: TowerDefense.Affectors.Affector.alignment
        name: alignment
        nameWithType: Affector.alignment
        qualifiedName: TowerDefense.Affectors.Affector.alignment
    isDefinition: true
    parent: TowerDefense.Affectors.Affector
    commentId: P:TowerDefense.Affectors.Affector.alignment
  TowerDefense.Affectors.Affector.enemyMask:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.enemyMask
        name: enemyMask
        nameWithType: Affector.enemyMask
        qualifiedName: TowerDefense.Affectors.Affector.enemyMask
      VB:
      - id: TowerDefense.Affectors.Affector.enemyMask
        name: enemyMask
        nameWithType: Affector.enemyMask
        qualifiedName: TowerDefense.Affectors.Affector.enemyMask
    isDefinition: true
    parent: TowerDefense.Affectors.Affector
    commentId: P:TowerDefense.Affectors.Affector.enemyMask
  ITowerRadiusProvider:
    name:
      CSharp:
      - id: ITowerRadiusProvider
        name: ITowerRadiusProvider
        nameWithType: ITowerRadiusProvider
        qualifiedName: ITowerRadiusProvider
        isExternal: true
      VB:
      - id: ITowerRadiusProvider
        name: ITowerRadiusProvider
        nameWithType: ITowerRadiusProvider
        qualifiedName: ITowerRadiusProvider
        isExternal: true
    isDefinition: true
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  Transform[]:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  RandomAudioSource:
    name:
      CSharp:
      - id: RandomAudioSource
        name: RandomAudioSource
        nameWithType: RandomAudioSource
        qualifiedName: RandomAudioSource
        isExternal: true
      VB:
      - id: RandomAudioSource
        name: RandomAudioSource
        nameWithType: RandomAudioSource
        qualifiedName: RandomAudioSource
        isExternal: true
    isDefinition: true
  Targetter:
    name:
      CSharp:
      - id: Targetter
        name: Targetter
        nameWithType: Targetter
        qualifiedName: Targetter
        isExternal: true
      VB:
      - id: Targetter
        name: Targetter
        nameWithType: Targetter
        qualifiedName: Targetter
        isExternal: true
    isDefinition: true
  Color:
    name:
      CSharp:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.Filter:
    name:
      CSharp:
      - id: TowerDefense.Affectors.Filter
        name: Filter
        nameWithType: Filter
        qualifiedName: TowerDefense.Affectors.Filter
      VB:
      - id: TowerDefense.Affectors.Filter
        name: Filter
        nameWithType: Filter
        qualifiedName: TowerDefense.Affectors.Filter
    isDefinition: true
    parent: TowerDefense.Affectors
    commentId: T:TowerDefense.Affectors.Filter
  ILauncher:
    name:
      CSharp:
      - id: ILauncher
        name: ILauncher
        nameWithType: ILauncher
        qualifiedName: ILauncher
        isExternal: true
      VB:
      - id: ILauncher
        name: ILauncher
        nameWithType: ILauncher
        qualifiedName: ILauncher
        isExternal: true
    isDefinition: true
    commentId: '!:ILauncher'
  Targetable:
    name:
      CSharp:
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      VB:
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.AttackAffector.searchRate*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.searchRate*
        name: searchRate
        nameWithType: AttackAffector.searchRate
        qualifiedName: TowerDefense.Affectors.AttackAffector.searchRate
      VB:
      - id: TowerDefense.Affectors.AttackAffector.searchRate*
        name: searchRate
        nameWithType: AttackAffector.searchRate
        qualifiedName: TowerDefense.Affectors.AttackAffector.searchRate
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.searchRate
  TowerDefense.Affectors.AttackAffector.trackingEnemy*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.trackingEnemy*
        name: trackingEnemy
        nameWithType: AttackAffector.trackingEnemy
        qualifiedName: TowerDefense.Affectors.AttackAffector.trackingEnemy
      VB:
      - id: TowerDefense.Affectors.AttackAffector.trackingEnemy*
        name: trackingEnemy
        nameWithType: AttackAffector.trackingEnemy
        qualifiedName: TowerDefense.Affectors.AttackAffector.trackingEnemy
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.trackingEnemy
  TowerDefense.Affectors.AttackAffector.effectRadius*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.effectRadius*
        name: effectRadius
        nameWithType: AttackAffector.effectRadius
        qualifiedName: TowerDefense.Affectors.AttackAffector.effectRadius
      VB:
      - id: TowerDefense.Affectors.AttackAffector.effectRadius*
        name: effectRadius
        nameWithType: AttackAffector.effectRadius
        qualifiedName: TowerDefense.Affectors.AttackAffector.effectRadius
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.effectRadius
  TowerDefense.Affectors.AttackAffector.effectColor*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.effectColor*
        name: effectColor
        nameWithType: AttackAffector.effectColor
        qualifiedName: TowerDefense.Affectors.AttackAffector.effectColor
      VB:
      - id: TowerDefense.Affectors.AttackAffector.effectColor*
        name: effectColor
        nameWithType: AttackAffector.effectColor
        qualifiedName: TowerDefense.Affectors.AttackAffector.effectColor
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.effectColor
  TowerDefense.Affectors.AttackAffector.targetter*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.targetter*
        name: targetter
        nameWithType: AttackAffector.targetter
        qualifiedName: TowerDefense.Affectors.AttackAffector.targetter
      VB:
      - id: TowerDefense.Affectors.AttackAffector.targetter*
        name: targetter
        nameWithType: AttackAffector.targetter
        qualifiedName: TowerDefense.Affectors.AttackAffector.targetter
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.targetter
  TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider):
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
        name: Initialize
        nameWithType: Affector.Initialize
        qualifiedName: TowerDefense.Affectors.Affector.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IAlignmentProvider
        name: IAlignmentProvider
        nameWithType: IAlignmentProvider
        qualifiedName: IAlignmentProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
        name: Initialize
        nameWithType: Affector.Initialize
        qualifiedName: TowerDefense.Affectors.Affector.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IAlignmentProvider
        name: IAlignmentProvider
        nameWithType: IAlignmentProvider
        qualifiedName: IAlignmentProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Affectors.Affector
    commentId: M:TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider)
  TowerDefense.Affectors.AttackAffector.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.Initialize*
        name: Initialize
        nameWithType: AttackAffector.Initialize
        qualifiedName: TowerDefense.Affectors.AttackAffector.Initialize
      VB:
      - id: TowerDefense.Affectors.AttackAffector.Initialize*
        name: Initialize
        nameWithType: AttackAffector.Initialize
        qualifiedName: TowerDefense.Affectors.AttackAffector.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.Initialize
  TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask):
    name:
      CSharp:
      - id: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
        name: Initialize
        nameWithType: Affector.Initialize
        qualifiedName: TowerDefense.Affectors.Affector.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IAlignmentProvider
        name: IAlignmentProvider
        nameWithType: IAlignmentProvider
        qualifiedName: IAlignmentProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
        name: Initialize
        nameWithType: Affector.Initialize
        qualifiedName: TowerDefense.Affectors.Affector.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IAlignmentProvider
        name: IAlignmentProvider
        nameWithType: IAlignmentProvider
        qualifiedName: IAlignmentProvider
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: LayerMask
        name: LayerMask
        nameWithType: LayerMask
        qualifiedName: LayerMask
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Affectors.Affector
    commentId: M:TowerDefense.Affectors.Affector.Initialize(IAlignmentProvider,LayerMask)
  Damager:
    name:
      CSharp:
      - id: Damager
        name: Damager
        nameWithType: Damager
        qualifiedName: Damager
        isExternal: true
      VB:
      - id: Damager
        name: Damager
        nameWithType: Damager
        qualifiedName: Damager
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.AttackAffector.damagerProjectile*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.damagerProjectile*
        name: damagerProjectile
        nameWithType: AttackAffector.damagerProjectile
        qualifiedName: TowerDefense.Affectors.AttackAffector.damagerProjectile
      VB:
      - id: TowerDefense.Affectors.AttackAffector.damagerProjectile*
        name: damagerProjectile
        nameWithType: AttackAffector.damagerProjectile
        qualifiedName: TowerDefense.Affectors.AttackAffector.damagerProjectile
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.damagerProjectile
  TowerDefense.Affectors.AttackAffector.GetProjectileDamage*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.GetProjectileDamage*
        name: GetProjectileDamage
        nameWithType: AttackAffector.GetProjectileDamage
        qualifiedName: TowerDefense.Affectors.AttackAffector.GetProjectileDamage
      VB:
      - id: TowerDefense.Affectors.AttackAffector.GetProjectileDamage*
        name: GetProjectileDamage
        nameWithType: AttackAffector.GetProjectileDamage
        qualifiedName: TowerDefense.Affectors.AttackAffector.GetProjectileDamage
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.GetProjectileDamage
  TowerDefense.Affectors.AttackAffector.SetUpTimers*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.SetUpTimers*
        name: SetUpTimers
        nameWithType: AttackAffector.SetUpTimers
        qualifiedName: TowerDefense.Affectors.AttackAffector.SetUpTimers
      VB:
      - id: TowerDefense.Affectors.AttackAffector.SetUpTimers*
        name: SetUpTimers
        nameWithType: AttackAffector.SetUpTimers
        qualifiedName: TowerDefense.Affectors.AttackAffector.SetUpTimers
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.SetUpTimers
  TowerDefense.Affectors.AttackAffector.Update*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.Update*
        name: Update
        nameWithType: AttackAffector.Update
        qualifiedName: TowerDefense.Affectors.AttackAffector.Update
      VB:
      - id: TowerDefense.Affectors.AttackAffector.Update*
        name: Update
        nameWithType: AttackAffector.Update
        qualifiedName: TowerDefense.Affectors.AttackAffector.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.Update
  TowerDefense.Affectors.AttackAffector.OnFireTimer*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.OnFireTimer*
        name: OnFireTimer
        nameWithType: AttackAffector.OnFireTimer
        qualifiedName: TowerDefense.Affectors.AttackAffector.OnFireTimer
      VB:
      - id: TowerDefense.Affectors.AttackAffector.OnFireTimer*
        name: OnFireTimer
        nameWithType: AttackAffector.OnFireTimer
        qualifiedName: TowerDefense.Affectors.AttackAffector.OnFireTimer
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.OnFireTimer
  TowerDefense.Affectors.AttackAffector.FireProjectile*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.FireProjectile*
        name: FireProjectile
        nameWithType: AttackAffector.FireProjectile
        qualifiedName: TowerDefense.Affectors.AttackAffector.FireProjectile
      VB:
      - id: TowerDefense.Affectors.AttackAffector.FireProjectile*
        name: FireProjectile
        nameWithType: AttackAffector.FireProjectile
        qualifiedName: TowerDefense.Affectors.AttackAffector.FireProjectile
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.FireProjectile
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  TowerDefense.Affectors.AttackAffector.ByDistance*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector.ByDistance*
        name: ByDistance
        nameWithType: AttackAffector.ByDistance
        qualifiedName: TowerDefense.Affectors.AttackAffector.ByDistance
      VB:
      - id: TowerDefense.Affectors.AttackAffector.ByDistance*
        name: ByDistance
        nameWithType: AttackAffector.ByDistance
        qualifiedName: TowerDefense.Affectors.AttackAffector.ByDistance
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.AttackAffector.ByDistance
  TowerDefense.Affectors.AttackAffector:
    name:
      CSharp:
      - id: TowerDefense.Affectors.AttackAffector
        name: AttackAffector
        nameWithType: AttackAffector
        qualifiedName: TowerDefense.Affectors.AttackAffector
      VB:
      - id: TowerDefense.Affectors.AttackAffector
        name: AttackAffector
        nameWithType: AttackAffector
        qualifiedName: TowerDefense.Affectors.AttackAffector
    isDefinition: true
    commentId: T:TowerDefense.Affectors.AttackAffector
  CurrencyGainer:
    name:
      CSharp:
      - id: CurrencyGainer
        name: CurrencyGainer
        nameWithType: CurrencyGainer
        qualifiedName: CurrencyGainer
        isExternal: true
      VB:
      - id: CurrencyGainer
        name: CurrencyGainer
        nameWithType: CurrencyGainer
        qualifiedName: CurrencyGainer
        isExternal: true
    isDefinition: true
  AudioSource:
    name:
      CSharp:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
      VB:
      - id: AudioSource
        name: AudioSource
        nameWithType: AudioSource
        qualifiedName: AudioSource
        isExternal: true
    isDefinition: true
  ParticleSystem:
    name:
      CSharp:
      - id: ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      VB:
      - id: ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.CurrencyAffector.Start*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.CurrencyAffector.Start*
        name: Start
        nameWithType: CurrencyAffector.Start
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.Start
      VB:
      - id: TowerDefense.Affectors.CurrencyAffector.Start*
        name: Start
        nameWithType: CurrencyAffector.Start
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.Start
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.CurrencyAffector.Start
  TowerDefense.Affectors.CurrencyAffector.Update*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.CurrencyAffector.Update*
        name: Update
        nameWithType: CurrencyAffector.Update
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.Update
      VB:
      - id: TowerDefense.Affectors.CurrencyAffector.Update*
        name: Update
        nameWithType: CurrencyAffector.Update
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.CurrencyAffector.Update
  TowerDefense.Affectors.CurrencyAffector.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.CurrencyAffector.OnEnable*
        name: OnEnable
        nameWithType: CurrencyAffector.OnEnable
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.OnEnable
      VB:
      - id: TowerDefense.Affectors.CurrencyAffector.OnEnable*
        name: OnEnable
        nameWithType: CurrencyAffector.OnEnable
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.CurrencyAffector.OnEnable
  TowerDefense.Affectors.CurrencyAffector.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.CurrencyAffector.OnDisable*
        name: OnDisable
        nameWithType: CurrencyAffector.OnDisable
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.OnDisable
      VB:
      - id: TowerDefense.Affectors.CurrencyAffector.OnDisable*
        name: OnDisable
        nameWithType: CurrencyAffector.OnDisable
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.CurrencyAffector.OnDisable
  TowerDefense.Affectors.CurrencyAffector.currencyGainer:
    commentId: F:TowerDefense.Affectors.CurrencyAffector.currencyGainer
  CurrencyChangeInfo:
    name:
      CSharp:
      - id: CurrencyChangeInfo
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo
        qualifiedName: CurrencyChangeInfo
        isExternal: true
      VB:
      - id: CurrencyChangeInfo
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo
        qualifiedName: CurrencyChangeInfo
        isExternal: true
    isDefinition: true
    commentId: '!:CurrencyChangeInfo'
  TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged*
        name: OnCurrencyChanged
        nameWithType: CurrencyAffector.OnCurrencyChanged
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged
      VB:
      - id: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged*
        name: OnCurrencyChanged
        nameWithType: CurrencyAffector.OnCurrencyChanged
        qualifiedName: TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.CurrencyAffector.OnCurrencyChanged
  TowerDefense.Affectors.CurrencyAffector:
    name:
      CSharp:
      - id: TowerDefense.Affectors.CurrencyAffector
        name: CurrencyAffector
        nameWithType: CurrencyAffector
        qualifiedName: TowerDefense.Affectors.CurrencyAffector
      VB:
      - id: TowerDefense.Affectors.CurrencyAffector
        name: CurrencyAffector
        nameWithType: CurrencyAffector
        qualifiedName: TowerDefense.Affectors.CurrencyAffector
    isDefinition: true
    commentId: T:TowerDefense.Affectors.CurrencyAffector
  TowerDefense.Affectors.PassiveAffector.effectRadius*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.effectRadius*
        name: effectRadius
        nameWithType: PassiveAffector.effectRadius
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectRadius
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.effectRadius*
        name: effectRadius
        nameWithType: PassiveAffector.effectRadius
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectRadius
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.PassiveAffector.effectRadius
  TowerDefense.Affectors.PassiveAffector.effectColor*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.effectColor*
        name: effectColor
        nameWithType: PassiveAffector.effectColor
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectColor
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.effectColor*
        name: effectColor
        nameWithType: PassiveAffector.effectColor
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectColor
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.PassiveAffector.effectColor
  TowerDefense.Affectors.PassiveAffector.targetter*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.targetter*
        name: targetter
        nameWithType: PassiveAffector.targetter
        qualifiedName: TowerDefense.Affectors.PassiveAffector.targetter
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.targetter*
        name: targetter
        nameWithType: PassiveAffector.targetter
        qualifiedName: TowerDefense.Affectors.PassiveAffector.targetter
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.PassiveAffector.targetter
  TowerDefense.Affectors.PassiveAffector:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector
        name: PassiveAffector
        nameWithType: PassiveAffector
        qualifiedName: TowerDefense.Affectors.PassiveAffector
      VB:
      - id: TowerDefense.Affectors.PassiveAffector
        name: PassiveAffector
        nameWithType: PassiveAffector
        qualifiedName: TowerDefense.Affectors.PassiveAffector
    isDefinition: true
    parent: TowerDefense.Affectors
    commentId: T:TowerDefense.Affectors.PassiveAffector
  TowerDefense.Affectors.PassiveAffector.radiusEffectColor:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
        name: radiusEffectColor
        nameWithType: PassiveAffector.radiusEffectColor
        qualifiedName: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
        name: radiusEffectColor
        nameWithType: PassiveAffector.radiusEffectColor
        qualifiedName: TowerDefense.Affectors.PassiveAffector.radiusEffectColor
    isDefinition: true
    parent: TowerDefense.Affectors.PassiveAffector
    commentId: F:TowerDefense.Affectors.PassiveAffector.radiusEffectColor
  TowerDefense.Affectors.PassiveAffector.towerTargetter:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.towerTargetter
        name: towerTargetter
        nameWithType: PassiveAffector.towerTargetter
        qualifiedName: TowerDefense.Affectors.PassiveAffector.towerTargetter
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.towerTargetter
        name: towerTargetter
        nameWithType: PassiveAffector.towerTargetter
        qualifiedName: TowerDefense.Affectors.PassiveAffector.towerTargetter
    isDefinition: true
    parent: TowerDefense.Affectors.PassiveAffector
    commentId: F:TowerDefense.Affectors.PassiveAffector.towerTargetter
  TowerDefense.Affectors.PassiveAffector.effectRadius:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.effectRadius
        name: effectRadius
        nameWithType: PassiveAffector.effectRadius
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectRadius
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.effectRadius
        name: effectRadius
        nameWithType: PassiveAffector.effectRadius
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectRadius
    isDefinition: true
    parent: TowerDefense.Affectors.PassiveAffector
    commentId: P:TowerDefense.Affectors.PassiveAffector.effectRadius
  TowerDefense.Affectors.PassiveAffector.effectColor:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.effectColor
        name: effectColor
        nameWithType: PassiveAffector.effectColor
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectColor
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.effectColor
        name: effectColor
        nameWithType: PassiveAffector.effectColor
        qualifiedName: TowerDefense.Affectors.PassiveAffector.effectColor
    isDefinition: true
    parent: TowerDefense.Affectors.PassiveAffector
    commentId: P:TowerDefense.Affectors.PassiveAffector.effectColor
  TowerDefense.Affectors.PassiveAffector.targetter:
    name:
      CSharp:
      - id: TowerDefense.Affectors.PassiveAffector.targetter
        name: targetter
        nameWithType: PassiveAffector.targetter
        qualifiedName: TowerDefense.Affectors.PassiveAffector.targetter
      VB:
      - id: TowerDefense.Affectors.PassiveAffector.targetter
        name: targetter
        nameWithType: PassiveAffector.targetter
        qualifiedName: TowerDefense.Affectors.PassiveAffector.targetter
    isDefinition: true
    parent: TowerDefense.Affectors.PassiveAffector
    commentId: P:TowerDefense.Affectors.PassiveAffector.targetter
  TowerDefense.Affectors.SlowAffector.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.SlowAffector.Awake*
        name: Awake
        nameWithType: SlowAffector.Awake
        qualifiedName: TowerDefense.Affectors.SlowAffector.Awake
      VB:
      - id: TowerDefense.Affectors.SlowAffector.Awake*
        name: Awake
        nameWithType: SlowAffector.Awake
        qualifiedName: TowerDefense.Affectors.SlowAffector.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.SlowAffector.Awake
  Agent:
    name:
      CSharp:
      - id: Agent
        name: Agent
        nameWithType: Agent
        qualifiedName: Agent
        isExternal: true
      VB:
      - id: Agent
        name: Agent
        nameWithType: Agent
        qualifiedName: Agent
        isExternal: true
    isDefinition: true
  TowerDefense.Affectors.SlowAffector.AttachSlowComponent*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.SlowAffector.AttachSlowComponent*
        name: AttachSlowComponent
        nameWithType: SlowAffector.AttachSlowComponent
        qualifiedName: TowerDefense.Affectors.SlowAffector.AttachSlowComponent
      VB:
      - id: TowerDefense.Affectors.SlowAffector.AttachSlowComponent*
        name: AttachSlowComponent
        nameWithType: SlowAffector.AttachSlowComponent
        qualifiedName: TowerDefense.Affectors.SlowAffector.AttachSlowComponent
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.SlowAffector.AttachSlowComponent
  TowerDefense.Affectors.SlowAffector.RemoveSlowComponent*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent*
        name: RemoveSlowComponent
        nameWithType: SlowAffector.RemoveSlowComponent
        qualifiedName: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent
      VB:
      - id: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent*
        name: RemoveSlowComponent
        nameWithType: SlowAffector.RemoveSlowComponent
        qualifiedName: TowerDefense.Affectors.SlowAffector.RemoveSlowComponent
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.SlowAffector.RemoveSlowComponent
  TowerDefense.Affectors.SlowAffector.OnTargetEntersRange*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange*
        name: OnTargetEntersRange
        nameWithType: SlowAffector.OnTargetEntersRange
        qualifiedName: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange
      VB:
      - id: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange*
        name: OnTargetEntersRange
        nameWithType: SlowAffector.OnTargetEntersRange
        qualifiedName: TowerDefense.Affectors.SlowAffector.OnTargetEntersRange
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.SlowAffector.OnTargetEntersRange
  TowerDefense.Affectors.SlowAffector.OnTargetExitsRange*:
    name:
      CSharp:
      - id: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange*
        name: OnTargetExitsRange
        nameWithType: SlowAffector.OnTargetExitsRange
        qualifiedName: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange
      VB:
      - id: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange*
        name: OnTargetExitsRange
        nameWithType: SlowAffector.OnTargetExitsRange
        qualifiedName: TowerDefense.Affectors.SlowAffector.OnTargetExitsRange
    isDefinition: true
    commentId: Overload:TowerDefense.Affectors.SlowAffector.OnTargetExitsRange
  TowerDefense.Affectors.SlowAffector:
    name:
      CSharp:
      - id: TowerDefense.Affectors.SlowAffector
        name: SlowAffector
        nameWithType: SlowAffector
        qualifiedName: TowerDefense.Affectors.SlowAffector
      VB:
      - id: TowerDefense.Affectors.SlowAffector
        name: SlowAffector
        nameWithType: SlowAffector
        qualifiedName: TowerDefense.Affectors.SlowAffector
    isDefinition: true
    commentId: T:TowerDefense.Affectors.SlowAffector
  Action`1:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Action{Node}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{Node}'
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  NavMeshAgent:
    name:
      CSharp:
      - id: NavMeshAgent
        name: NavMeshAgent
        nameWithType: NavMeshAgent
        qualifiedName: NavMeshAgent
        isExternal: true
      VB:
      - id: NavMeshAgent
        name: NavMeshAgent
        nameWithType: NavMeshAgent
        qualifiedName: NavMeshAgent
        isExternal: true
    isDefinition: true
  Node:
    name:
      CSharp:
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      VB:
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
    isDefinition: true
  LevelManager:
    name:
      CSharp:
      - id: LevelManager
        name: LevelManager
        nameWithType: LevelManager
        qualifiedName: LevelManager
        isExternal: true
      VB:
      - id: LevelManager
        name: LevelManager
        nameWithType: LevelManager
        qualifiedName: LevelManager
        isExternal: true
    isDefinition: true
  TowerDefense.Agents.Agent.velocity*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.velocity*
        name: velocity
        nameWithType: Agent.velocity
        qualifiedName: TowerDefense.Agents.Agent.velocity
      VB:
      - id: TowerDefense.Agents.Agent.velocity*
        name: velocity
        nameWithType: Agent.velocity
        qualifiedName: TowerDefense.Agents.Agent.velocity
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.velocity
  TowerDefense.Agents:
    name:
      CSharp:
      - name: TowerDefense.Agents
        nameWithType: TowerDefense.Agents
        qualifiedName: TowerDefense.Agents
      VB:
      - name: TowerDefense.Agents
        nameWithType: TowerDefense.Agents
        qualifiedName: TowerDefense.Agents
    isDefinition: true
    commentId: N:TowerDefense.Agents
  TowerDefense.Agents.Agent.State:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.State
        name: Agent.State
        nameWithType: Agent.State
        qualifiedName: TowerDefense.Agents.Agent.State
      VB:
      - id: TowerDefense.Agents.Agent.State
        name: Agent.State
        nameWithType: Agent.State
        qualifiedName: TowerDefense.Agents.Agent.State
    isDefinition: true
    parent: TowerDefense.Agents
    commentId: T:TowerDefense.Agents.Agent.State
  TowerDefense.Agents.Agent.state*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.state*
        name: state
        nameWithType: Agent.state
        qualifiedName: TowerDefense.Agents.Agent.state
      VB:
      - id: TowerDefense.Agents.Agent.state*
        name: state
        nameWithType: Agent.state
        qualifiedName: TowerDefense.Agents.Agent.state
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.state
  TowerDefense.Agents.Agent.m_NavMeshAgent:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.m_NavMeshAgent
        name: m_NavMeshAgent
        nameWithType: Agent.m_NavMeshAgent
        qualifiedName: TowerDefense.Agents.Agent.m_NavMeshAgent
      VB:
      - id: TowerDefense.Agents.Agent.m_NavMeshAgent
        name: m_NavMeshAgent
        nameWithType: Agent.m_NavMeshAgent
        qualifiedName: TowerDefense.Agents.Agent.m_NavMeshAgent
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: F:TowerDefense.Agents.Agent.m_NavMeshAgent
  TowerDefense.Agents.Agent.navMeshNavMeshAgent*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.navMeshNavMeshAgent*
        name: navMeshNavMeshAgent
        nameWithType: Agent.navMeshNavMeshAgent
        qualifiedName: TowerDefense.Agents.Agent.navMeshNavMeshAgent
      VB:
      - id: TowerDefense.Agents.Agent.navMeshNavMeshAgent*
        name: navMeshNavMeshAgent
        nameWithType: Agent.navMeshNavMeshAgent
        qualifiedName: TowerDefense.Agents.Agent.navMeshNavMeshAgent
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.navMeshNavMeshAgent
  TowerDefense.Agents.Agent.navMeshMask*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.navMeshMask*
        name: navMeshMask
        nameWithType: Agent.navMeshMask
        qualifiedName: TowerDefense.Agents.Agent.navMeshMask
      VB:
      - id: TowerDefense.Agents.Agent.navMeshMask*
        name: navMeshMask
        nameWithType: Agent.navMeshMask
        qualifiedName: TowerDefense.Agents.Agent.navMeshMask
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.navMeshMask
  TowerDefense.Agents.Agent.originalMovementSpeed*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.originalMovementSpeed*
        name: originalMovementSpeed
        nameWithType: Agent.originalMovementSpeed
        qualifiedName: TowerDefense.Agents.Agent.originalMovementSpeed
      VB:
      - id: TowerDefense.Agents.Agent.originalMovementSpeed*
        name: originalMovementSpeed
        nameWithType: Agent.originalMovementSpeed
        qualifiedName: TowerDefense.Agents.Agent.originalMovementSpeed
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.originalMovementSpeed
  TowerDefense.Agents.Agent.isPathBlocked*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.isPathBlocked*
        name: isPathBlocked
        nameWithType: Agent.isPathBlocked
        qualifiedName: TowerDefense.Agents.Agent.isPathBlocked
      VB:
      - id: TowerDefense.Agents.Agent.isPathBlocked*
        name: isPathBlocked
        nameWithType: Agent.isPathBlocked
        qualifiedName: TowerDefense.Agents.Agent.isPathBlocked
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.isPathBlocked
  TowerDefense.Agents.Agent.isAtDestination*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.isAtDestination*
        name: isAtDestination
        nameWithType: Agent.isAtDestination
        qualifiedName: TowerDefense.Agents.Agent.isAtDestination
      VB:
      - id: TowerDefense.Agents.Agent.isAtDestination*
        name: isAtDestination
        nameWithType: Agent.isAtDestination
        qualifiedName: TowerDefense.Agents.Agent.isAtDestination
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.isAtDestination
  TowerDefense.Agents.Agent.SetNode*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.SetNode*
        name: SetNode
        nameWithType: Agent.SetNode
        qualifiedName: TowerDefense.Agents.Agent.SetNode
      VB:
      - id: TowerDefense.Agents.Agent.SetNode*
        name: SetNode
        nameWithType: Agent.SetNode
        qualifiedName: TowerDefense.Agents.Agent.SetNode
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.SetNode
  TowerDefense.Agents.Agent.Remove*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Remove*
        name: Remove
        nameWithType: Agent.Remove
        qualifiedName: TowerDefense.Agents.Agent.Remove
      VB:
      - id: TowerDefense.Agents.Agent.Remove*
        name: Remove
        nameWithType: Agent.Remove
        qualifiedName: TowerDefense.Agents.Agent.Remove
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.Remove
  TowerDefense.Agents.Agent.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Initialize*
        name: Initialize
        nameWithType: Agent.Initialize
        qualifiedName: TowerDefense.Agents.Agent.Initialize
      VB:
      - id: TowerDefense.Agents.Agent.Initialize*
        name: Initialize
        nameWithType: Agent.Initialize
        qualifiedName: TowerDefense.Agents.Agent.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.Initialize
  TowerDefense.Agents.Agent.GetNextNode*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.GetNextNode*
        name: GetNextNode
        nameWithType: Agent.GetNextNode
        qualifiedName: TowerDefense.Agents.Agent.GetNextNode
      VB:
      - id: TowerDefense.Agents.Agent.GetNextNode*
        name: GetNextNode
        nameWithType: Agent.GetNextNode
        qualifiedName: TowerDefense.Agents.Agent.GetNextNode
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.GetNextNode
  TowerDefense.Agents.Agent.m_CurrentNode:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.m_CurrentNode
        name: m_CurrentNode
        nameWithType: Agent.m_CurrentNode
        qualifiedName: TowerDefense.Agents.Agent.m_CurrentNode
      VB:
      - id: TowerDefense.Agents.Agent.m_CurrentNode
        name: m_CurrentNode
        nameWithType: Agent.m_CurrentNode
        qualifiedName: TowerDefense.Agents.Agent.m_CurrentNode
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: F:TowerDefense.Agents.Agent.m_CurrentNode
  TowerDefense.Agents.Agent.MoveToNode*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.MoveToNode*
        name: MoveToNode
        nameWithType: Agent.MoveToNode
        qualifiedName: TowerDefense.Agents.Agent.MoveToNode
      VB:
      - id: TowerDefense.Agents.Agent.MoveToNode*
        name: MoveToNode
        nameWithType: Agent.MoveToNode
        qualifiedName: TowerDefense.Agents.Agent.MoveToNode
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.MoveToNode
  TowerDefense.Agents.Agent.HandleDestinationReached*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.HandleDestinationReached*
        name: HandleDestinationReached
        nameWithType: Agent.HandleDestinationReached
        qualifiedName: TowerDefense.Agents.Agent.HandleDestinationReached
      VB:
      - id: TowerDefense.Agents.Agent.HandleDestinationReached*
        name: HandleDestinationReached
        nameWithType: Agent.HandleDestinationReached
        qualifiedName: TowerDefense.Agents.Agent.HandleDestinationReached
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.HandleDestinationReached
  TowerDefense.Agents.Agent.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Awake*
        name: Awake
        nameWithType: Agent.Awake
        qualifiedName: TowerDefense.Agents.Agent.Awake
      VB:
      - id: TowerDefense.Agents.Agent.Awake*
        name: Awake
        nameWithType: Agent.Awake
        qualifiedName: TowerDefense.Agents.Agent.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.Awake
  TowerDefense.Agents.Agent.Update*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Update*
        name: Update
        nameWithType: Agent.Update
        qualifiedName: TowerDefense.Agents.Agent.Update
      VB:
      - id: TowerDefense.Agents.Agent.Update*
        name: Update
        nameWithType: Agent.Update
        qualifiedName: TowerDefense.Agents.Agent.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.Update
  TowerDefense.Agents.Agent.NavigateTo*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.NavigateTo*
        name: NavigateTo
        nameWithType: Agent.NavigateTo
        qualifiedName: TowerDefense.Agents.Agent.NavigateTo
      VB:
      - id: TowerDefense.Agents.Agent.NavigateTo*
        name: NavigateTo
        nameWithType: Agent.NavigateTo
        qualifiedName: TowerDefense.Agents.Agent.NavigateTo
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.NavigateTo
  TowerDefense.Agents.Agent.LazyLoad*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.LazyLoad*
        name: LazyLoad
        nameWithType: Agent.LazyLoad
        qualifiedName: TowerDefense.Agents.Agent.LazyLoad
      VB:
      - id: TowerDefense.Agents.Agent.LazyLoad*
        name: LazyLoad
        nameWithType: Agent.LazyLoad
        qualifiedName: TowerDefense.Agents.Agent.LazyLoad
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.LazyLoad
  TowerDefense.Agents.Agent.State.OnPartialPath:
    commentId: F:TowerDefense.Agents.Agent.State.OnPartialPath
  TowerDefense.Agents.Agent.OnCompletePathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.OnCompletePathUpdate*
        name: OnCompletePathUpdate
        nameWithType: Agent.OnCompletePathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnCompletePathUpdate
      VB:
      - id: TowerDefense.Agents.Agent.OnCompletePathUpdate*
        name: OnCompletePathUpdate
        nameWithType: Agent.OnCompletePathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnCompletePathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.OnCompletePathUpdate
  TowerDefense.Agents.Agent.PathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.PathUpdate*
        name: PathUpdate
        nameWithType: Agent.PathUpdate
        qualifiedName: TowerDefense.Agents.Agent.PathUpdate
      VB:
      - id: TowerDefense.Agents.Agent.PathUpdate*
        name: PathUpdate
        nameWithType: Agent.PathUpdate
        qualifiedName: TowerDefense.Agents.Agent.PathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.PathUpdate
  TowerDefense.Agents.Agent.OnPartialPathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.OnPartialPathUpdate*
        name: OnPartialPathUpdate
        nameWithType: Agent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnPartialPathUpdate
      VB:
      - id: TowerDefense.Agents.Agent.OnPartialPathUpdate*
        name: OnPartialPathUpdate
        nameWithType: Agent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnPartialPathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.Agent.OnPartialPathUpdate
  TowerDefense.Agents.Agent:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent
        name: Agent
        nameWithType: Agent
        qualifiedName: TowerDefense.Agents.Agent
      VB:
      - id: TowerDefense.Agents.Agent
        name: Agent
        nameWithType: Agent
        qualifiedName: TowerDefense.Agents.Agent
    isDefinition: true
    parent: TowerDefense.Agents
    commentId: T:TowerDefense.Agents.Agent
  TowerDefense.Agents.AgentEffect.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentEffect.Awake*
        name: Awake
        nameWithType: AgentEffect.Awake
        qualifiedName: TowerDefense.Agents.AgentEffect.Awake
      VB:
      - id: TowerDefense.Agents.AgentEffect.Awake*
        name: Awake
        nameWithType: AgentEffect.Awake
        qualifiedName: TowerDefense.Agents.AgentEffect.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AgentEffect.Awake
  TowerDefense.Agents.AgentEffect.m_Agent:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentEffect.m_Agent
        name: m_Agent
        nameWithType: AgentEffect.m_Agent
        qualifiedName: TowerDefense.Agents.AgentEffect.m_Agent
      VB:
      - id: TowerDefense.Agents.AgentEffect.m_Agent
        name: m_Agent
        nameWithType: AgentEffect.m_Agent
        qualifiedName: TowerDefense.Agents.AgentEffect.m_Agent
    isDefinition: true
    parent: TowerDefense.Agents.AgentEffect
    commentId: F:TowerDefense.Agents.AgentEffect.m_Agent
  TowerDefense.Agents.AgentEffect.LazyLoad*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentEffect.LazyLoad*
        name: LazyLoad
        nameWithType: AgentEffect.LazyLoad
        qualifiedName: TowerDefense.Agents.AgentEffect.LazyLoad
      VB:
      - id: TowerDefense.Agents.AgentEffect.LazyLoad*
        name: LazyLoad
        nameWithType: AgentEffect.LazyLoad
        qualifiedName: TowerDefense.Agents.AgentEffect.LazyLoad
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AgentEffect.LazyLoad
  TowerDefense.Agents.AgentEffect:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentEffect
        name: AgentEffect
        nameWithType: AgentEffect
        qualifiedName: TowerDefense.Agents.AgentEffect
      VB:
      - id: TowerDefense.Agents.AgentEffect
        name: AgentEffect
        nameWithType: AgentEffect
        qualifiedName: TowerDefense.Agents.AgentEffect
    isDefinition: true
    parent: TowerDefense.Agents
    commentId: T:TowerDefense.Agents.AgentEffect
  TowerDefense.Agents.AgentEffect.Awake:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentEffect.Awake
        name: Awake
        nameWithType: AgentEffect.Awake
        qualifiedName: TowerDefense.Agents.AgentEffect.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.AgentEffect.Awake
        name: Awake
        nameWithType: AgentEffect.Awake
        qualifiedName: TowerDefense.Agents.AgentEffect.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.AgentEffect
    commentId: M:TowerDefense.Agents.AgentEffect.Awake
  TowerDefense.Agents.AgentEffect.LazyLoad:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentEffect.LazyLoad
        name: LazyLoad
        nameWithType: AgentEffect.LazyLoad
        qualifiedName: TowerDefense.Agents.AgentEffect.LazyLoad
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.AgentEffect.LazyLoad
        name: LazyLoad
        nameWithType: AgentEffect.LazyLoad
        qualifiedName: TowerDefense.Agents.AgentEffect.LazyLoad
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.AgentEffect
    commentId: M:TowerDefense.Agents.AgentEffect.LazyLoad
  List`1:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  List{System.Single}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{System.Single}'
  TowerDefense.Agents.AgentSlower.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentSlower.Initialize*
        name: Initialize
        nameWithType: AgentSlower.Initialize
        qualifiedName: TowerDefense.Agents.AgentSlower.Initialize
      VB:
      - id: TowerDefense.Agents.AgentSlower.Initialize*
        name: Initialize
        nameWithType: AgentSlower.Initialize
        qualifiedName: TowerDefense.Agents.AgentSlower.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AgentSlower.Initialize
  TowerDefense.Agents.AgentSlower.RemoveSlow*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentSlower.RemoveSlow*
        name: RemoveSlow
        nameWithType: AgentSlower.RemoveSlow
        qualifiedName: TowerDefense.Agents.AgentSlower.RemoveSlow
      VB:
      - id: TowerDefense.Agents.AgentSlower.RemoveSlow*
        name: RemoveSlow
        nameWithType: AgentSlower.RemoveSlow
        qualifiedName: TowerDefense.Agents.AgentSlower.RemoveSlow
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AgentSlower.RemoveSlow
  TowerDefense.Agents.AgentSlower:
    name:
      CSharp:
      - id: TowerDefense.Agents.AgentSlower
        name: AgentSlower
        nameWithType: AgentSlower
        qualifiedName: TowerDefense.Agents.AgentSlower
      VB:
      - id: TowerDefense.Agents.AgentSlower
        name: AgentSlower
        nameWithType: AgentSlower
        qualifiedName: TowerDefense.Agents.AgentSlower
    isDefinition: true
    commentId: T:TowerDefense.Agents.AgentSlower
  TowerDefense.Agents.Agent.destinationReached:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.destinationReached
        name: destinationReached
        nameWithType: Agent.destinationReached
        qualifiedName: TowerDefense.Agents.Agent.destinationReached
      VB:
      - id: TowerDefense.Agents.Agent.destinationReached
        name: destinationReached
        nameWithType: Agent.destinationReached
        qualifiedName: TowerDefense.Agents.Agent.destinationReached
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: E:TowerDefense.Agents.Agent.destinationReached
  TowerDefense.Agents.Agent.appliedEffectOffset:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.appliedEffectOffset
        name: appliedEffectOffset
        nameWithType: Agent.appliedEffectOffset
        qualifiedName: TowerDefense.Agents.Agent.appliedEffectOffset
      VB:
      - id: TowerDefense.Agents.Agent.appliedEffectOffset
        name: appliedEffectOffset
        nameWithType: Agent.appliedEffectOffset
        qualifiedName: TowerDefense.Agents.Agent.appliedEffectOffset
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: F:TowerDefense.Agents.Agent.appliedEffectOffset
  TowerDefense.Agents.Agent.appliedEffectScale:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.appliedEffectScale
        name: appliedEffectScale
        nameWithType: Agent.appliedEffectScale
        qualifiedName: TowerDefense.Agents.Agent.appliedEffectScale
      VB:
      - id: TowerDefense.Agents.Agent.appliedEffectScale
        name: appliedEffectScale
        nameWithType: Agent.appliedEffectScale
        qualifiedName: TowerDefense.Agents.Agent.appliedEffectScale
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: F:TowerDefense.Agents.Agent.appliedEffectScale
  TowerDefense.Agents.Agent.m_LevelManager:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.m_LevelManager
        name: m_LevelManager
        nameWithType: Agent.m_LevelManager
        qualifiedName: TowerDefense.Agents.Agent.m_LevelManager
      VB:
      - id: TowerDefense.Agents.Agent.m_LevelManager
        name: m_LevelManager
        nameWithType: Agent.m_LevelManager
        qualifiedName: TowerDefense.Agents.Agent.m_LevelManager
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: F:TowerDefense.Agents.Agent.m_LevelManager
  TowerDefense.Agents.Agent.m_Destination:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.m_Destination
        name: m_Destination
        nameWithType: Agent.m_Destination
        qualifiedName: TowerDefense.Agents.Agent.m_Destination
      VB:
      - id: TowerDefense.Agents.Agent.m_Destination
        name: m_Destination
        nameWithType: Agent.m_Destination
        qualifiedName: TowerDefense.Agents.Agent.m_Destination
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: F:TowerDefense.Agents.Agent.m_Destination
  TowerDefense.Agents.Agent.velocity:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.velocity
        name: velocity
        nameWithType: Agent.velocity
        qualifiedName: TowerDefense.Agents.Agent.velocity
      VB:
      - id: TowerDefense.Agents.Agent.velocity
        name: velocity
        nameWithType: Agent.velocity
        qualifiedName: TowerDefense.Agents.Agent.velocity
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.velocity
  TowerDefense.Agents.Agent.state:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.state
        name: state
        nameWithType: Agent.state
        qualifiedName: TowerDefense.Agents.Agent.state
      VB:
      - id: TowerDefense.Agents.Agent.state
        name: state
        nameWithType: Agent.state
        qualifiedName: TowerDefense.Agents.Agent.state
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.state
  TowerDefense.Agents.Agent.navMeshNavMeshAgent:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.navMeshNavMeshAgent
        name: navMeshNavMeshAgent
        nameWithType: Agent.navMeshNavMeshAgent
        qualifiedName: TowerDefense.Agents.Agent.navMeshNavMeshAgent
      VB:
      - id: TowerDefense.Agents.Agent.navMeshNavMeshAgent
        name: navMeshNavMeshAgent
        nameWithType: Agent.navMeshNavMeshAgent
        qualifiedName: TowerDefense.Agents.Agent.navMeshNavMeshAgent
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.navMeshNavMeshAgent
  TowerDefense.Agents.Agent.navMeshMask:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.navMeshMask
        name: navMeshMask
        nameWithType: Agent.navMeshMask
        qualifiedName: TowerDefense.Agents.Agent.navMeshMask
      VB:
      - id: TowerDefense.Agents.Agent.navMeshMask
        name: navMeshMask
        nameWithType: Agent.navMeshMask
        qualifiedName: TowerDefense.Agents.Agent.navMeshMask
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.navMeshMask
  TowerDefense.Agents.Agent.originalMovementSpeed:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.originalMovementSpeed
        name: originalMovementSpeed
        nameWithType: Agent.originalMovementSpeed
        qualifiedName: TowerDefense.Agents.Agent.originalMovementSpeed
      VB:
      - id: TowerDefense.Agents.Agent.originalMovementSpeed
        name: originalMovementSpeed
        nameWithType: Agent.originalMovementSpeed
        qualifiedName: TowerDefense.Agents.Agent.originalMovementSpeed
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.originalMovementSpeed
  TowerDefense.Agents.Agent.isPathBlocked:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.isPathBlocked
        name: isPathBlocked
        nameWithType: Agent.isPathBlocked
        qualifiedName: TowerDefense.Agents.Agent.isPathBlocked
      VB:
      - id: TowerDefense.Agents.Agent.isPathBlocked
        name: isPathBlocked
        nameWithType: Agent.isPathBlocked
        qualifiedName: TowerDefense.Agents.Agent.isPathBlocked
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.isPathBlocked
  TowerDefense.Agents.Agent.isAtDestination:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.isAtDestination
        name: isAtDestination
        nameWithType: Agent.isAtDestination
        qualifiedName: TowerDefense.Agents.Agent.isAtDestination
      VB:
      - id: TowerDefense.Agents.Agent.isAtDestination
        name: isAtDestination
        nameWithType: Agent.isAtDestination
        qualifiedName: TowerDefense.Agents.Agent.isAtDestination
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: P:TowerDefense.Agents.Agent.isAtDestination
  TowerDefense.Agents.Agent.SetNode(Node):
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.SetNode(Node)
        name: SetNode
        nameWithType: Agent.SetNode
        qualifiedName: TowerDefense.Agents.Agent.SetNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.SetNode(Node)
        name: SetNode
        nameWithType: Agent.SetNode
        qualifiedName: TowerDefense.Agents.Agent.SetNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.SetNode(Node)
  TowerDefense.Agents.Agent.GetNextNode(Node):
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.GetNextNode(Node)
        name: GetNextNode
        nameWithType: Agent.GetNextNode
        qualifiedName: TowerDefense.Agents.Agent.GetNextNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.GetNextNode(Node)
        name: GetNextNode
        nameWithType: Agent.GetNextNode
        qualifiedName: TowerDefense.Agents.Agent.GetNextNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.GetNextNode(Node)
  TowerDefense.Agents.Agent.MoveToNode:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.MoveToNode
        name: MoveToNode
        nameWithType: Agent.MoveToNode
        qualifiedName: TowerDefense.Agents.Agent.MoveToNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.MoveToNode
        name: MoveToNode
        nameWithType: Agent.MoveToNode
        qualifiedName: TowerDefense.Agents.Agent.MoveToNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.MoveToNode
  TowerDefense.Agents.Agent.HandleDestinationReached:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.HandleDestinationReached
        name: HandleDestinationReached
        nameWithType: Agent.HandleDestinationReached
        qualifiedName: TowerDefense.Agents.Agent.HandleDestinationReached
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.HandleDestinationReached
        name: HandleDestinationReached
        nameWithType: Agent.HandleDestinationReached
        qualifiedName: TowerDefense.Agents.Agent.HandleDestinationReached
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.HandleDestinationReached
  TowerDefense.Agents.Agent.Awake:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Awake
        name: Awake
        nameWithType: Agent.Awake
        qualifiedName: TowerDefense.Agents.Agent.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.Awake
        name: Awake
        nameWithType: Agent.Awake
        qualifiedName: TowerDefense.Agents.Agent.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.Awake
  TowerDefense.Agents.Agent.Update:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Update
        name: Update
        nameWithType: Agent.Update
        qualifiedName: TowerDefense.Agents.Agent.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.Update
        name: Update
        nameWithType: Agent.Update
        qualifiedName: TowerDefense.Agents.Agent.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.Update
  TowerDefense.Agents.Agent.NavigateTo(Vector3):
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.NavigateTo(Vector3)
        name: NavigateTo
        nameWithType: Agent.NavigateTo
        qualifiedName: TowerDefense.Agents.Agent.NavigateTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.NavigateTo(Vector3)
        name: NavigateTo
        nameWithType: Agent.NavigateTo
        qualifiedName: TowerDefense.Agents.Agent.NavigateTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.NavigateTo(Vector3)
  TowerDefense.Agents.Agent.OnCompletePathUpdate:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.OnCompletePathUpdate
        name: OnCompletePathUpdate
        nameWithType: Agent.OnCompletePathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnCompletePathUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.OnCompletePathUpdate
        name: OnCompletePathUpdate
        nameWithType: Agent.OnCompletePathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnCompletePathUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.OnCompletePathUpdate
  Tower:
    name:
      CSharp:
      - id: Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: Tower
        isExternal: true
      VB:
      - id: Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: Tower
        isExternal: true
    isDefinition: true
  AttackAffector:
    name:
      CSharp:
      - id: AttackAffector
        name: AttackAffector
        nameWithType: AttackAffector
        qualifiedName: AttackAffector
        isExternal: true
      VB:
      - id: AttackAffector
        name: AttackAffector
        nameWithType: AttackAffector
        qualifiedName: AttackAffector
        isExternal: true
    isDefinition: true
    commentId: '!:AttackAffector'
  TowerDefense.Agents.Agent.Initialize:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Initialize
        name: Initialize
        nameWithType: Agent.Initialize
        qualifiedName: TowerDefense.Agents.Agent.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.Initialize
        name: Initialize
        nameWithType: Agent.Initialize
        qualifiedName: TowerDefense.Agents.Agent.Initialize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.Initialize
  TowerDefense.Agents.AttackingAgent.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.Initialize*
        name: Initialize
        nameWithType: AttackingAgent.Initialize
        qualifiedName: TowerDefense.Agents.AttackingAgent.Initialize
      VB:
      - id: TowerDefense.Agents.AttackingAgent.Initialize*
        name: Initialize
        nameWithType: AttackingAgent.Initialize
        qualifiedName: TowerDefense.Agents.AttackingAgent.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.Initialize
  TowerDefense.Agents.Agent.Remove:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.Remove
        name: Remove
        nameWithType: Agent.Remove
        qualifiedName: TowerDefense.Agents.Agent.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.Remove
        name: Remove
        nameWithType: Agent.Remove
        qualifiedName: TowerDefense.Agents.Agent.Remove
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.Remove
  TowerDefense.Agents.AttackingAgent.Remove*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.Remove*
        name: Remove
        nameWithType: AttackingAgent.Remove
        qualifiedName: TowerDefense.Agents.AttackingAgent.Remove
      VB:
      - id: TowerDefense.Agents.AttackingAgent.Remove*
        name: Remove
        nameWithType: AttackingAgent.Remove
        qualifiedName: TowerDefense.Agents.AttackingAgent.Remove
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.Remove
  TowerDefense.Agents.AttackingAgent.GetClosestTower*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.GetClosestTower*
        name: GetClosestTower
        nameWithType: AttackingAgent.GetClosestTower
        qualifiedName: TowerDefense.Agents.AttackingAgent.GetClosestTower
      VB:
      - id: TowerDefense.Agents.AttackingAgent.GetClosestTower*
        name: GetClosestTower
        nameWithType: AttackingAgent.GetClosestTower
        qualifiedName: TowerDefense.Agents.AttackingAgent.GetClosestTower
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.GetClosestTower
  TowerDefense.Agents.Agent.LazyLoad:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.LazyLoad
        name: LazyLoad
        nameWithType: Agent.LazyLoad
        qualifiedName: TowerDefense.Agents.Agent.LazyLoad
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.LazyLoad
        name: LazyLoad
        nameWithType: Agent.LazyLoad
        qualifiedName: TowerDefense.Agents.Agent.LazyLoad
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.LazyLoad
  TowerDefense.Agents.AttackingAgent.LazyLoad*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.LazyLoad*
        name: LazyLoad
        nameWithType: AttackingAgent.LazyLoad
        qualifiedName: TowerDefense.Agents.AttackingAgent.LazyLoad
      VB:
      - id: TowerDefense.Agents.AttackingAgent.LazyLoad*
        name: LazyLoad
        nameWithType: AttackingAgent.LazyLoad
        qualifiedName: TowerDefense.Agents.AttackingAgent.LazyLoad
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.LazyLoad
  DamageableBehaviour:
    name:
      CSharp:
      - id: DamageableBehaviour
        name: DamageableBehaviour
        nameWithType: DamageableBehaviour
        qualifiedName: DamageableBehaviour
        isExternal: true
      VB:
      - id: DamageableBehaviour
        name: DamageableBehaviour
        nameWithType: DamageableBehaviour
        qualifiedName: DamageableBehaviour
        isExternal: true
    isDefinition: true
  TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed*
        name: OnTargetTowerDestroyed
        nameWithType: AttackingAgent.OnTargetTowerDestroyed
        qualifiedName: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed
      VB:
      - id: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed*
        name: OnTargetTowerDestroyed
        nameWithType: AttackingAgent.OnTargetTowerDestroyed
        qualifiedName: TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.OnTargetTowerDestroyed
  TowerDefense.Agents.Agent.State.OnCompletePath:
    commentId: F:TowerDefense.Agents.Agent.State.OnCompletePath
  TowerDefense.Agents.Agent.State.Attacking:
    commentId: F:TowerDefense.Agents.Agent.State.Attacking
  TowerDefense.Agents.Agent.PathUpdate:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.PathUpdate
        name: PathUpdate
        nameWithType: Agent.PathUpdate
        qualifiedName: TowerDefense.Agents.Agent.PathUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.PathUpdate
        name: PathUpdate
        nameWithType: Agent.PathUpdate
        qualifiedName: TowerDefense.Agents.Agent.PathUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.PathUpdate
  TowerDefense.Agents.AttackingAgent.PathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.PathUpdate*
        name: PathUpdate
        nameWithType: AttackingAgent.PathUpdate
        qualifiedName: TowerDefense.Agents.AttackingAgent.PathUpdate
      VB:
      - id: TowerDefense.Agents.AttackingAgent.PathUpdate*
        name: PathUpdate
        nameWithType: AttackingAgent.PathUpdate
        qualifiedName: TowerDefense.Agents.AttackingAgent.PathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.PathUpdate
  TowerDefense.Agents.AttackingAgent.m_TargetTower:
    commentId: F:TowerDefense.Agents.AttackingAgent.m_TargetTower
  TowerDefense.Agents.Agent.OnPartialPathUpdate:
    name:
      CSharp:
      - id: TowerDefense.Agents.Agent.OnPartialPathUpdate
        name: OnPartialPathUpdate
        nameWithType: Agent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnPartialPathUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Agents.Agent.OnPartialPathUpdate
        name: OnPartialPathUpdate
        nameWithType: Agent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.Agent.OnPartialPathUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Agents.Agent
    commentId: M:TowerDefense.Agents.Agent.OnPartialPathUpdate
  TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate*
        name: OnPartialPathUpdate
        nameWithType: AttackingAgent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate
      VB:
      - id: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate*
        name: OnPartialPathUpdate
        nameWithType: AttackingAgent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.OnPartialPathUpdate
  TowerDefense.Agents.AttackingAgent.AttackingUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent.AttackingUpdate*
        name: AttackingUpdate
        nameWithType: AttackingAgent.AttackingUpdate
        qualifiedName: TowerDefense.Agents.AttackingAgent.AttackingUpdate
      VB:
      - id: TowerDefense.Agents.AttackingAgent.AttackingUpdate*
        name: AttackingUpdate
        nameWithType: AttackingAgent.AttackingUpdate
        qualifiedName: TowerDefense.Agents.AttackingAgent.AttackingUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.AttackingAgent.AttackingUpdate
  TowerDefense.Agents.AttackingAgent:
    name:
      CSharp:
      - id: TowerDefense.Agents.AttackingAgent
        name: AttackingAgent
        nameWithType: AttackingAgent
        qualifiedName: TowerDefense.Agents.AttackingAgent
      VB:
      - id: TowerDefense.Agents.AttackingAgent
        name: AttackingAgent
        nameWithType: AttackingAgent
        qualifiedName: TowerDefense.Agents.AttackingAgent
    isDefinition: true
    commentId: T:TowerDefense.Agents.AttackingAgent
  TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate*
        name: OnPartialPathUpdate
        nameWithType: FlyingAgent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate
      VB:
      - id: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate*
        name: OnPartialPathUpdate
        nameWithType: FlyingAgent.OnPartialPathUpdate
        qualifiedName: TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.FlyingAgent.OnPartialPathUpdate
  TowerDefense.Agents.Agent.State.PushingThrough:
    commentId: F:TowerDefense.Agents.Agent.State.PushingThrough
  TowerDefense.Agents.FlyingAgent.PathUpdate*:
    name:
      CSharp:
      - id: TowerDefense.Agents.FlyingAgent.PathUpdate*
        name: PathUpdate
        nameWithType: FlyingAgent.PathUpdate
        qualifiedName: TowerDefense.Agents.FlyingAgent.PathUpdate
      VB:
      - id: TowerDefense.Agents.FlyingAgent.PathUpdate*
        name: PathUpdate
        nameWithType: FlyingAgent.PathUpdate
        qualifiedName: TowerDefense.Agents.FlyingAgent.PathUpdate
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.FlyingAgent.PathUpdate
  TowerDefense.Agents.FlyingAgent.PushingThrough*:
    name:
      CSharp:
      - id: TowerDefense.Agents.FlyingAgent.PushingThrough*
        name: PushingThrough
        nameWithType: FlyingAgent.PushingThrough
        qualifiedName: TowerDefense.Agents.FlyingAgent.PushingThrough
      VB:
      - id: TowerDefense.Agents.FlyingAgent.PushingThrough*
        name: PushingThrough
        nameWithType: FlyingAgent.PushingThrough
        qualifiedName: TowerDefense.Agents.FlyingAgent.PushingThrough
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.FlyingAgent.PushingThrough
  TowerDefense.Agents.FlyingAgent:
    name:
      CSharp:
      - id: TowerDefense.Agents.FlyingAgent
        name: FlyingAgent
        nameWithType: FlyingAgent
        qualifiedName: TowerDefense.Agents.FlyingAgent
      VB:
      - id: TowerDefense.Agents.FlyingAgent
        name: FlyingAgent
        nameWithType: FlyingAgent
        qualifiedName: TowerDefense.Agents.FlyingAgent
    isDefinition: true
    commentId: T:TowerDefense.Agents.FlyingAgent
  Timer:
    name:
      CSharp:
      - id: Timer
        name: Timer
        nameWithType: Timer
        qualifiedName: Timer
        isExternal: true
      VB:
      - id: Timer
        name: Timer
        nameWithType: Timer
        qualifiedName: Timer
        isExternal: true
    isDefinition: true
  TowerDefense.Agents.HomeBaseAttacker.agent*:
    name:
      CSharp:
      - id: TowerDefense.Agents.HomeBaseAttacker.agent*
        name: agent
        nameWithType: HomeBaseAttacker.agent
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.agent
      VB:
      - id: TowerDefense.Agents.HomeBaseAttacker.agent*
        name: agent
        nameWithType: HomeBaseAttacker.agent
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.agent
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.HomeBaseAttacker.agent
  TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer:
    commentId: F:TowerDefense.Agents.HomeBaseAttacker.m_HomeBaseAttackTimer
  TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase*:
    name:
      CSharp:
      - id: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase*
        name: AttackHomeBase
        nameWithType: HomeBaseAttacker.AttackHomeBase
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase
      VB:
      - id: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase*
        name: AttackHomeBase
        nameWithType: HomeBaseAttacker.AttackHomeBase
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.HomeBaseAttacker.AttackHomeBase
  TowerDefense.Agents.HomeBaseAttacker.Update*:
    name:
      CSharp:
      - id: TowerDefense.Agents.HomeBaseAttacker.Update*
        name: Update
        nameWithType: HomeBaseAttacker.Update
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.Update
      VB:
      - id: TowerDefense.Agents.HomeBaseAttacker.Update*
        name: Update
        nameWithType: HomeBaseAttacker.Update
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.HomeBaseAttacker.Update
  TowerDefense.Agents.HomeBaseAttacker.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Agents.HomeBaseAttacker.Awake*
        name: Awake
        nameWithType: HomeBaseAttacker.Awake
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.Awake
      VB:
      - id: TowerDefense.Agents.HomeBaseAttacker.Awake*
        name: Awake
        nameWithType: HomeBaseAttacker.Awake
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.HomeBaseAttacker.Awake
  TowerDefense.Agents.HomeBaseAttacker.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.Agents.HomeBaseAttacker.OnDestroy*
        name: OnDestroy
        nameWithType: HomeBaseAttacker.OnDestroy
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.OnDestroy
      VB:
      - id: TowerDefense.Agents.HomeBaseAttacker.OnDestroy*
        name: OnDestroy
        nameWithType: HomeBaseAttacker.OnDestroy
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.Agents.HomeBaseAttacker.OnDestroy
  TowerDefense.Agents.HomeBaseAttacker:
    name:
      CSharp:
      - id: TowerDefense.Agents.HomeBaseAttacker
        name: HomeBaseAttacker
        nameWithType: HomeBaseAttacker
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker
      VB:
      - id: TowerDefense.Agents.HomeBaseAttacker
        name: HomeBaseAttacker
        nameWithType: HomeBaseAttacker
        qualifiedName: TowerDefense.Agents.HomeBaseAttacker
    isDefinition: true
    commentId: T:TowerDefense.Agents.HomeBaseAttacker
  TowerDefense.Agents.Data.AgentConfiguration:
    name:
      CSharp:
      - id: TowerDefense.Agents.Data.AgentConfiguration
        name: AgentConfiguration
        nameWithType: AgentConfiguration
        qualifiedName: TowerDefense.Agents.Data.AgentConfiguration
      VB:
      - id: TowerDefense.Agents.Data.AgentConfiguration
        name: AgentConfiguration
        nameWithType: AgentConfiguration
        qualifiedName: TowerDefense.Agents.Data.AgentConfiguration
    isDefinition: true
    commentId: T:TowerDefense.Agents.Data.AgentConfiguration
  TowerDefense.Agents.Data:
    name:
      CSharp:
      - name: TowerDefense.Agents.Data
        nameWithType: TowerDefense.Agents.Data
        qualifiedName: TowerDefense.Agents.Data
      VB:
      - name: TowerDefense.Agents.Data
        nameWithType: TowerDefense.Agents.Data
        qualifiedName: TowerDefense.Agents.Data
    isDefinition: true
    commentId: N:TowerDefense.Agents.Data
  PostProcessingProfile:
    name:
      CSharp:
      - id: PostProcessingProfile
        name: PostProcessingProfile
        nameWithType: PostProcessingProfile
        qualifiedName: PostProcessingProfile
        isExternal: true
      VB:
      - id: PostProcessingProfile
        name: PostProcessingProfile
        nameWithType: PostProcessingProfile
        qualifiedName: PostProcessingProfile
        isExternal: true
    isDefinition: true
  TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake*
        name: Awake
        nameWithType: PostProcessorConfigurationSelector.Awake
        qualifiedName: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake
      VB:
      - id: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake*
        name: Awake
        nameWithType: PostProcessorConfigurationSelector.Awake
        qualifiedName: TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Cameras.PostProcessorConfigurationSelector.Awake
  TowerDefense.Cameras.PostProcessorConfigurationSelector:
    name:
      CSharp:
      - id: TowerDefense.Cameras.PostProcessorConfigurationSelector
        name: PostProcessorConfigurationSelector
        nameWithType: PostProcessorConfigurationSelector
        qualifiedName: TowerDefense.Cameras.PostProcessorConfigurationSelector
      VB:
      - id: TowerDefense.Cameras.PostProcessorConfigurationSelector
        name: PostProcessorConfigurationSelector
        nameWithType: PostProcessorConfigurationSelector
        qualifiedName: TowerDefense.Cameras.PostProcessorConfigurationSelector
    isDefinition: true
    commentId: T:TowerDefense.Cameras.PostProcessorConfigurationSelector
  TowerDefense.Cameras:
    name:
      CSharp:
      - name: TowerDefense.Cameras
        nameWithType: TowerDefense.Cameras
        qualifiedName: TowerDefense.Cameras
      VB:
      - name: TowerDefense.Cameras
        nameWithType: TowerDefense.Cameras
        qualifiedName: TowerDefense.Cameras
    isDefinition: true
    commentId: N:TowerDefense.Cameras
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  TowerDefense.Economy.CurrencyChangeInfo.#ctor*:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyChangeInfo.#ctor*
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo.CurrencyChangeInfo
        qualifiedName: TowerDefense.Economy.CurrencyChangeInfo.CurrencyChangeInfo
      VB:
      - id: TowerDefense.Economy.CurrencyChangeInfo.#ctor*
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo.CurrencyChangeInfo
        qualifiedName: TowerDefense.Economy.CurrencyChangeInfo.CurrencyChangeInfo
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.CurrencyChangeInfo.#ctor
  TowerDefense.Economy.CurrencyChangeInfo:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyChangeInfo
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo
        qualifiedName: TowerDefense.Economy.CurrencyChangeInfo
      VB:
      - id: TowerDefense.Economy.CurrencyChangeInfo
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo
        qualifiedName: TowerDefense.Economy.CurrencyChangeInfo
    isDefinition: true
    commentId: T:TowerDefense.Economy.CurrencyChangeInfo
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Action{TowerDefense.Economy.CurrencyChangeInfo}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Economy.CurrencyChangeInfo
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo
        qualifiedName: TowerDefense.Economy.CurrencyChangeInfo
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Economy.CurrencyChangeInfo
        name: CurrencyChangeInfo
        nameWithType: CurrencyChangeInfo
        qualifiedName: TowerDefense.Economy.CurrencyChangeInfo
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{TowerDefense.Economy.CurrencyChangeInfo}'
  RepeatingTimer:
    name:
      CSharp:
      - id: RepeatingTimer
        name: RepeatingTimer
        nameWithType: RepeatingTimer
        qualifiedName: RepeatingTimer
        isExternal: true
      VB:
      - id: RepeatingTimer
        name: RepeatingTimer
        nameWithType: RepeatingTimer
        qualifiedName: RepeatingTimer
        isExternal: true
    isDefinition: true
  Currency:
    name:
      CSharp:
      - id: Currency
        name: Currency
        nameWithType: Currency
        qualifiedName: Currency
        isExternal: true
      VB:
      - id: Currency
        name: Currency
        nameWithType: Currency
        qualifiedName: Currency
        isExternal: true
    isDefinition: true
  TowerDefense.Economy.CurrencyGainer.currency*:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyGainer.currency*
        name: currency
        nameWithType: CurrencyGainer.currency
        qualifiedName: TowerDefense.Economy.CurrencyGainer.currency
      VB:
      - id: TowerDefense.Economy.CurrencyGainer.currency*
        name: currency
        nameWithType: CurrencyGainer.currency
        qualifiedName: TowerDefense.Economy.CurrencyGainer.currency
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.CurrencyGainer.currency
  TowerDefense.Economy.CurrencyGainer.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyGainer.Initialize*
        name: Initialize
        nameWithType: CurrencyGainer.Initialize
        qualifiedName: TowerDefense.Economy.CurrencyGainer.Initialize
      VB:
      - id: TowerDefense.Economy.CurrencyGainer.Initialize*
        name: Initialize
        nameWithType: CurrencyGainer.Initialize
        qualifiedName: TowerDefense.Economy.CurrencyGainer.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.CurrencyGainer.Initialize
  TowerDefense.Economy.CurrencyGainer.Tick*:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyGainer.Tick*
        name: Tick
        nameWithType: CurrencyGainer.Tick
        qualifiedName: TowerDefense.Economy.CurrencyGainer.Tick
      VB:
      - id: TowerDefense.Economy.CurrencyGainer.Tick*
        name: Tick
        nameWithType: CurrencyGainer.Tick
        qualifiedName: TowerDefense.Economy.CurrencyGainer.Tick
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.CurrencyGainer.Tick
  TowerDefense.Economy.CurrencyGainer.UpdateGainRate*:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyGainer.UpdateGainRate*
        name: UpdateGainRate
        nameWithType: CurrencyGainer.UpdateGainRate
        qualifiedName: TowerDefense.Economy.CurrencyGainer.UpdateGainRate
      VB:
      - id: TowerDefense.Economy.CurrencyGainer.UpdateGainRate*
        name: UpdateGainRate
        nameWithType: CurrencyGainer.UpdateGainRate
        qualifiedName: TowerDefense.Economy.CurrencyGainer.UpdateGainRate
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.CurrencyGainer.UpdateGainRate
  TowerDefense.Economy.CurrencyGainer.ConstantGain*:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyGainer.ConstantGain*
        name: ConstantGain
        nameWithType: CurrencyGainer.ConstantGain
        qualifiedName: TowerDefense.Economy.CurrencyGainer.ConstantGain
      VB:
      - id: TowerDefense.Economy.CurrencyGainer.ConstantGain*
        name: ConstantGain
        nameWithType: CurrencyGainer.ConstantGain
        qualifiedName: TowerDefense.Economy.CurrencyGainer.ConstantGain
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.CurrencyGainer.ConstantGain
  TowerDefense.Economy.CurrencyGainer:
    name:
      CSharp:
      - id: TowerDefense.Economy.CurrencyGainer
        name: CurrencyGainer
        nameWithType: CurrencyGainer
        qualifiedName: TowerDefense.Economy.CurrencyGainer
      VB:
      - id: TowerDefense.Economy.CurrencyGainer
        name: CurrencyGainer
        nameWithType: CurrencyGainer
        qualifiedName: TowerDefense.Economy.CurrencyGainer
    isDefinition: true
    commentId: T:TowerDefense.Economy.CurrencyGainer
  TowerDefense.Economy.LootDrop.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Economy.LootDrop.OnEnable*
        name: OnEnable
        nameWithType: LootDrop.OnEnable
        qualifiedName: TowerDefense.Economy.LootDrop.OnEnable
      VB:
      - id: TowerDefense.Economy.LootDrop.OnEnable*
        name: OnEnable
        nameWithType: LootDrop.OnEnable
        qualifiedName: TowerDefense.Economy.LootDrop.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.LootDrop.OnEnable
  TowerDefense.Economy.LootDrop.m_DamageableBehaviour:
    commentId: F:TowerDefense.Economy.LootDrop.m_DamageableBehaviour
  TowerDefense.Economy.LootDrop.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.Economy.LootDrop.OnDisable*
        name: OnDisable
        nameWithType: LootDrop.OnDisable
        qualifiedName: TowerDefense.Economy.LootDrop.OnDisable
      VB:
      - id: TowerDefense.Economy.LootDrop.OnDisable*
        name: OnDisable
        nameWithType: LootDrop.OnDisable
        qualifiedName: TowerDefense.Economy.LootDrop.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.LootDrop.OnDisable
  TowerDefense.Economy.LootDrop.lootDropped:
    commentId: F:TowerDefense.Economy.LootDrop.lootDropped
  HealthChangeInfo:
    name:
      CSharp:
      - id: HealthChangeInfo
        name: HealthChangeInfo
        nameWithType: HealthChangeInfo
        qualifiedName: HealthChangeInfo
        isExternal: true
      VB:
      - id: HealthChangeInfo
        name: HealthChangeInfo
        nameWithType: HealthChangeInfo
        qualifiedName: HealthChangeInfo
        isExternal: true
    isDefinition: true
  TowerDefense.Economy.LootDrop.OnDeath*:
    name:
      CSharp:
      - id: TowerDefense.Economy.LootDrop.OnDeath*
        name: OnDeath
        nameWithType: LootDrop.OnDeath
        qualifiedName: TowerDefense.Economy.LootDrop.OnDeath
      VB:
      - id: TowerDefense.Economy.LootDrop.OnDeath*
        name: OnDeath
        nameWithType: LootDrop.OnDeath
        qualifiedName: TowerDefense.Economy.LootDrop.OnDeath
    isDefinition: true
    commentId: Overload:TowerDefense.Economy.LootDrop.OnDeath
  TowerDefense.Economy.LootDrop:
    name:
      CSharp:
      - id: TowerDefense.Economy.LootDrop
        name: LootDrop
        nameWithType: LootDrop
        qualifiedName: TowerDefense.Economy.LootDrop
      VB:
      - id: TowerDefense.Economy.LootDrop
        name: LootDrop
        nameWithType: LootDrop
        qualifiedName: TowerDefense.Economy.LootDrop
    isDefinition: true
    commentId: T:TowerDefense.Economy.LootDrop
  TowerDefense.Economy:
    name:
      CSharp:
      - name: TowerDefense.Economy
        nameWithType: TowerDefense.Economy
        qualifiedName: TowerDefense.Economy
      VB:
      - name: TowerDefense.Economy
        nameWithType: TowerDefense.Economy
        qualifiedName: TowerDefense.Economy
    isDefinition: true
    commentId: N:TowerDefense.Economy
  TowerDefense.Effects.MobileParticleSelector.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Effects.MobileParticleSelector.Awake*
        name: Awake
        nameWithType: MobileParticleSelector.Awake
        qualifiedName: TowerDefense.Effects.MobileParticleSelector.Awake
      VB:
      - id: TowerDefense.Effects.MobileParticleSelector.Awake*
        name: Awake
        nameWithType: MobileParticleSelector.Awake
        qualifiedName: TowerDefense.Effects.MobileParticleSelector.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Effects.MobileParticleSelector.Awake
  TowerDefense.Effects.MobileParticleSelector:
    name:
      CSharp:
      - id: TowerDefense.Effects.MobileParticleSelector
        name: MobileParticleSelector
        nameWithType: MobileParticleSelector
        qualifiedName: TowerDefense.Effects.MobileParticleSelector
      VB:
      - id: TowerDefense.Effects.MobileParticleSelector
        name: MobileParticleSelector
        nameWithType: MobileParticleSelector
        qualifiedName: TowerDefense.Effects.MobileParticleSelector
    isDefinition: true
    commentId: T:TowerDefense.Effects.MobileParticleSelector
  TowerDefense.Effects.ProjectileEffect.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Effects.ProjectileEffect.Awake*
        name: Awake
        nameWithType: ProjectileEffect.Awake
        qualifiedName: TowerDefense.Effects.ProjectileEffect.Awake
      VB:
      - id: TowerDefense.Effects.ProjectileEffect.Awake*
        name: Awake
        nameWithType: ProjectileEffect.Awake
        qualifiedName: TowerDefense.Effects.ProjectileEffect.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Effects.ProjectileEffect.Awake
  TowerDefense.Effects.ProjectileEffect.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.Effects.ProjectileEffect.OnDestroy*
        name: OnDestroy
        nameWithType: ProjectileEffect.OnDestroy
        qualifiedName: TowerDefense.Effects.ProjectileEffect.OnDestroy
      VB:
      - id: TowerDefense.Effects.ProjectileEffect.OnDestroy*
        name: OnDestroy
        nameWithType: ProjectileEffect.OnDestroy
        qualifiedName: TowerDefense.Effects.ProjectileEffect.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.Effects.ProjectileEffect.OnDestroy
  TowerDefense.Effects.ProjectileEffect.OnFired*:
    name:
      CSharp:
      - id: TowerDefense.Effects.ProjectileEffect.OnFired*
        name: OnFired
        nameWithType: ProjectileEffect.OnFired
        qualifiedName: TowerDefense.Effects.ProjectileEffect.OnFired
      VB:
      - id: TowerDefense.Effects.ProjectileEffect.OnFired*
        name: OnFired
        nameWithType: ProjectileEffect.OnFired
        qualifiedName: TowerDefense.Effects.ProjectileEffect.OnFired
    isDefinition: true
    commentId: Overload:TowerDefense.Effects.ProjectileEffect.OnFired
  TowerDefense.Effects.ProjectileEffect.Update*:
    name:
      CSharp:
      - id: TowerDefense.Effects.ProjectileEffect.Update*
        name: Update
        nameWithType: ProjectileEffect.Update
        qualifiedName: TowerDefense.Effects.ProjectileEffect.Update
      VB:
      - id: TowerDefense.Effects.ProjectileEffect.Update*
        name: Update
        nameWithType: ProjectileEffect.Update
        qualifiedName: TowerDefense.Effects.ProjectileEffect.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Effects.ProjectileEffect.Update
  TowerDefense.Effects.ProjectileEffect.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.Effects.ProjectileEffect.OnDisable*
        name: OnDisable
        nameWithType: ProjectileEffect.OnDisable
        qualifiedName: TowerDefense.Effects.ProjectileEffect.OnDisable
      VB:
      - id: TowerDefense.Effects.ProjectileEffect.OnDisable*
        name: OnDisable
        nameWithType: ProjectileEffect.OnDisable
        qualifiedName: TowerDefense.Effects.ProjectileEffect.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.Effects.ProjectileEffect.OnDisable
  TowerDefense.Effects.ProjectileEffect:
    name:
      CSharp:
      - id: TowerDefense.Effects.ProjectileEffect
        name: ProjectileEffect
        nameWithType: ProjectileEffect
        qualifiedName: TowerDefense.Effects.ProjectileEffect
      VB:
      - id: TowerDefense.Effects.ProjectileEffect
        name: ProjectileEffect
        nameWithType: ProjectileEffect
        qualifiedName: TowerDefense.Effects.ProjectileEffect
    isDefinition: true
    commentId: T:TowerDefense.Effects.ProjectileEffect
  TowerDefense.Effects:
    name:
      CSharp:
      - name: TowerDefense.Effects
        nameWithType: TowerDefense.Effects
        qualifiedName: TowerDefense.Effects
      VB:
      - name: TowerDefense.Effects
        nameWithType: TowerDefense.Effects
        qualifiedName: TowerDefense.Effects
    isDefinition: true
    commentId: N:TowerDefense.Effects
  List{TowerDefense.Game.LevelSaveData}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Game.LevelSaveData
        name: LevelSaveData
        nameWithType: LevelSaveData
        qualifiedName: TowerDefense.Game.LevelSaveData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Game.LevelSaveData
        name: LevelSaveData
        nameWithType: LevelSaveData
        qualifiedName: TowerDefense.Game.LevelSaveData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.Game.LevelSaveData}'
  TowerDefense.Game.GameDataStore.PreSave*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameDataStore.PreSave*
        name: PreSave
        nameWithType: GameDataStore.PreSave
        qualifiedName: TowerDefense.Game.GameDataStore.PreSave
      VB:
      - id: TowerDefense.Game.GameDataStore.PreSave*
        name: PreSave
        nameWithType: GameDataStore.PreSave
        qualifiedName: TowerDefense.Game.GameDataStore.PreSave
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameDataStore.PreSave
  TowerDefense.Game.GameDataStore.PostLoad*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameDataStore.PostLoad*
        name: PostLoad
        nameWithType: GameDataStore.PostLoad
        qualifiedName: TowerDefense.Game.GameDataStore.PostLoad
      VB:
      - id: TowerDefense.Game.GameDataStore.PostLoad*
        name: PostLoad
        nameWithType: GameDataStore.PostLoad
        qualifiedName: TowerDefense.Game.GameDataStore.PostLoad
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameDataStore.PostLoad
  TowerDefense.Game.GameDataStore.CompleteLevel*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameDataStore.CompleteLevel*
        name: CompleteLevel
        nameWithType: GameDataStore.CompleteLevel
        qualifiedName: TowerDefense.Game.GameDataStore.CompleteLevel
      VB:
      - id: TowerDefense.Game.GameDataStore.CompleteLevel*
        name: CompleteLevel
        nameWithType: GameDataStore.CompleteLevel
        qualifiedName: TowerDefense.Game.GameDataStore.CompleteLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameDataStore.CompleteLevel
  TowerDefense.Game.GameDataStore.IsLevelCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameDataStore.IsLevelCompleted*
        name: IsLevelCompleted
        nameWithType: GameDataStore.IsLevelCompleted
        qualifiedName: TowerDefense.Game.GameDataStore.IsLevelCompleted
      VB:
      - id: TowerDefense.Game.GameDataStore.IsLevelCompleted*
        name: IsLevelCompleted
        nameWithType: GameDataStore.IsLevelCompleted
        qualifiedName: TowerDefense.Game.GameDataStore.IsLevelCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameDataStore.IsLevelCompleted
  TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel*
        name: GetNumberOfStarForLevel
        nameWithType: GameDataStore.GetNumberOfStarForLevel
        qualifiedName: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel
      VB:
      - id: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel*
        name: GetNumberOfStarForLevel
        nameWithType: GameDataStore.GetNumberOfStarForLevel
        qualifiedName: TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameDataStore.GetNumberOfStarForLevel
  TowerDefense.Game.GameDataStore:
    name:
      CSharp:
      - id: TowerDefense.Game.GameDataStore
        name: GameDataStore
        nameWithType: GameDataStore
        qualifiedName: TowerDefense.Game.GameDataStore
      VB:
      - id: TowerDefense.Game.GameDataStore
        name: GameDataStore
        nameWithType: GameDataStore
        qualifiedName: TowerDefense.Game.GameDataStore
    isDefinition: true
    commentId: T:TowerDefense.Game.GameDataStore
  LevelList:
    name:
      CSharp:
      - id: LevelList
        name: LevelList
        nameWithType: LevelList
        qualifiedName: LevelList
        isExternal: true
      VB:
      - id: LevelList
        name: LevelList
        nameWithType: LevelList
        qualifiedName: LevelList
        isExternal: true
    isDefinition: true
  TowerDefense.Game.GameManager.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameManager.Awake*
        name: Awake
        nameWithType: GameManager.Awake
        qualifiedName: TowerDefense.Game.GameManager.Awake
      VB:
      - id: TowerDefense.Game.GameManager.Awake*
        name: Awake
        nameWithType: GameManager.Awake
        qualifiedName: TowerDefense.Game.GameManager.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameManager.Awake
  TowerDefense.Game.GameManager.CompleteLevel*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameManager.CompleteLevel*
        name: CompleteLevel
        nameWithType: GameManager.CompleteLevel
        qualifiedName: TowerDefense.Game.GameManager.CompleteLevel
      VB:
      - id: TowerDefense.Game.GameManager.CompleteLevel*
        name: CompleteLevel
        nameWithType: GameManager.CompleteLevel
        qualifiedName: TowerDefense.Game.GameManager.CompleteLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameManager.CompleteLevel
  LevelItem:
    name:
      CSharp:
      - id: LevelItem
        name: LevelItem
        nameWithType: LevelItem
        qualifiedName: LevelItem
        isExternal: true
      VB:
      - id: LevelItem
        name: LevelItem
        nameWithType: LevelItem
        qualifiedName: LevelItem
        isExternal: true
    isDefinition: true
  TowerDefense.Game.GameManager.GetLevelForCurrentScene*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameManager.GetLevelForCurrentScene*
        name: GetLevelForCurrentScene
        nameWithType: GameManager.GetLevelForCurrentScene
        qualifiedName: TowerDefense.Game.GameManager.GetLevelForCurrentScene
      VB:
      - id: TowerDefense.Game.GameManager.GetLevelForCurrentScene*
        name: GetLevelForCurrentScene
        nameWithType: GameManager.GetLevelForCurrentScene
        qualifiedName: TowerDefense.Game.GameManager.GetLevelForCurrentScene
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameManager.GetLevelForCurrentScene
  TowerDefense.Game.GameManager.IsLevelCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameManager.IsLevelCompleted*
        name: IsLevelCompleted
        nameWithType: GameManager.IsLevelCompleted
        qualifiedName: TowerDefense.Game.GameManager.IsLevelCompleted
      VB:
      - id: TowerDefense.Game.GameManager.IsLevelCompleted*
        name: IsLevelCompleted
        nameWithType: GameManager.IsLevelCompleted
        qualifiedName: TowerDefense.Game.GameManager.IsLevelCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameManager.IsLevelCompleted
  TowerDefense.Game.GameManager.GetStarsForLevel*:
    name:
      CSharp:
      - id: TowerDefense.Game.GameManager.GetStarsForLevel*
        name: GetStarsForLevel
        nameWithType: GameManager.GetStarsForLevel
        qualifiedName: TowerDefense.Game.GameManager.GetStarsForLevel
      VB:
      - id: TowerDefense.Game.GameManager.GetStarsForLevel*
        name: GetStarsForLevel
        nameWithType: GameManager.GetStarsForLevel
        qualifiedName: TowerDefense.Game.GameManager.GetStarsForLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Game.GameManager.GetStarsForLevel
  TowerDefense.Game.GameManager:
    name:
      CSharp:
      - id: TowerDefense.Game.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: TowerDefense.Game.GameManager
      VB:
      - id: TowerDefense.Game.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: TowerDefense.Game.GameManager
    isDefinition: true
    commentId: T:TowerDefense.Game.GameManager
  TowerDefense.Game.LevelSaveData.#ctor*:
    name:
      CSharp:
      - id: TowerDefense.Game.LevelSaveData.#ctor*
        name: LevelSaveData
        nameWithType: LevelSaveData.LevelSaveData
        qualifiedName: TowerDefense.Game.LevelSaveData.LevelSaveData
      VB:
      - id: TowerDefense.Game.LevelSaveData.#ctor*
        name: LevelSaveData
        nameWithType: LevelSaveData.LevelSaveData
        qualifiedName: TowerDefense.Game.LevelSaveData.LevelSaveData
    isDefinition: true
    commentId: Overload:TowerDefense.Game.LevelSaveData.#ctor
  TowerDefense.Game.LevelSaveData:
    name:
      CSharp:
      - id: TowerDefense.Game.LevelSaveData
        name: LevelSaveData
        nameWithType: LevelSaveData
        qualifiedName: TowerDefense.Game.LevelSaveData
      VB:
      - id: TowerDefense.Game.LevelSaveData
        name: LevelSaveData
        nameWithType: LevelSaveData
        qualifiedName: TowerDefense.Game.LevelSaveData
    isDefinition: true
    commentId: T:TowerDefense.Game.LevelSaveData
  TowerDefense.Game:
    name:
      CSharp:
      - name: TowerDefense.Game
        nameWithType: TowerDefense.Game
        qualifiedName: TowerDefense.Game
      VB:
      - name: TowerDefense.Game
        nameWithType: TowerDefense.Game
        qualifiedName: TowerDefense.Game
    isDefinition: true
    commentId: N:TowerDefense.Game
  TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable*
        name: OnEnable
        nameWithType: TowerDefenseKeyboardMouseInput.OnEnable
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable
      VB:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable*
        name: OnEnable
        nameWithType: TowerDefenseKeyboardMouseInput.OnEnable
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnEnable
  TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable*
        name: OnDisable
        nameWithType: TowerDefenseKeyboardMouseInput.OnDisable
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable
      VB:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable*
        name: OnDisable
        nameWithType: TowerDefenseKeyboardMouseInput.OnDisable
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseKeyboardMouseInput.OnDisable
  TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update*
        name: Update
        nameWithType: TowerDefenseKeyboardMouseInput.Update
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update
      VB:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update*
        name: Update
        nameWithType: TowerDefenseKeyboardMouseInput.Update
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseKeyboardMouseInput.Update
  TowerDefense.Input.TowerDefenseKeyboardMouseInput:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput
        name: TowerDefenseKeyboardMouseInput
        nameWithType: TowerDefenseKeyboardMouseInput
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput
      VB:
      - id: TowerDefense.Input.TowerDefenseKeyboardMouseInput
        name: TowerDefenseKeyboardMouseInput
        nameWithType: TowerDefenseKeyboardMouseInput
        qualifiedName: TowerDefense.Input.TowerDefenseKeyboardMouseInput
    isDefinition: true
    commentId: T:TowerDefense.Input.TowerDefenseKeyboardMouseInput
  MovingCanvas:
    name:
      CSharp:
      - id: MovingCanvas
        name: MovingCanvas
        nameWithType: MovingCanvas
        qualifiedName: MovingCanvas
        isExternal: true
      VB:
      - id: MovingCanvas
        name: MovingCanvas
        nameWithType: MovingCanvas
        qualifiedName: MovingCanvas
        isExternal: true
    isDefinition: true
  TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation*
        name: OnTowerPlacementConfirmation
        nameWithType: TowerDefenseTouchInput.OnTowerPlacementConfirmation
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation*
        name: OnTowerPlacementConfirmation
        nameWithType: TowerDefenseTouchInput.OnTowerPlacementConfirmation
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnTowerPlacementConfirmation
  TowerDefense.Input.TowerDefenseTouchInput.Cancel*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.Cancel*
        name: Cancel
        nameWithType: TowerDefenseTouchInput.Cancel
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.Cancel
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.Cancel*
        name: Cancel
        nameWithType: TowerDefenseTouchInput.Cancel
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.Cancel
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.Cancel
  TowerDefense.Input.TowerDefenseTouchInput.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnEnable*
        name: OnEnable
        nameWithType: TowerDefenseTouchInput.OnEnable
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnEnable
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnEnable*
        name: OnEnable
        nameWithType: TowerDefenseTouchInput.OnEnable
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnEnable
  TowerDefense.Input.TowerDefenseTouchInput.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnDisable*
        name: OnDisable
        nameWithType: TowerDefenseTouchInput.OnDisable
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnDisable
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnDisable*
        name: OnDisable
        nameWithType: TowerDefenseTouchInput.OnDisable
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnDisable
  TowerDefense.Input.TowerDefenseTouchInput.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.Awake*
        name: Awake
        nameWithType: TowerDefenseTouchInput.Awake
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.Awake
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.Awake*
        name: Awake
        nameWithType: TowerDefenseTouchInput.Awake
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.Awake
  TowerDefense.Input.TowerDefenseTouchInput.Update*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.Update*
        name: Update
        nameWithType: TowerDefenseTouchInput.Update
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.Update
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.Update*
        name: Update
        nameWithType: TowerDefenseTouchInput.Update
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.Update
  PointerActionInfo:
    name:
      CSharp:
      - id: PointerActionInfo
        name: PointerActionInfo
        nameWithType: PointerActionInfo
        qualifiedName: PointerActionInfo
        isExternal: true
      VB:
      - id: PointerActionInfo
        name: PointerActionInfo
        nameWithType: PointerActionInfo
        qualifiedName: PointerActionInfo
        isExternal: true
    isDefinition: true
  TowerDefense.Input.TowerDefenseTouchInput.OnPress*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnPress*
        name: OnPress
        nameWithType: TowerDefenseTouchInput.OnPress
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnPress
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnPress*
        name: OnPress
        nameWithType: TowerDefenseTouchInput.OnPress
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnPress
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnPress
  TowerDefense.Input.TowerDefenseTouchInput.OnRelease*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnRelease*
        name: OnRelease
        nameWithType: TowerDefenseTouchInput.OnRelease
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnRelease
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnRelease*
        name: OnRelease
        nameWithType: TowerDefenseTouchInput.OnRelease
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnRelease
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnRelease
  TowerDefense.Input.TowerDefenseTouchInput.OnTap*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnTap*
        name: OnTap
        nameWithType: TowerDefenseTouchInput.OnTap
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnTap
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnTap*
        name: OnTap
        nameWithType: TowerDefenseTouchInput.OnTap
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnTap
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnTap
  TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag*
        name: OnStartDrag
        nameWithType: TowerDefenseTouchInput.OnStartDrag
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag*
        name: OnStartDrag
        nameWithType: TowerDefenseTouchInput.OnStartDrag
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnStartDrag
  TowerDefense.Input.TowerDefenseTouchInput.OnDrag*:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnDrag*
        name: OnDrag
        nameWithType: TowerDefenseTouchInput.OnDrag
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnDrag
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput.OnDrag*
        name: OnDrag
        nameWithType: TowerDefenseTouchInput.OnDrag
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput.OnDrag
    isDefinition: true
    commentId: Overload:TowerDefense.Input.TowerDefenseTouchInput.OnDrag
  TowerDefense.Input.TowerDefenseTouchInput:
    name:
      CSharp:
      - id: TowerDefense.Input.TowerDefenseTouchInput
        name: TowerDefenseTouchInput
        nameWithType: TowerDefenseTouchInput
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput
      VB:
      - id: TowerDefense.Input.TowerDefenseTouchInput
        name: TowerDefenseTouchInput
        nameWithType: TowerDefenseTouchInput
        qualifiedName: TowerDefense.Input.TowerDefenseTouchInput
    isDefinition: true
    commentId: T:TowerDefense.Input.TowerDefenseTouchInput
  TowerDefense.Input:
    name:
      CSharp:
      - name: TowerDefense.Input
        nameWithType: TowerDefense.Input
        qualifiedName: TowerDefense.Input
      VB:
      - name: TowerDefense.Input
        nameWithType: TowerDefense.Input
        qualifiedName: TowerDefense.Input
    isDefinition: true
    commentId: N:TowerDefense.Input
  Action:
    name:
      CSharp:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      VB:
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
    isDefinition: true
  TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted*
        name: SafelyCallIntroCompleted
        nameWithType: LevelIntro.SafelyCallIntroCompleted
        qualifiedName: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
      VB:
      - id: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted*
        name: SafelyCallIntroCompleted
        nameWithType: LevelIntro.SafelyCallIntroCompleted
        qualifiedName: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
  TowerDefense.Level.LevelIntro:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelIntro
        name: LevelIntro
        nameWithType: LevelIntro
        qualifiedName: TowerDefense.Level.LevelIntro
      VB:
      - id: TowerDefense.Level.LevelIntro
        name: LevelIntro
        nameWithType: LevelIntro
        qualifiedName: TowerDefense.Level.LevelIntro
    isDefinition: true
    parent: TowerDefense.Level
    commentId: T:TowerDefense.Level.LevelIntro
  TowerDefense.Level:
    name:
      CSharp:
      - name: TowerDefense.Level
        nameWithType: TowerDefense.Level
        qualifiedName: TowerDefense.Level
      VB:
      - name: TowerDefense.Level
        nameWithType: TowerDefense.Level
        qualifiedName: TowerDefense.Level
    isDefinition: true
    commentId: N:TowerDefense.Level
  TowerLibrary:
    name:
      CSharp:
      - id: TowerLibrary
        name: TowerLibrary
        nameWithType: TowerLibrary
        qualifiedName: TowerLibrary
        isExternal: true
      VB:
      - id: TowerLibrary
        name: TowerLibrary
        nameWithType: TowerLibrary
        qualifiedName: TowerLibrary
        isExternal: true
    isDefinition: true
    commentId: '!:TowerLibrary'
  TowerDefense.Level.PlayerHomeBase[]:
    name:
      CSharp:
      - id: TowerDefense.Level.PlayerHomeBase
        name: PlayerHomeBase
        nameWithType: PlayerHomeBase
        qualifiedName: TowerDefense.Level.PlayerHomeBase
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: TowerDefense.Level.PlayerHomeBase
        name: PlayerHomeBase
        nameWithType: PlayerHomeBase
        qualifiedName: TowerDefense.Level.PlayerHomeBase
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Collider[]:
    name:
      CSharp:
      - id: Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.Level.WaveManager:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager
        name: WaveManager
        nameWithType: WaveManager
        qualifiedName: TowerDefense.Level.WaveManager
      VB:
      - id: TowerDefense.Level.WaveManager
        name: WaveManager
        nameWithType: WaveManager
        qualifiedName: TowerDefense.Level.WaveManager
    isDefinition: true
    parent: TowerDefense.Level
    commentId: T:TowerDefense.Level.WaveManager
  TowerDefense.Level.LevelManager.waveManager*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.waveManager*
        name: waveManager
        nameWithType: LevelManager.waveManager
        qualifiedName: TowerDefense.Level.LevelManager.waveManager
      VB:
      - id: TowerDefense.Level.LevelManager.waveManager*
        name: waveManager
        nameWithType: LevelManager.waveManager
        qualifiedName: TowerDefense.Level.LevelManager.waveManager
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.waveManager
  TowerDefense.Level.LevelManager.numberOfEnemies*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.numberOfEnemies*
        name: numberOfEnemies
        nameWithType: LevelManager.numberOfEnemies
        qualifiedName: TowerDefense.Level.LevelManager.numberOfEnemies
      VB:
      - id: TowerDefense.Level.LevelManager.numberOfEnemies*
        name: numberOfEnemies
        nameWithType: LevelManager.numberOfEnemies
        qualifiedName: TowerDefense.Level.LevelManager.numberOfEnemies
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.numberOfEnemies
  TowerDefense.Level.LevelState:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: TowerDefense.Level.LevelState
      VB:
      - id: TowerDefense.Level.LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: TowerDefense.Level.LevelState
    isDefinition: true
    parent: TowerDefense.Level
    commentId: T:TowerDefense.Level.LevelState
  TowerDefense.Level.LevelManager.levelState*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.levelState*
        name: levelState
        nameWithType: LevelManager.levelState
        qualifiedName: TowerDefense.Level.LevelManager.levelState
      VB:
      - id: TowerDefense.Level.LevelManager.levelState*
        name: levelState
        nameWithType: LevelManager.levelState
        qualifiedName: TowerDefense.Level.LevelManager.levelState
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.levelState
  TowerDefense.Level.LevelManager.currency*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.currency*
        name: currency
        nameWithType: LevelManager.currency
        qualifiedName: TowerDefense.Level.LevelManager.currency
      VB:
      - id: TowerDefense.Level.LevelManager.currency*
        name: currency
        nameWithType: LevelManager.currency
        qualifiedName: TowerDefense.Level.LevelManager.currency
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.currency
  TowerDefense.Level.LevelManager.numberOfHomeBasesLeft*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft*
        name: numberOfHomeBasesLeft
        nameWithType: LevelManager.numberOfHomeBasesLeft
        qualifiedName: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
      VB:
      - id: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft*
        name: numberOfHomeBasesLeft
        nameWithType: LevelManager.numberOfHomeBasesLeft
        qualifiedName: TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.numberOfHomeBasesLeft
  TowerDefense.Level.LevelManager.numberOfHomeBases*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.numberOfHomeBases*
        name: numberOfHomeBases
        nameWithType: LevelManager.numberOfHomeBases
        qualifiedName: TowerDefense.Level.LevelManager.numberOfHomeBases
      VB:
      - id: TowerDefense.Level.LevelManager.numberOfHomeBases*
        name: numberOfHomeBases
        nameWithType: LevelManager.numberOfHomeBases
        qualifiedName: TowerDefense.Level.LevelManager.numberOfHomeBases
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.numberOfHomeBases
  TowerDefense.Level.LevelManager.playerHomeBases*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.playerHomeBases*
        name: playerHomeBases
        nameWithType: LevelManager.playerHomeBases
        qualifiedName: TowerDefense.Level.LevelManager.playerHomeBases
      VB:
      - id: TowerDefense.Level.LevelManager.playerHomeBases*
        name: playerHomeBases
        nameWithType: LevelManager.playerHomeBases
        qualifiedName: TowerDefense.Level.LevelManager.playerHomeBases
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.playerHomeBases
  TowerDefense.Level.LevelManager.isGameOver*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.isGameOver*
        name: isGameOver
        nameWithType: LevelManager.isGameOver
        qualifiedName: TowerDefense.Level.LevelManager.isGameOver
      VB:
      - id: TowerDefense.Level.LevelManager.isGameOver*
        name: isGameOver
        nameWithType: LevelManager.isGameOver
        qualifiedName: TowerDefense.Level.LevelManager.isGameOver
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.isGameOver
  Action`2:
    name:
      CSharp:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Action{TowerDefense.Level.LevelState,TowerDefense.Level.LevelState}:
    name:
      CSharp:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Level.LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: TowerDefense.Level.LevelState
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Level.LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: TowerDefense.Level.LevelState
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Level.LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: TowerDefense.Level.LevelState
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Level.LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: TowerDefense.Level.LevelState
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`2
    commentId: '!:Action{TowerDefense.Level.LevelState,TowerDefense.Level.LevelState}'
  Action{System.Int32}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{System.Int32}'
  TowerDefense.Level.LevelManager.IncrementNumberOfEnemies*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies*
        name: IncrementNumberOfEnemies
        nameWithType: LevelManager.IncrementNumberOfEnemies
        qualifiedName: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies
      VB:
      - id: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies*
        name: IncrementNumberOfEnemies
        nameWithType: LevelManager.IncrementNumberOfEnemies
        qualifiedName: TowerDefense.Level.LevelManager.IncrementNumberOfEnemies
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.IncrementNumberOfEnemies
  TowerDefense.Level.LevelManager.GetAllHomeBasesHealth*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth*
        name: GetAllHomeBasesHealth
        nameWithType: LevelManager.GetAllHomeBasesHealth
        qualifiedName: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth
      VB:
      - id: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth*
        name: GetAllHomeBasesHealth
        nameWithType: LevelManager.GetAllHomeBasesHealth
        qualifiedName: TowerDefense.Level.LevelManager.GetAllHomeBasesHealth
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.GetAllHomeBasesHealth
  TowerDefense.Level.LevelManager.DecrementNumberOfEnemies*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies*
        name: DecrementNumberOfEnemies
        nameWithType: LevelManager.DecrementNumberOfEnemies
        qualifiedName: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies
      VB:
      - id: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies*
        name: DecrementNumberOfEnemies
        nameWithType: LevelManager.DecrementNumberOfEnemies
        qualifiedName: TowerDefense.Level.LevelManager.DecrementNumberOfEnemies
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.DecrementNumberOfEnemies
  TowerDefense.Level.LevelManager.BuildingCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.BuildingCompleted*
        name: BuildingCompleted
        nameWithType: LevelManager.BuildingCompleted
        qualifiedName: TowerDefense.Level.LevelManager.BuildingCompleted
      VB:
      - id: TowerDefense.Level.LevelManager.BuildingCompleted*
        name: BuildingCompleted
        nameWithType: LevelManager.BuildingCompleted
        qualifiedName: TowerDefense.Level.LevelManager.BuildingCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.BuildingCompleted
  TowerDefense.Level.LevelManager.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.Awake*
        name: Awake
        nameWithType: LevelManager.Awake
        qualifiedName: TowerDefense.Level.LevelManager.Awake
      VB:
      - id: TowerDefense.Level.LevelManager.Awake*
        name: Awake
        nameWithType: LevelManager.Awake
        qualifiedName: TowerDefense.Level.LevelManager.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.Awake
  TowerDefense.Level.LevelManager.Update*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.Update*
        name: Update
        nameWithType: LevelManager.Update
        qualifiedName: TowerDefense.Level.LevelManager.Update
      VB:
      - id: TowerDefense.Level.LevelManager.Update*
        name: Update
        nameWithType: LevelManager.Update
        qualifiedName: TowerDefense.Level.LevelManager.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.Update
  TowerDefense.Level.LevelManager.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.OnDestroy*
        name: OnDestroy
        nameWithType: LevelManager.OnDestroy
        qualifiedName: TowerDefense.Level.LevelManager.OnDestroy
      VB:
      - id: TowerDefense.Level.LevelManager.OnDestroy*
        name: OnDestroy
        nameWithType: LevelManager.OnDestroy
        qualifiedName: TowerDefense.Level.LevelManager.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.OnDestroy
  TowerDefense.Level.LevelManager.IntroCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.IntroCompleted*
        name: IntroCompleted
        nameWithType: LevelManager.IntroCompleted
        qualifiedName: TowerDefense.Level.LevelManager.IntroCompleted
      VB:
      - id: TowerDefense.Level.LevelManager.IntroCompleted*
        name: IntroCompleted
        nameWithType: LevelManager.IntroCompleted
        qualifiedName: TowerDefense.Level.LevelManager.IntroCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.IntroCompleted
  TowerDefense.Level.LevelManager.OnSpawningCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.OnSpawningCompleted*
        name: OnSpawningCompleted
        nameWithType: LevelManager.OnSpawningCompleted
        qualifiedName: TowerDefense.Level.LevelManager.OnSpawningCompleted
      VB:
      - id: TowerDefense.Level.LevelManager.OnSpawningCompleted*
        name: OnSpawningCompleted
        nameWithType: LevelManager.OnSpawningCompleted
        qualifiedName: TowerDefense.Level.LevelManager.OnSpawningCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.OnSpawningCompleted
  TowerDefense.Level.LevelManager.ChangeLevelState*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.ChangeLevelState*
        name: ChangeLevelState
        nameWithType: LevelManager.ChangeLevelState
        qualifiedName: TowerDefense.Level.LevelManager.ChangeLevelState
      VB:
      - id: TowerDefense.Level.LevelManager.ChangeLevelState*
        name: ChangeLevelState
        nameWithType: LevelManager.ChangeLevelState
        qualifiedName: TowerDefense.Level.LevelManager.ChangeLevelState
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.ChangeLevelState
  TowerDefense.Level.LevelManager.OnHomeBaseDestroyed*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed*
        name: OnHomeBaseDestroyed
        nameWithType: LevelManager.OnHomeBaseDestroyed
        qualifiedName: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed
      VB:
      - id: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed*
        name: OnHomeBaseDestroyed
        nameWithType: LevelManager.OnHomeBaseDestroyed
        qualifiedName: TowerDefense.Level.LevelManager.OnHomeBaseDestroyed
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.OnHomeBaseDestroyed
  TowerDefense.Level.LevelManager.levelCompleted:
    commentId: E:TowerDefense.Level.LevelManager.levelCompleted
  TowerDefense.Level.LevelManager.SafelyCallLevelCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted*
        name: SafelyCallLevelCompleted
        nameWithType: LevelManager.SafelyCallLevelCompleted
        qualifiedName: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted
      VB:
      - id: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted*
        name: SafelyCallLevelCompleted
        nameWithType: LevelManager.SafelyCallLevelCompleted
        qualifiedName: TowerDefense.Level.LevelManager.SafelyCallLevelCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.SafelyCallLevelCompleted
  TowerDefense.Level.LevelManager.numberOfEnemiesChanged:
    commentId: E:TowerDefense.Level.LevelManager.numberOfEnemiesChanged
  TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged*
        name: SafelyCallNumberOfEnemiesChanged
        nameWithType: LevelManager.SafelyCallNumberOfEnemiesChanged
        qualifiedName: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged
      VB:
      - id: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged*
        name: SafelyCallNumberOfEnemiesChanged
        nameWithType: LevelManager.SafelyCallNumberOfEnemiesChanged
        qualifiedName: TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.SafelyCallNumberOfEnemiesChanged
  TowerDefense.Level.LevelManager.levelFailed:
    commentId: E:TowerDefense.Level.LevelManager.levelFailed
  TowerDefense.Level.LevelManager.SafelyCallLevelFailed*:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager.SafelyCallLevelFailed*
        name: SafelyCallLevelFailed
        nameWithType: LevelManager.SafelyCallLevelFailed
        qualifiedName: TowerDefense.Level.LevelManager.SafelyCallLevelFailed
      VB:
      - id: TowerDefense.Level.LevelManager.SafelyCallLevelFailed*
        name: SafelyCallLevelFailed
        nameWithType: LevelManager.SafelyCallLevelFailed
        qualifiedName: TowerDefense.Level.LevelManager.SafelyCallLevelFailed
    isDefinition: true
    commentId: Overload:TowerDefense.Level.LevelManager.SafelyCallLevelFailed
  TowerDefense.Level.LevelManager:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelManager
        name: LevelManager
        nameWithType: LevelManager
        qualifiedName: TowerDefense.Level.LevelManager
      VB:
      - id: TowerDefense.Level.LevelManager
        name: LevelManager
        nameWithType: LevelManager
        qualifiedName: TowerDefense.Level.LevelManager
    isDefinition: true
    commentId: T:TowerDefense.Level.LevelManager
  List{Agent}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Agent
        name: Agent
        nameWithType: Agent
        qualifiedName: Agent
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Agent
        name: Agent
        nameWithType: Agent
        qualifiedName: Agent
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Agent}'
  TowerDefense.Level.PlayerHomeBase.Start*:
    name:
      CSharp:
      - id: TowerDefense.Level.PlayerHomeBase.Start*
        name: Start
        nameWithType: PlayerHomeBase.Start
        qualifiedName: TowerDefense.Level.PlayerHomeBase.Start
      VB:
      - id: TowerDefense.Level.PlayerHomeBase.Start*
        name: Start
        nameWithType: PlayerHomeBase.Start
        qualifiedName: TowerDefense.Level.PlayerHomeBase.Start
    isDefinition: true
    commentId: Overload:TowerDefense.Level.PlayerHomeBase.Start
  TowerDefense.Level.PlayerHomeBase.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.Level.PlayerHomeBase.OnDestroy*
        name: OnDestroy
        nameWithType: PlayerHomeBase.OnDestroy
        qualifiedName: TowerDefense.Level.PlayerHomeBase.OnDestroy
      VB:
      - id: TowerDefense.Level.PlayerHomeBase.OnDestroy*
        name: OnDestroy
        nameWithType: PlayerHomeBase.OnDestroy
        qualifiedName: TowerDefense.Level.PlayerHomeBase.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.Level.PlayerHomeBase.OnDestroy
  TowerDefense.Level.PlayerHomeBase.attackPfx:
    commentId: F:TowerDefense.Level.PlayerHomeBase.attackPfx
  TowerDefense.Level.PlayerHomeBase.OnDamaged*:
    name:
      CSharp:
      - id: TowerDefense.Level.PlayerHomeBase.OnDamaged*
        name: OnDamaged
        nameWithType: PlayerHomeBase.OnDamaged
        qualifiedName: TowerDefense.Level.PlayerHomeBase.OnDamaged
      VB:
      - id: TowerDefense.Level.PlayerHomeBase.OnDamaged*
        name: OnDamaged
        nameWithType: PlayerHomeBase.OnDamaged
        qualifiedName: TowerDefense.Level.PlayerHomeBase.OnDamaged
    isDefinition: true
    commentId: Overload:TowerDefense.Level.PlayerHomeBase.OnDamaged
  TowerDefense.Level.PlayerHomeBase:
    name:
      CSharp:
      - id: TowerDefense.Level.PlayerHomeBase
        name: PlayerHomeBase
        nameWithType: PlayerHomeBase
        qualifiedName: TowerDefense.Level.PlayerHomeBase
      VB:
      - id: TowerDefense.Level.PlayerHomeBase
        name: PlayerHomeBase
        nameWithType: PlayerHomeBase
        qualifiedName: TowerDefense.Level.PlayerHomeBase
    isDefinition: true
    commentId: T:TowerDefense.Level.PlayerHomeBase
  AgentConfiguration:
    name:
      CSharp:
      - id: AgentConfiguration
        name: AgentConfiguration
        nameWithType: AgentConfiguration
        qualifiedName: AgentConfiguration
        isExternal: true
      VB:
      - id: AgentConfiguration
        name: AgentConfiguration
        nameWithType: AgentConfiguration
        qualifiedName: AgentConfiguration
        isExternal: true
    isDefinition: true
  TowerDefense.Level.SpawnInstruction:
    name:
      CSharp:
      - id: TowerDefense.Level.SpawnInstruction
        name: SpawnInstruction
        nameWithType: SpawnInstruction
        qualifiedName: TowerDefense.Level.SpawnInstruction
      VB:
      - id: TowerDefense.Level.SpawnInstruction
        name: SpawnInstruction
        nameWithType: SpawnInstruction
        qualifiedName: TowerDefense.Level.SpawnInstruction
    isDefinition: true
    commentId: T:TowerDefense.Level.SpawnInstruction
  TowerDefense.Level.LevelIntro.introCompleted:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelIntro.introCompleted
        name: introCompleted
        nameWithType: LevelIntro.introCompleted
        qualifiedName: TowerDefense.Level.LevelIntro.introCompleted
      VB:
      - id: TowerDefense.Level.LevelIntro.introCompleted
        name: introCompleted
        nameWithType: LevelIntro.introCompleted
        qualifiedName: TowerDefense.Level.LevelIntro.introCompleted
    isDefinition: true
    parent: TowerDefense.Level.LevelIntro
    commentId: E:TowerDefense.Level.LevelIntro.introCompleted
  TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted:
    name:
      CSharp:
      - id: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
        name: SafelyCallIntroCompleted
        nameWithType: LevelIntro.SafelyCallIntroCompleted
        qualifiedName: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
        name: SafelyCallIntroCompleted
        nameWithType: LevelIntro.SafelyCallIntroCompleted
        qualifiedName: TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.LevelIntro
    commentId: M:TowerDefense.Level.LevelIntro.SafelyCallIntroCompleted
  TowerDefense.Level.TimedLevelIntro.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedLevelIntro.Awake*
        name: Awake
        nameWithType: TimedLevelIntro.Awake
        qualifiedName: TowerDefense.Level.TimedLevelIntro.Awake
      VB:
      - id: TowerDefense.Level.TimedLevelIntro.Awake*
        name: Awake
        nameWithType: TimedLevelIntro.Awake
        qualifiedName: TowerDefense.Level.TimedLevelIntro.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Level.TimedLevelIntro.Awake
  TowerDefense.Level.TimedLevelIntro.Update*:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedLevelIntro.Update*
        name: Update
        nameWithType: TimedLevelIntro.Update
        qualifiedName: TowerDefense.Level.TimedLevelIntro.Update
      VB:
      - id: TowerDefense.Level.TimedLevelIntro.Update*
        name: Update
        nameWithType: TimedLevelIntro.Update
        qualifiedName: TowerDefense.Level.TimedLevelIntro.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Level.TimedLevelIntro.Update
  TowerDefense.Level.TimedLevelIntro:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedLevelIntro
        name: TimedLevelIntro
        nameWithType: TimedLevelIntro
        qualifiedName: TowerDefense.Level.TimedLevelIntro
      VB:
      - id: TowerDefense.Level.TimedLevelIntro
        name: TimedLevelIntro
        nameWithType: TimedLevelIntro
        qualifiedName: TowerDefense.Level.TimedLevelIntro
    isDefinition: true
    commentId: T:TowerDefense.Level.TimedLevelIntro
  TowerDefense.Level.Wave:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: TowerDefense.Level.Wave
      VB:
      - id: TowerDefense.Level.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: TowerDefense.Level.Wave
    isDefinition: true
    parent: TowerDefense.Level
    commentId: T:TowerDefense.Level.Wave
  TowerDefense.Level.Wave.spawnInstructions:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.spawnInstructions
        name: spawnInstructions
        nameWithType: Wave.spawnInstructions
        qualifiedName: TowerDefense.Level.Wave.spawnInstructions
      VB:
      - id: TowerDefense.Level.Wave.spawnInstructions
        name: spawnInstructions
        nameWithType: Wave.spawnInstructions
        qualifiedName: TowerDefense.Level.Wave.spawnInstructions
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: F:TowerDefense.Level.Wave.spawnInstructions
  TowerDefense.Level.Wave.m_CurrentIndex:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.m_CurrentIndex
        name: m_CurrentIndex
        nameWithType: Wave.m_CurrentIndex
        qualifiedName: TowerDefense.Level.Wave.m_CurrentIndex
      VB:
      - id: TowerDefense.Level.Wave.m_CurrentIndex
        name: m_CurrentIndex
        nameWithType: Wave.m_CurrentIndex
        qualifiedName: TowerDefense.Level.Wave.m_CurrentIndex
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: F:TowerDefense.Level.Wave.m_CurrentIndex
  TowerDefense.Level.Wave.m_SpawnTimer:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.m_SpawnTimer
        name: m_SpawnTimer
        nameWithType: Wave.m_SpawnTimer
        qualifiedName: TowerDefense.Level.Wave.m_SpawnTimer
      VB:
      - id: TowerDefense.Level.Wave.m_SpawnTimer
        name: m_SpawnTimer
        nameWithType: Wave.m_SpawnTimer
        qualifiedName: TowerDefense.Level.Wave.m_SpawnTimer
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: F:TowerDefense.Level.Wave.m_SpawnTimer
  TowerDefense.Level.Wave.waveCompleted:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.waveCompleted
        name: waveCompleted
        nameWithType: Wave.waveCompleted
        qualifiedName: TowerDefense.Level.Wave.waveCompleted
      VB:
      - id: TowerDefense.Level.Wave.waveCompleted
        name: waveCompleted
        nameWithType: Wave.waveCompleted
        qualifiedName: TowerDefense.Level.Wave.waveCompleted
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: E:TowerDefense.Level.Wave.waveCompleted
  TowerDefense.Level.Wave.Spawn:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.Spawn
        name: Spawn
        nameWithType: Wave.Spawn
        qualifiedName: TowerDefense.Level.Wave.Spawn
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.Wave.Spawn
        name: Spawn
        nameWithType: Wave.Spawn
        qualifiedName: TowerDefense.Level.Wave.Spawn
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: M:TowerDefense.Level.Wave.Spawn
  TowerDefense.Level.Wave.TrySetupNextSpawn:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.TrySetupNextSpawn
        name: TrySetupNextSpawn
        nameWithType: Wave.TrySetupNextSpawn
        qualifiedName: TowerDefense.Level.Wave.TrySetupNextSpawn
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.Wave.TrySetupNextSpawn
        name: TrySetupNextSpawn
        nameWithType: Wave.TrySetupNextSpawn
        qualifiedName: TowerDefense.Level.Wave.TrySetupNextSpawn
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: M:TowerDefense.Level.Wave.TrySetupNextSpawn
  TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node):
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node)
        name: SpawnAgent
        nameWithType: Wave.SpawnAgent
        qualifiedName: TowerDefense.Level.Wave.SpawnAgent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: AgentConfiguration
        name: AgentConfiguration
        nameWithType: AgentConfiguration
        qualifiedName: AgentConfiguration
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node)
        name: SpawnAgent
        nameWithType: Wave.SpawnAgent
        qualifiedName: TowerDefense.Level.Wave.SpawnAgent
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: AgentConfiguration
        name: AgentConfiguration
        nameWithType: AgentConfiguration
        qualifiedName: AgentConfiguration
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Node
        name: Node
        nameWithType: Node
        qualifiedName: Node
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: M:TowerDefense.Level.Wave.SpawnAgent(AgentConfiguration,Node)
  TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
        name: SafelyBroadcastWaveCompletedEvent
        nameWithType: Wave.SafelyBroadcastWaveCompletedEvent
        qualifiedName: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
        name: SafelyBroadcastWaveCompletedEvent
        nameWithType: Wave.SafelyBroadcastWaveCompletedEvent
        qualifiedName: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: M:TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
  TowerDefense.Level.Wave.progress:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.progress
        name: progress
        nameWithType: Wave.progress
        qualifiedName: TowerDefense.Level.Wave.progress
      VB:
      - id: TowerDefense.Level.Wave.progress
        name: progress
        nameWithType: Wave.progress
        qualifiedName: TowerDefense.Level.Wave.progress
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: P:TowerDefense.Level.Wave.progress
  TowerDefense.Level.TimedWave.progress*:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedWave.progress*
        name: progress
        nameWithType: TimedWave.progress
        qualifiedName: TowerDefense.Level.TimedWave.progress
      VB:
      - id: TowerDefense.Level.TimedWave.progress*
        name: progress
        nameWithType: TimedWave.progress
        qualifiedName: TowerDefense.Level.TimedWave.progress
    isDefinition: true
    commentId: Overload:TowerDefense.Level.TimedWave.progress
  TowerDefense.Level.Wave.Init:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.Init
        name: Init
        nameWithType: Wave.Init
        qualifiedName: TowerDefense.Level.Wave.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.Wave.Init
        name: Init
        nameWithType: Wave.Init
        qualifiedName: TowerDefense.Level.Wave.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: M:TowerDefense.Level.Wave.Init
  TowerDefense.Level.TimedWave.Init*:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedWave.Init*
        name: Init
        nameWithType: TimedWave.Init
        qualifiedName: TowerDefense.Level.TimedWave.Init
      VB:
      - id: TowerDefense.Level.TimedWave.Init*
        name: Init
        nameWithType: TimedWave.Init
        qualifiedName: TowerDefense.Level.TimedWave.Init
    isDefinition: true
    commentId: Overload:TowerDefense.Level.TimedWave.Init
  TowerDefense.Level.Wave.SpawnCurrent:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.SpawnCurrent
        name: SpawnCurrent
        nameWithType: Wave.SpawnCurrent
        qualifiedName: TowerDefense.Level.Wave.SpawnCurrent
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Level.Wave.SpawnCurrent
        name: SpawnCurrent
        nameWithType: Wave.SpawnCurrent
        qualifiedName: TowerDefense.Level.Wave.SpawnCurrent
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Level.Wave
    commentId: M:TowerDefense.Level.Wave.SpawnCurrent
  TowerDefense.Level.TimedWave.SpawnCurrent*:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedWave.SpawnCurrent*
        name: SpawnCurrent
        nameWithType: TimedWave.SpawnCurrent
        qualifiedName: TowerDefense.Level.TimedWave.SpawnCurrent
      VB:
      - id: TowerDefense.Level.TimedWave.SpawnCurrent*
        name: SpawnCurrent
        nameWithType: TimedWave.SpawnCurrent
        qualifiedName: TowerDefense.Level.TimedWave.SpawnCurrent
    isDefinition: true
    commentId: Overload:TowerDefense.Level.TimedWave.SpawnCurrent
  TowerDefense.Level.TimedWave:
    name:
      CSharp:
      - id: TowerDefense.Level.TimedWave
        name: TimedWave
        nameWithType: TimedWave
        qualifiedName: TowerDefense.Level.TimedWave
      VB:
      - id: TowerDefense.Level.TimedWave
        name: TimedWave
        nameWithType: TimedWave
        qualifiedName: TowerDefense.Level.TimedWave
    isDefinition: true
    commentId: T:TowerDefense.Level.TimedWave
  List{TowerDefense.Level.SpawnInstruction}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Level.SpawnInstruction
        name: SpawnInstruction
        nameWithType: SpawnInstruction
        qualifiedName: TowerDefense.Level.SpawnInstruction
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Level.SpawnInstruction
        name: SpawnInstruction
        nameWithType: SpawnInstruction
        qualifiedName: TowerDefense.Level.SpawnInstruction
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.Level.SpawnInstruction}'
  TowerDefense.Level.Wave.progress*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.progress*
        name: progress
        nameWithType: Wave.progress
        qualifiedName: TowerDefense.Level.Wave.progress
      VB:
      - id: TowerDefense.Level.Wave.progress*
        name: progress
        nameWithType: Wave.progress
        qualifiedName: TowerDefense.Level.Wave.progress
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.progress
  TowerDefense.Level.Wave.Init*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.Init*
        name: Init
        nameWithType: Wave.Init
        qualifiedName: TowerDefense.Level.Wave.Init
      VB:
      - id: TowerDefense.Level.Wave.Init*
        name: Init
        nameWithType: Wave.Init
        qualifiedName: TowerDefense.Level.Wave.Init
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.Init
  TowerDefense.Level.Wave.SpawnCurrent*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.SpawnCurrent*
        name: SpawnCurrent
        nameWithType: Wave.SpawnCurrent
        qualifiedName: TowerDefense.Level.Wave.SpawnCurrent
      VB:
      - id: TowerDefense.Level.Wave.SpawnCurrent*
        name: SpawnCurrent
        nameWithType: Wave.SpawnCurrent
        qualifiedName: TowerDefense.Level.Wave.SpawnCurrent
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.SpawnCurrent
  TowerDefense.Level.Wave.Spawn*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.Spawn*
        name: Spawn
        nameWithType: Wave.Spawn
        qualifiedName: TowerDefense.Level.Wave.Spawn
      VB:
      - id: TowerDefense.Level.Wave.Spawn*
        name: Spawn
        nameWithType: Wave.Spawn
        qualifiedName: TowerDefense.Level.Wave.Spawn
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.Spawn
  TowerDefense.Level.Wave.TrySetupNextSpawn*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.TrySetupNextSpawn*
        name: TrySetupNextSpawn
        nameWithType: Wave.TrySetupNextSpawn
        qualifiedName: TowerDefense.Level.Wave.TrySetupNextSpawn
      VB:
      - id: TowerDefense.Level.Wave.TrySetupNextSpawn*
        name: TrySetupNextSpawn
        nameWithType: Wave.TrySetupNextSpawn
        qualifiedName: TowerDefense.Level.Wave.TrySetupNextSpawn
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.TrySetupNextSpawn
  TowerDefense.Level.Wave.SpawnAgent*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.SpawnAgent*
        name: SpawnAgent
        nameWithType: Wave.SpawnAgent
        qualifiedName: TowerDefense.Level.Wave.SpawnAgent
      VB:
      - id: TowerDefense.Level.Wave.SpawnAgent*
        name: SpawnAgent
        nameWithType: Wave.SpawnAgent
        qualifiedName: TowerDefense.Level.Wave.SpawnAgent
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.SpawnAgent
  TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent*:
    name:
      CSharp:
      - id: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent*
        name: SafelyBroadcastWaveCompletedEvent
        nameWithType: Wave.SafelyBroadcastWaveCompletedEvent
        qualifiedName: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
      VB:
      - id: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent*
        name: SafelyBroadcastWaveCompletedEvent
        nameWithType: Wave.SafelyBroadcastWaveCompletedEvent
        qualifiedName: TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Wave.SafelyBroadcastWaveCompletedEvent
  List{TowerDefense.Level.Wave}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Level.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: TowerDefense.Level.Wave
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Level.Wave
        name: Wave
        nameWithType: Wave
        qualifiedName: TowerDefense.Level.Wave
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.Level.Wave}'
  TowerDefense.Level.WaveManager.waveNumber*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.waveNumber*
        name: waveNumber
        nameWithType: WaveManager.waveNumber
        qualifiedName: TowerDefense.Level.WaveManager.waveNumber
      VB:
      - id: TowerDefense.Level.WaveManager.waveNumber*
        name: waveNumber
        nameWithType: WaveManager.waveNumber
        qualifiedName: TowerDefense.Level.WaveManager.waveNumber
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.waveNumber
  TowerDefense.Level.WaveManager.totalWaves*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.totalWaves*
        name: totalWaves
        nameWithType: WaveManager.totalWaves
        qualifiedName: TowerDefense.Level.WaveManager.totalWaves
      VB:
      - id: TowerDefense.Level.WaveManager.totalWaves*
        name: totalWaves
        nameWithType: WaveManager.totalWaves
        qualifiedName: TowerDefense.Level.WaveManager.totalWaves
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.totalWaves
  TowerDefense.Level.WaveManager.waveProgress*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.waveProgress*
        name: waveProgress
        nameWithType: WaveManager.waveProgress
        qualifiedName: TowerDefense.Level.WaveManager.waveProgress
      VB:
      - id: TowerDefense.Level.WaveManager.waveProgress*
        name: waveProgress
        nameWithType: WaveManager.waveProgress
        qualifiedName: TowerDefense.Level.WaveManager.waveProgress
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.waveProgress
  TowerDefense.Level.WaveManager.StartWaves*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.StartWaves*
        name: StartWaves
        nameWithType: WaveManager.StartWaves
        qualifiedName: TowerDefense.Level.WaveManager.StartWaves
      VB:
      - id: TowerDefense.Level.WaveManager.StartWaves*
        name: StartWaves
        nameWithType: WaveManager.StartWaves
        qualifiedName: TowerDefense.Level.WaveManager.StartWaves
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.StartWaves
  TowerDefense.Level.WaveManager.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.Awake*
        name: Awake
        nameWithType: WaveManager.Awake
        qualifiedName: TowerDefense.Level.WaveManager.Awake
      VB:
      - id: TowerDefense.Level.WaveManager.Awake*
        name: Awake
        nameWithType: WaveManager.Awake
        qualifiedName: TowerDefense.Level.WaveManager.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.Awake
  TowerDefense.Level.WaveManager.NextWave*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.NextWave*
        name: NextWave
        nameWithType: WaveManager.NextWave
        qualifiedName: TowerDefense.Level.WaveManager.NextWave
      VB:
      - id: TowerDefense.Level.WaveManager.NextWave*
        name: NextWave
        nameWithType: WaveManager.NextWave
        qualifiedName: TowerDefense.Level.WaveManager.NextWave
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.NextWave
  TowerDefense.Level.WaveManager.InitCurrentWave*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.InitCurrentWave*
        name: InitCurrentWave
        nameWithType: WaveManager.InitCurrentWave
        qualifiedName: TowerDefense.Level.WaveManager.InitCurrentWave
      VB:
      - id: TowerDefense.Level.WaveManager.InitCurrentWave*
        name: InitCurrentWave
        nameWithType: WaveManager.InitCurrentWave
        qualifiedName: TowerDefense.Level.WaveManager.InitCurrentWave
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.InitCurrentWave
  TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted*:
    name:
      CSharp:
      - id: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted*
        name: SafelyCallSpawningCompleted
        nameWithType: WaveManager.SafelyCallSpawningCompleted
        qualifiedName: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted
      VB:
      - id: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted*
        name: SafelyCallSpawningCompleted
        nameWithType: WaveManager.SafelyCallSpawningCompleted
        qualifiedName: TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted
    isDefinition: true
    commentId: Overload:TowerDefense.Level.WaveManager.SafelyCallSpawningCompleted
  TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: WaveEditor.OnInspectorGUI
        qualifiedName: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI
      VB:
      - id: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: WaveEditor.OnInspectorGUI
        qualifiedName: TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:TowerDefense.Level.Editor.WaveEditor.OnInspectorGUI
  TowerDefense.Level.Editor.WaveEditor:
    name:
      CSharp:
      - id: TowerDefense.Level.Editor.WaveEditor
        name: WaveEditor
        nameWithType: WaveEditor
        qualifiedName: TowerDefense.Level.Editor.WaveEditor
      VB:
      - id: TowerDefense.Level.Editor.WaveEditor
        name: WaveEditor
        nameWithType: WaveEditor
        qualifiedName: TowerDefense.Level.Editor.WaveEditor
    isDefinition: true
    commentId: T:TowerDefense.Level.Editor.WaveEditor
  TowerDefense.Level.Editor:
    name:
      CSharp:
      - name: TowerDefense.Level.Editor
        nameWithType: TowerDefense.Level.Editor
        qualifiedName: TowerDefense.Level.Editor
      VB:
      - name: TowerDefense.Level.Editor
        nameWithType: TowerDefense.Level.Editor
        qualifiedName: TowerDefense.Level.Editor
    isDefinition: true
    commentId: N:TowerDefense.Level.Editor
  TowerDefense.MeshCreator:
    name:
      CSharp:
      - name: TowerDefense.MeshCreator
        nameWithType: TowerDefense.MeshCreator
        qualifiedName: TowerDefense.MeshCreator
      VB:
      - name: TowerDefense.MeshCreator
        nameWithType: TowerDefense.MeshCreator
        qualifiedName: TowerDefense.MeshCreator
    isDefinition: true
    commentId: N:TowerDefense.MeshCreator
  TowerDefense.MeshCreator.MeshObject:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.MeshObject
        name: MeshObject
        nameWithType: MeshObject
        qualifiedName: TowerDefense.MeshCreator.MeshObject
      VB:
      - id: TowerDefense.MeshCreator.MeshObject
        name: MeshObject
        nameWithType: MeshObject
        qualifiedName: TowerDefense.MeshCreator.MeshObject
    isDefinition: true
    parent: TowerDefense.MeshCreator
    commentId: T:TowerDefense.MeshCreator.MeshObject
  TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter*
        name: pointsCenter
        nameWithType: AreaMeshCreator.pointsCenter
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
      VB:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter*
        name: pointsCenter
        nameWithType: AreaMeshCreator.pointsCenter
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.AreaMeshCreator.pointsCenter
  List{Vector3}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Vector3}'
  TowerDefense.MeshCreator.AreaMeshCreator.GetPoints*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints*
        name: GetPoints
        nameWithType: AreaMeshCreator.GetPoints
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints
      VB:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints*
        name: GetPoints
        nameWithType: AreaMeshCreator.GetPoints
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.GetPoints
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.AreaMeshCreator.GetPoints
  TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside*
        name: GetRandomPointInside
        nameWithType: AreaMeshCreator.GetRandomPointInside
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside
      VB:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside*
        name: GetRandomPointInside
        nameWithType: AreaMeshCreator.GetRandomPointInside
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.AreaMeshCreator.GetRandomPointInside
  TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat*
        name: ForcePointsFlat
        nameWithType: AreaMeshCreator.ForcePointsFlat
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat
      VB:
      - id: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat*
        name: ForcePointsFlat
        nameWithType: AreaMeshCreator.ForcePointsFlat
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.AreaMeshCreator.ForcePointsFlat
  TowerDefense.MeshCreator.AreaMeshCreator:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.AreaMeshCreator
        name: AreaMeshCreator
        nameWithType: AreaMeshCreator
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator
      VB:
      - id: TowerDefense.MeshCreator.AreaMeshCreator
        name: AreaMeshCreator
        nameWithType: AreaMeshCreator
        qualifiedName: TowerDefense.MeshCreator.AreaMeshCreator
    isDefinition: true
    parent: TowerDefense.MeshCreator
    commentId: T:TowerDefense.MeshCreator.AreaMeshCreator
  TowerDefense.MeshCreator.Triangle.#ctor*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Triangle.#ctor*
        name: Triangle
        nameWithType: Triangle.Triangle
        qualifiedName: TowerDefense.MeshCreator.Triangle.Triangle
      VB:
      - id: TowerDefense.MeshCreator.Triangle.#ctor*
        name: Triangle
        nameWithType: Triangle.Triangle
        qualifiedName: TowerDefense.MeshCreator.Triangle.Triangle
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Triangle.#ctor
  TowerDefense.MeshCreator.Triangle:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Triangle
        name: Triangle
        nameWithType: Triangle
        qualifiedName: TowerDefense.MeshCreator.Triangle
      VB:
      - id: TowerDefense.MeshCreator.Triangle
        name: Triangle
        nameWithType: Triangle
        qualifiedName: TowerDefense.MeshCreator.Triangle
    isDefinition: true
    commentId: T:TowerDefense.MeshCreator.Triangle
  List{TowerDefense.MeshCreator.Triangle}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.MeshCreator.Triangle
        name: Triangle
        nameWithType: Triangle
        qualifiedName: TowerDefense.MeshCreator.Triangle
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.MeshCreator.Triangle
        name: Triangle
        nameWithType: Triangle
        qualifiedName: TowerDefense.MeshCreator.Triangle
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.MeshCreator.Triangle}'
  TowerDefense.MeshCreator.MeshObject.#ctor*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.MeshObject.#ctor*
        name: MeshObject
        nameWithType: MeshObject.MeshObject
        qualifiedName: TowerDefense.MeshCreator.MeshObject.MeshObject
      VB:
      - id: TowerDefense.MeshCreator.MeshObject.#ctor*
        name: MeshObject
        nameWithType: MeshObject.MeshObject
        qualifiedName: TowerDefense.MeshCreator.MeshObject.MeshObject
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.MeshObject.#ctor
  TowerDefense.MeshCreator.MeshObject.RandomPointInMesh*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh*
        name: RandomPointInMesh
        nameWithType: MeshObject.RandomPointInMesh
        qualifiedName: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh
      VB:
      - id: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh*
        name: RandomPointInMesh
        nameWithType: MeshObject.RandomPointInMesh
        qualifiedName: TowerDefense.MeshCreator.MeshObject.RandomPointInMesh
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.MeshObject.RandomPointInMesh
  Vector2[]:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.MeshCreator.Triangulator.#ctor*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Triangulator.#ctor*
        name: Triangulator
        nameWithType: Triangulator.Triangulator
        qualifiedName: TowerDefense.MeshCreator.Triangulator.Triangulator
      VB:
      - id: TowerDefense.MeshCreator.Triangulator.#ctor*
        name: Triangulator
        nameWithType: Triangulator.Triangulator
        qualifiedName: TowerDefense.MeshCreator.Triangulator.Triangulator
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Triangulator.#ctor
  System.Int32[]:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.MeshCreator.Triangulator.Triangulate*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Triangulator.Triangulate*
        name: Triangulate
        nameWithType: Triangulator.Triangulate
        qualifiedName: TowerDefense.MeshCreator.Triangulator.Triangulate
      VB:
      - id: TowerDefense.MeshCreator.Triangulator.Triangulate*
        name: Triangulate
        nameWithType: Triangulator.Triangulate
        qualifiedName: TowerDefense.MeshCreator.Triangulator.Triangulate
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Triangulator.Triangulate
  TowerDefense.MeshCreator.Triangulator:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Triangulator
        name: Triangulator
        nameWithType: Triangulator
        qualifiedName: TowerDefense.MeshCreator.Triangulator
      VB:
      - id: TowerDefense.MeshCreator.Triangulator
        name: Triangulator
        nameWithType: Triangulator
        qualifiedName: TowerDefense.MeshCreator.Triangulator
    isDefinition: true
    commentId: T:TowerDefense.MeshCreator.Triangulator
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable*
        name: OnEnable
        nameWithType: AreaMeshCreatorEditor.OnEnable
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable*
        name: OnEnable
        nameWithType: AreaMeshCreatorEditor.OnEnable
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnEnable
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AreaMeshCreatorEditor.OnInspectorGUI
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: AreaMeshCreatorEditor.OnInspectorGUI
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnInspectorGUI
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh*
        name: CreateMesh
        nameWithType: AreaMeshCreatorEditor.CreateMesh
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh*
        name: CreateMesh
        nameWithType: AreaMeshCreatorEditor.CreateMesh
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateMesh
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat*
        name: ForcePointsFlat
        nameWithType: AreaMeshCreatorEditor.ForcePointsFlat
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat*
        name: ForcePointsFlat
        nameWithType: AreaMeshCreatorEditor.ForcePointsFlat
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ForcePointsFlat
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint*
        name: AddPoint
        nameWithType: AreaMeshCreatorEditor.AddPoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint*
        name: AddPoint
        nameWithType: AreaMeshCreatorEditor.AddPoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.AddPoint
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI*
        name: OnSceneGUI
        nameWithType: AreaMeshCreatorEditor.OnSceneGUI
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI*
        name: OnSceneGUI
        nameWithType: AreaMeshCreatorEditor.OnSceneGUI
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.OnSceneGUI
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints*
        name: GetClosestTwoPoints
        nameWithType: AreaMeshCreatorEditor.GetClosestTwoPoints
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints*
        name: GetClosestTwoPoints
        nameWithType: AreaMeshCreatorEditor.GetClosestTwoPoints
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosestTwoPoints
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint*
        name: GetClosetsPoint
        nameWithType: AreaMeshCreatorEditor.GetClosetsPoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint*
        name: GetClosetsPoint
        nameWithType: AreaMeshCreatorEditor.GetClosetsPoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.GetClosetsPoint
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint*
        name: DeletePoint
        nameWithType: AreaMeshCreatorEditor.DeletePoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint*
        name: DeletePoint
        nameWithType: AreaMeshCreatorEditor.DeletePoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.DeletePoint
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint*
        name: Midpoint
        nameWithType: AreaMeshCreatorEditor.Midpoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint*
        name: Midpoint
        nameWithType: AreaMeshCreatorEditor.Midpoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.Midpoint
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints*
        name: ClearCurrentPoints
        nameWithType: AreaMeshCreatorEditor.ClearCurrentPoints
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints*
        name: ClearCurrentPoints
        nameWithType: AreaMeshCreatorEditor.ClearCurrentPoints
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.ClearCurrentPoints
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint*
        name: CreateNewPoint
        nameWithType: AreaMeshCreatorEditor.CreateNewPoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint*
        name: CreateNewPoint
        nameWithType: AreaMeshCreatorEditor.CreateNewPoint
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.CreateNewPoint
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare*
        name: SetSquare
        nameWithType: AreaMeshCreatorEditor.SetSquare
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare*
        name: SetSquare
        nameWithType: AreaMeshCreatorEditor.SetSquare
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetSquare
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon*:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon*
        name: SetOctagon
        nameWithType: AreaMeshCreatorEditor.SetOctagon
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon*
        name: SetOctagon
        nameWithType: AreaMeshCreatorEditor.SetOctagon
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon
    isDefinition: true
    commentId: Overload:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor.SetOctagon
  TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor:
    name:
      CSharp:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
        name: AreaMeshCreatorEditor
        nameWithType: AreaMeshCreatorEditor
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
      VB:
      - id: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
        name: AreaMeshCreatorEditor
        nameWithType: AreaMeshCreatorEditor
        qualifiedName: TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
    isDefinition: true
    commentId: T:TowerDefense.MeshCreator.Editor.AreaMeshCreatorEditor
  TowerDefense.MeshCreator.Editor:
    name:
      CSharp:
      - name: TowerDefense.MeshCreator.Editor
        nameWithType: TowerDefense.MeshCreator.Editor
        qualifiedName: TowerDefense.MeshCreator.Editor
      VB:
      - name: TowerDefense.MeshCreator.Editor
        nameWithType: TowerDefense.MeshCreator.Editor
        qualifiedName: TowerDefense.MeshCreator.Editor
    isDefinition: true
    commentId: N:TowerDefense.MeshCreator.Editor
  TowerDefense.Nodes:
    name:
      CSharp:
      - name: TowerDefense.Nodes
        nameWithType: TowerDefense.Nodes
        qualifiedName: TowerDefense.Nodes
      VB:
      - name: TowerDefense.Nodes
        nameWithType: TowerDefense.Nodes
        qualifiedName: TowerDefense.Nodes
    isDefinition: true
    commentId: N:TowerDefense.Nodes
  TowerDefense.Nodes.NodeSelector:
    name:
      CSharp:
      - id: TowerDefense.Nodes.NodeSelector
        name: NodeSelector
        nameWithType: NodeSelector
        qualifiedName: TowerDefense.Nodes.NodeSelector
      VB:
      - id: TowerDefense.Nodes.NodeSelector
        name: NodeSelector
        nameWithType: NodeSelector
        qualifiedName: TowerDefense.Nodes.NodeSelector
    isDefinition: true
    parent: TowerDefense.Nodes
    commentId: T:TowerDefense.Nodes.NodeSelector
  TowerDefense.Nodes.NodeSelector.linkedNodes:
    name:
      CSharp:
      - id: TowerDefense.Nodes.NodeSelector.linkedNodes
        name: linkedNodes
        nameWithType: NodeSelector.linkedNodes
        qualifiedName: TowerDefense.Nodes.NodeSelector.linkedNodes
      VB:
      - id: TowerDefense.Nodes.NodeSelector.linkedNodes
        name: linkedNodes
        nameWithType: NodeSelector.linkedNodes
        qualifiedName: TowerDefense.Nodes.NodeSelector.linkedNodes
    isDefinition: true
    parent: TowerDefense.Nodes.NodeSelector
    commentId: F:TowerDefense.Nodes.NodeSelector.linkedNodes
  TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex:
    commentId: F:TowerDefense.Nodes.FixedNodeSelector.m_NodeIndex
  TowerDefense.Nodes.Node:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Node
        name: Node
        nameWithType: Node
        qualifiedName: TowerDefense.Nodes.Node
      VB:
      - id: TowerDefense.Nodes.Node
        name: Node
        nameWithType: Node
        qualifiedName: TowerDefense.Nodes.Node
    isDefinition: true
    parent: TowerDefense.Nodes
    commentId: T:TowerDefense.Nodes.Node
  TowerDefense.Nodes.NodeSelector.GetNextNode:
    name:
      CSharp:
      - id: TowerDefense.Nodes.NodeSelector.GetNextNode
        name: GetNextNode
        nameWithType: NodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.NodeSelector.GetNextNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Nodes.NodeSelector.GetNextNode
        name: GetNextNode
        nameWithType: NodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.NodeSelector.GetNextNode
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Nodes.NodeSelector
    commentId: M:TowerDefense.Nodes.NodeSelector.GetNextNode
  TowerDefense.Nodes.FixedNodeSelector.GetNextNode*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.FixedNodeSelector.GetNextNode*
        name: GetNextNode
        nameWithType: FixedNodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.FixedNodeSelector.GetNextNode
      VB:
      - id: TowerDefense.Nodes.FixedNodeSelector.GetNextNode*
        name: GetNextNode
        nameWithType: FixedNodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.FixedNodeSelector.GetNextNode
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.FixedNodeSelector.GetNextNode
  TowerDefense.Nodes.FixedNodeSelector:
    name:
      CSharp:
      - id: TowerDefense.Nodes.FixedNodeSelector
        name: FixedNodeSelector
        nameWithType: FixedNodeSelector
        qualifiedName: TowerDefense.Nodes.FixedNodeSelector
      VB:
      - id: TowerDefense.Nodes.FixedNodeSelector
        name: FixedNodeSelector
        nameWithType: FixedNodeSelector
        qualifiedName: TowerDefense.Nodes.FixedNodeSelector
    isDefinition: true
    commentId: T:TowerDefense.Nodes.FixedNodeSelector
  AreaMeshCreator:
    name:
      CSharp:
      - id: AreaMeshCreator
        name: AreaMeshCreator
        nameWithType: AreaMeshCreator
        qualifiedName: AreaMeshCreator
        isExternal: true
      VB:
      - id: AreaMeshCreator
        name: AreaMeshCreator
        nameWithType: AreaMeshCreator
        qualifiedName: AreaMeshCreator
        isExternal: true
    isDefinition: true
    commentId: '!:AreaMeshCreator'
  TowerDefense.Nodes.Node.GetNextNode*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Node.GetNextNode*
        name: GetNextNode
        nameWithType: Node.GetNextNode
        qualifiedName: TowerDefense.Nodes.Node.GetNextNode
      VB:
      - id: TowerDefense.Nodes.Node.GetNextNode*
        name: GetNextNode
        nameWithType: Node.GetNextNode
        qualifiedName: TowerDefense.Nodes.Node.GetNextNode
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.Node.GetNextNode
  TowerDefense.Nodes.Node.GetRandomPointInNodeArea*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Node.GetRandomPointInNodeArea*
        name: GetRandomPointInNodeArea
        nameWithType: Node.GetRandomPointInNodeArea
        qualifiedName: TowerDefense.Nodes.Node.GetRandomPointInNodeArea
      VB:
      - id: TowerDefense.Nodes.Node.GetRandomPointInNodeArea*
        name: GetRandomPointInNodeArea
        nameWithType: Node.GetRandomPointInNodeArea
        qualifiedName: TowerDefense.Nodes.Node.GetRandomPointInNodeArea
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.Node.GetRandomPointInNodeArea
  Collider:
    name:
      CSharp:
      - id: Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
      VB:
      - id: Collider
        name: Collider
        nameWithType: Collider
        qualifiedName: Collider
        isExternal: true
    isDefinition: true
  TowerDefense.Nodes.Node.OnTriggerEnter*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Node.OnTriggerEnter*
        name: OnTriggerEnter
        nameWithType: Node.OnTriggerEnter
        qualifiedName: TowerDefense.Nodes.Node.OnTriggerEnter
      VB:
      - id: TowerDefense.Nodes.Node.OnTriggerEnter*
        name: OnTriggerEnter
        nameWithType: Node.OnTriggerEnter
        qualifiedName: TowerDefense.Nodes.Node.OnTriggerEnter
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.Node.OnTriggerEnter
  List{TowerDefense.Nodes.Node}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Nodes.Node
        name: Node
        nameWithType: Node
        qualifiedName: TowerDefense.Nodes.Node
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Nodes.Node
        name: Node
        nameWithType: Node
        qualifiedName: TowerDefense.Nodes.Node
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.Nodes.Node}'
  TowerDefense.Nodes.NodeSelector.GetNextNode*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.NodeSelector.GetNextNode*
        name: GetNextNode
        nameWithType: NodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.NodeSelector.GetNextNode
      VB:
      - id: TowerDefense.Nodes.NodeSelector.GetNextNode*
        name: GetNextNode
        nameWithType: NodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.NodeSelector.GetNextNode
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.NodeSelector.GetNextNode
  TowerDefense.Nodes.RandomNodeSelector.GetNextNode*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.RandomNodeSelector.GetNextNode*
        name: GetNextNode
        nameWithType: RandomNodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector.GetNextNode
      VB:
      - id: TowerDefense.Nodes.RandomNodeSelector.GetNextNode*
        name: GetNextNode
        nameWithType: RandomNodeSelector.GetNextNode
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector.GetNextNode
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.RandomNodeSelector.GetNextNode
  TowerDefense.Nodes.RandomNodeSelector.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.RandomNodeSelector.Awake*
        name: Awake
        nameWithType: RandomNodeSelector.Awake
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector.Awake
      VB:
      - id: TowerDefense.Nodes.RandomNodeSelector.Awake*
        name: Awake
        nameWithType: RandomNodeSelector.Awake
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.RandomNodeSelector.Awake
  TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights*
        name: TotalLinkedNodeWeights
        nameWithType: RandomNodeSelector.TotalLinkedNodeWeights
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights
      VB:
      - id: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights*
        name: TotalLinkedNodeWeights
        nameWithType: RandomNodeSelector.TotalLinkedNodeWeights
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.RandomNodeSelector.TotalLinkedNodeWeights
  TowerDefense.Nodes.RandomNodeSelector:
    name:
      CSharp:
      - id: TowerDefense.Nodes.RandomNodeSelector
        name: RandomNodeSelector
        nameWithType: RandomNodeSelector
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector
      VB:
      - id: TowerDefense.Nodes.RandomNodeSelector
        name: RandomNodeSelector
        nameWithType: RandomNodeSelector
        qualifiedName: TowerDefense.Nodes.RandomNodeSelector
    isDefinition: true
    commentId: T:TowerDefense.Nodes.RandomNodeSelector
  TowerDefense.Nodes.Editor.NodeEditor.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Editor.NodeEditor.OnEnable*
        name: OnEnable
        nameWithType: NodeEditor.OnEnable
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor.OnEnable
      VB:
      - id: TowerDefense.Nodes.Editor.NodeEditor.OnEnable*
        name: OnEnable
        nameWithType: NodeEditor.OnEnable
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.Editor.NodeEditor.OnEnable
  TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NodeEditor.OnInspectorGUI
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI
      VB:
      - id: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NodeEditor.OnInspectorGUI
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.Editor.NodeEditor.OnInspectorGUI
  TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator*:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator*
        name: AddMeshCreator
        nameWithType: NodeEditor.AddMeshCreator
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator
      VB:
      - id: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator*
        name: AddMeshCreator
        nameWithType: NodeEditor.AddMeshCreator
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator
    isDefinition: true
    commentId: Overload:TowerDefense.Nodes.Editor.NodeEditor.AddMeshCreator
  TowerDefense.Nodes.Editor.NodeEditor:
    name:
      CSharp:
      - id: TowerDefense.Nodes.Editor.NodeEditor
        name: NodeEditor
        nameWithType: NodeEditor
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor
      VB:
      - id: TowerDefense.Nodes.Editor.NodeEditor
        name: NodeEditor
        nameWithType: NodeEditor
        qualifiedName: TowerDefense.Nodes.Editor.NodeEditor
    isDefinition: true
    commentId: T:TowerDefense.Nodes.Editor.NodeEditor
  TowerDefense.Nodes.Editor:
    name:
      CSharp:
      - name: TowerDefense.Nodes.Editor
        nameWithType: TowerDefense.Nodes.Editor
        qualifiedName: TowerDefense.Nodes.Editor
      VB:
      - name: TowerDefense.Nodes.Editor
        nameWithType: TowerDefense.Nodes.Editor
        qualifiedName: TowerDefense.Nodes.Editor
    isDefinition: true
    commentId: N:TowerDefense.Nodes.Editor
  Action{Targetable}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{Targetable}'
  Vector2:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  List{Targetable}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Targetable}'
  TowerDefense.Targetting.Targetter.effectRadius*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.effectRadius*
        name: effectRadius
        nameWithType: Targetter.effectRadius
        qualifiedName: TowerDefense.Targetting.Targetter.effectRadius
      VB:
      - id: TowerDefense.Targetting.Targetter.effectRadius*
        name: effectRadius
        nameWithType: Targetter.effectRadius
        qualifiedName: TowerDefense.Targetting.Targetter.effectRadius
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.effectRadius
  TowerDefense.Targetting.Targetter.GetTarget*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.GetTarget*
        name: GetTarget
        nameWithType: Targetter.GetTarget
        qualifiedName: TowerDefense.Targetting.Targetter.GetTarget
      VB:
      - id: TowerDefense.Targetting.Targetter.GetTarget*
        name: GetTarget
        nameWithType: Targetter.GetTarget
        qualifiedName: TowerDefense.Targetting.Targetter.GetTarget
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.GetTarget
  TowerDefense.Targetting.Targetter.ResetTargetter*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.ResetTargetter*
        name: ResetTargetter
        nameWithType: Targetter.ResetTargetter
        qualifiedName: TowerDefense.Targetting.Targetter.ResetTargetter
      VB:
      - id: TowerDefense.Targetting.Targetter.ResetTargetter*
        name: ResetTargetter
        nameWithType: Targetter.ResetTargetter
        qualifiedName: TowerDefense.Targetting.Targetter.ResetTargetter
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.ResetTargetter
  TowerDefense.Targetting.Targetter.GetAllTargets*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.GetAllTargets*
        name: GetAllTargets
        nameWithType: Targetter.GetAllTargets
        qualifiedName: TowerDefense.Targetting.Targetter.GetAllTargets
      VB:
      - id: TowerDefense.Targetting.Targetter.GetAllTargets*
        name: GetAllTargets
        nameWithType: Targetter.GetAllTargets
        qualifiedName: TowerDefense.Targetting.Targetter.GetAllTargets
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.GetAllTargets
  TowerDefense.Targetting.Targetter.IsTargetableValid*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.IsTargetableValid*
        name: IsTargetableValid
        nameWithType: Targetter.IsTargetableValid
        qualifiedName: TowerDefense.Targetting.Targetter.IsTargetableValid
      VB:
      - id: TowerDefense.Targetting.Targetter.IsTargetableValid*
        name: IsTargetableValid
        nameWithType: Targetter.IsTargetableValid
        qualifiedName: TowerDefense.Targetting.Targetter.IsTargetableValid
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.IsTargetableValid
  TowerDefense.Targetting.Targetter.OnTriggerExit*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.OnTriggerExit*
        name: OnTriggerExit
        nameWithType: Targetter.OnTriggerExit
        qualifiedName: TowerDefense.Targetting.Targetter.OnTriggerExit
      VB:
      - id: TowerDefense.Targetting.Targetter.OnTriggerExit*
        name: OnTriggerExit
        nameWithType: Targetter.OnTriggerExit
        qualifiedName: TowerDefense.Targetting.Targetter.OnTriggerExit
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.OnTriggerExit
  TowerDefense.Targetting.Targetter.OnTriggerEnter*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.OnTriggerEnter*
        name: OnTriggerEnter
        nameWithType: Targetter.OnTriggerEnter
        qualifiedName: TowerDefense.Targetting.Targetter.OnTriggerEnter
      VB:
      - id: TowerDefense.Targetting.Targetter.OnTriggerEnter*
        name: OnTriggerEnter
        nameWithType: Targetter.OnTriggerEnter
        qualifiedName: TowerDefense.Targetting.Targetter.OnTriggerEnter
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.OnTriggerEnter
  TowerDefense.Targetting.Targetter.GetNearestTargetable*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.GetNearestTargetable*
        name: GetNearestTargetable
        nameWithType: Targetter.GetNearestTargetable
        qualifiedName: TowerDefense.Targetting.Targetter.GetNearestTargetable
      VB:
      - id: TowerDefense.Targetting.Targetter.GetNearestTargetable*
        name: GetNearestTargetable
        nameWithType: Targetter.GetNearestTargetable
        qualifiedName: TowerDefense.Targetting.Targetter.GetNearestTargetable
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.GetNearestTargetable
  TowerDefense.Targetting.Targetter.Start*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.Start*
        name: Start
        nameWithType: Targetter.Start
        qualifiedName: TowerDefense.Targetting.Targetter.Start
      VB:
      - id: TowerDefense.Targetting.Targetter.Start*
        name: Start
        nameWithType: Targetter.Start
        qualifiedName: TowerDefense.Targetting.Targetter.Start
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.Start
  TowerDefense.Targetting.Targetter.Update*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.Update*
        name: Update
        nameWithType: Targetter.Update
        qualifiedName: TowerDefense.Targetting.Targetter.Update
      VB:
      - id: TowerDefense.Targetting.Targetter.Update*
        name: Update
        nameWithType: Targetter.Update
        qualifiedName: TowerDefense.Targetting.Targetter.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.Update
  TowerDefense.Targetting.Targetter.AimTurret*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter.AimTurret*
        name: AimTurret
        nameWithType: Targetter.AimTurret
        qualifiedName: TowerDefense.Targetting.Targetter.AimTurret
      VB:
      - id: TowerDefense.Targetting.Targetter.AimTurret*
        name: AimTurret
        nameWithType: Targetter.AimTurret
        qualifiedName: TowerDefense.Targetting.Targetter.AimTurret
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Targetter.AimTurret
  TowerDefense.Targetting.Targetter:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Targetter
        name: Targetter
        nameWithType: Targetter
        qualifiedName: TowerDefense.Targetting.Targetter
      VB:
      - id: TowerDefense.Targetting.Targetter
        name: Targetter
        nameWithType: Targetter
        qualifiedName: TowerDefense.Targetting.Targetter
    isDefinition: true
    commentId: T:TowerDefense.Targetting.Targetter
  TowerDefense.Targetting:
    name:
      CSharp:
      - name: TowerDefense.Targetting
        nameWithType: TowerDefense.Targetting
        qualifiedName: TowerDefense.Targetting
      VB:
      - name: TowerDefense.Targetting
        nameWithType: TowerDefense.Targetting
        qualifiedName: TowerDefense.Targetting
    isDefinition: true
    commentId: N:TowerDefense.Targetting
  TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: TargetterEditor.OnInspectorGUI
        qualifiedName: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI
      VB:
      - id: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: TargetterEditor.OnInspectorGUI
        qualifiedName: TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:TowerDefense.Targetting.Editor.TargetterEditor.OnInspectorGUI
  TowerDefense.Targetting.Editor.TargetterEditor:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Editor.TargetterEditor
        name: TargetterEditor
        nameWithType: TargetterEditor
        qualifiedName: TowerDefense.Targetting.Editor.TargetterEditor
      VB:
      - id: TowerDefense.Targetting.Editor.TargetterEditor
        name: TargetterEditor
        nameWithType: TargetterEditor
        qualifiedName: TowerDefense.Targetting.Editor.TargetterEditor
    isDefinition: true
    commentId: T:TowerDefense.Targetting.Editor.TargetterEditor
  TowerDefense.Targetting.Editor:
    name:
      CSharp:
      - name: TowerDefense.Targetting.Editor
        nameWithType: TowerDefense.Targetting.Editor
        qualifiedName: TowerDefense.Targetting.Editor
      VB:
      - name: TowerDefense.Targetting.Editor
        nameWithType: TowerDefense.Targetting.Editor
        qualifiedName: TowerDefense.Targetting.Editor
    isDefinition: true
    commentId: N:TowerDefense.Targetting.Editor
  TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider:
    name:
      CSharp:
      - id: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
        name: TargetterEditor.TargetterCollider
        nameWithType: TargetterEditor.TargetterCollider
        qualifiedName: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
      VB:
      - id: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
        name: TargetterEditor.TargetterCollider
        nameWithType: TargetterEditor.TargetterCollider
        qualifiedName: TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
    isDefinition: true
    parent: TowerDefense.Targetting.Editor
    commentId: T:TowerDefense.Targetting.Editor.TargetterEditor.TargetterCollider
  TowerDefense.Towers.ILauncher.Launch*:
    name:
      CSharp:
      - id: TowerDefense.Towers.ILauncher.Launch*
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      VB:
      - id: TowerDefense.Towers.ILauncher.Launch*
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.ILauncher.Launch
  TowerDefense.Towers.ILauncher:
    name:
      CSharp:
      - id: TowerDefense.Towers.ILauncher
        name: ILauncher
        nameWithType: ILauncher
        qualifiedName: TowerDefense.Towers.ILauncher
      VB:
      - id: TowerDefense.Towers.ILauncher
        name: ILauncher
        nameWithType: ILauncher
        qualifiedName: TowerDefense.Towers.ILauncher
    isDefinition: true
    parent: TowerDefense.Towers
    commentId: T:TowerDefense.Towers.ILauncher
  TowerDefense.Towers.ITowerRadiusProvider.effectRadius*:
    name:
      CSharp:
      - id: TowerDefense.Towers.ITowerRadiusProvider.effectRadius*
        name: effectRadius
        nameWithType: ITowerRadiusProvider.effectRadius
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider.effectRadius
      VB:
      - id: TowerDefense.Towers.ITowerRadiusProvider.effectRadius*
        name: effectRadius
        nameWithType: ITowerRadiusProvider.effectRadius
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider.effectRadius
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.ITowerRadiusProvider.effectRadius
  TowerDefense.Towers.ITowerRadiusProvider.effectColor*:
    name:
      CSharp:
      - id: TowerDefense.Towers.ITowerRadiusProvider.effectColor*
        name: effectColor
        nameWithType: ITowerRadiusProvider.effectColor
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider.effectColor
      VB:
      - id: TowerDefense.Towers.ITowerRadiusProvider.effectColor*
        name: effectColor
        nameWithType: ITowerRadiusProvider.effectColor
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider.effectColor
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.ITowerRadiusProvider.effectColor
  TowerDefense.Towers.ITowerRadiusProvider.targetter*:
    name:
      CSharp:
      - id: TowerDefense.Towers.ITowerRadiusProvider.targetter*
        name: targetter
        nameWithType: ITowerRadiusProvider.targetter
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider.targetter
      VB:
      - id: TowerDefense.Towers.ITowerRadiusProvider.targetter*
        name: targetter
        nameWithType: ITowerRadiusProvider.targetter
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider.targetter
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.ITowerRadiusProvider.targetter
  TowerDefense.Towers.ITowerRadiusProvider:
    name:
      CSharp:
      - id: TowerDefense.Towers.ITowerRadiusProvider
        name: ITowerRadiusProvider
        nameWithType: ITowerRadiusProvider
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider
      VB:
      - id: TowerDefense.Towers.ITowerRadiusProvider
        name: ITowerRadiusProvider
        nameWithType: ITowerRadiusProvider
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider
    isDefinition: true
    commentId: T:TowerDefense.Towers.ITowerRadiusProvider
  UnityEvent:
    name:
      CSharp:
      - id: UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      VB:
      - id: UnityEvent
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.SelfDestroyTimer.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Towers.SelfDestroyTimer.OnEnable*
        name: OnEnable
        nameWithType: SelfDestroyTimer.OnEnable
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer.OnEnable
      VB:
      - id: TowerDefense.Towers.SelfDestroyTimer.OnEnable*
        name: OnEnable
        nameWithType: SelfDestroyTimer.OnEnable
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.SelfDestroyTimer.OnEnable
  TowerDefense.Towers.SelfDestroyTimer.Update*:
    name:
      CSharp:
      - id: TowerDefense.Towers.SelfDestroyTimer.Update*
        name: Update
        nameWithType: SelfDestroyTimer.Update
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer.Update
      VB:
      - id: TowerDefense.Towers.SelfDestroyTimer.Update*
        name: Update
        nameWithType: SelfDestroyTimer.Update
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.SelfDestroyTimer.Update
  TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd*:
    name:
      CSharp:
      - id: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd*
        name: OnTimeEnd
        nameWithType: SelfDestroyTimer.OnTimeEnd
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd
      VB:
      - id: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd*
        name: OnTimeEnd
        nameWithType: SelfDestroyTimer.OnTimeEnd
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.SelfDestroyTimer.OnTimeEnd
  TowerDefense.Towers.SelfDestroyTimer:
    name:
      CSharp:
      - id: TowerDefense.Towers.SelfDestroyTimer
        name: SelfDestroyTimer
        nameWithType: SelfDestroyTimer
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer
      VB:
      - id: TowerDefense.Towers.SelfDestroyTimer
        name: SelfDestroyTimer
        nameWithType: SelfDestroyTimer
        qualifiedName: TowerDefense.Towers.SelfDestroyTimer
    isDefinition: true
    commentId: T:TowerDefense.Towers.SelfDestroyTimer
  TowerDefense.Towers.TowerLevel[]:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel
        name: TowerLevel
        nameWithType: TowerLevel
        qualifiedName: TowerDefense.Towers.TowerLevel
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: TowerDefense.Towers.TowerLevel
        name: TowerLevel
        nameWithType: TowerLevel
        qualifiedName: TowerDefense.Towers.TowerLevel
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  IntVector2:
    name:
      CSharp:
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      VB:
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.Tower.currentLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.currentLevel*
        name: currentLevel
        nameWithType: Tower.currentLevel
        qualifiedName: TowerDefense.Towers.Tower.currentLevel
      VB:
      - id: TowerDefense.Towers.Tower.currentLevel*
        name: currentLevel
        nameWithType: Tower.currentLevel
        qualifiedName: TowerDefense.Towers.Tower.currentLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.currentLevel
  TowerDefense.Towers:
    name:
      CSharp:
      - name: TowerDefense.Towers
        nameWithType: TowerDefense.Towers
        qualifiedName: TowerDefense.Towers
      VB:
      - name: TowerDefense.Towers
        nameWithType: TowerDefense.Towers
        qualifiedName: TowerDefense.Towers
    isDefinition: true
    commentId: N:TowerDefense.Towers
  TowerDefense.Towers.TowerLevel:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel
        name: TowerLevel
        nameWithType: TowerLevel
        qualifiedName: TowerDefense.Towers.TowerLevel
      VB:
      - id: TowerDefense.Towers.TowerLevel
        name: TowerLevel
        nameWithType: TowerLevel
        qualifiedName: TowerDefense.Towers.TowerLevel
    isDefinition: true
    parent: TowerDefense.Towers
    commentId: T:TowerDefense.Towers.TowerLevel
  TowerDefense.Towers.Tower.currentTowerLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.currentTowerLevel*
        name: currentTowerLevel
        nameWithType: Tower.currentTowerLevel
        qualifiedName: TowerDefense.Towers.Tower.currentTowerLevel
      VB:
      - id: TowerDefense.Towers.Tower.currentTowerLevel*
        name: currentTowerLevel
        nameWithType: Tower.currentTowerLevel
        qualifiedName: TowerDefense.Towers.Tower.currentTowerLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.currentTowerLevel
  TowerDefense.Towers.Tower.isAtMaxLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.isAtMaxLevel*
        name: isAtMaxLevel
        nameWithType: Tower.isAtMaxLevel
        qualifiedName: TowerDefense.Towers.Tower.isAtMaxLevel
      VB:
      - id: TowerDefense.Towers.Tower.isAtMaxLevel*
        name: isAtMaxLevel
        nameWithType: Tower.isAtMaxLevel
        qualifiedName: TowerDefense.Towers.Tower.isAtMaxLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.isAtMaxLevel
  TowerPlacementGhost:
    name:
      CSharp:
      - id: TowerPlacementGhost
        name: TowerPlacementGhost
        nameWithType: TowerPlacementGhost
        qualifiedName: TowerPlacementGhost
        isExternal: true
      VB:
      - id: TowerPlacementGhost
        name: TowerPlacementGhost
        nameWithType: TowerPlacementGhost
        qualifiedName: TowerPlacementGhost
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.Tower.towerGhostPrefab*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.towerGhostPrefab*
        name: towerGhostPrefab
        nameWithType: Tower.towerGhostPrefab
        qualifiedName: TowerDefense.Towers.Tower.towerGhostPrefab
      VB:
      - id: TowerDefense.Towers.Tower.towerGhostPrefab*
        name: towerGhostPrefab
        nameWithType: Tower.towerGhostPrefab
        qualifiedName: TowerDefense.Towers.Tower.towerGhostPrefab
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.towerGhostPrefab
  TowerDefense.Towers.Tower.placementArea:
    commentId: P:TowerDefense.Towers.Tower.placementArea
  TowerDefense.Towers.Tower.gridPosition*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.gridPosition*
        name: gridPosition
        nameWithType: Tower.gridPosition
        qualifiedName: TowerDefense.Towers.Tower.gridPosition
      VB:
      - id: TowerDefense.Towers.Tower.gridPosition*
        name: gridPosition
        nameWithType: Tower.gridPosition
        qualifiedName: TowerDefense.Towers.Tower.gridPosition
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.gridPosition
  IPlacementArea:
    name:
      CSharp:
      - id: IPlacementArea
        name: IPlacementArea
        nameWithType: IPlacementArea
        qualifiedName: IPlacementArea
        isExternal: true
      VB:
      - id: IPlacementArea
        name: IPlacementArea
        nameWithType: IPlacementArea
        qualifiedName: IPlacementArea
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.Tower.placementArea*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.placementArea*
        name: placementArea
        nameWithType: Tower.placementArea
        qualifiedName: TowerDefense.Towers.Tower.placementArea
      VB:
      - id: TowerDefense.Towers.Tower.placementArea*
        name: placementArea
        nameWithType: Tower.placementArea
        qualifiedName: TowerDefense.Towers.Tower.placementArea
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.placementArea
  TowerDefense.Towers.Tower.purchaseCost*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.purchaseCost*
        name: purchaseCost
        nameWithType: Tower.purchaseCost
        qualifiedName: TowerDefense.Towers.Tower.purchaseCost
      VB:
      - id: TowerDefense.Towers.Tower.purchaseCost*
        name: purchaseCost
        nameWithType: Tower.purchaseCost
        qualifiedName: TowerDefense.Towers.Tower.purchaseCost
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.purchaseCost
  TowerDefense.Towers.Tower.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.Initialize*
        name: Initialize
        nameWithType: Tower.Initialize
        qualifiedName: TowerDefense.Towers.Tower.Initialize
      VB:
      - id: TowerDefense.Towers.Tower.Initialize*
        name: Initialize
        nameWithType: Tower.Initialize
        qualifiedName: TowerDefense.Towers.Tower.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.Initialize
  TowerDefense.Towers.Tower.GetCostForNextLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.GetCostForNextLevel*
        name: GetCostForNextLevel
        nameWithType: Tower.GetCostForNextLevel
        qualifiedName: TowerDefense.Towers.Tower.GetCostForNextLevel
      VB:
      - id: TowerDefense.Towers.Tower.GetCostForNextLevel*
        name: GetCostForNextLevel
        nameWithType: Tower.GetCostForNextLevel
        qualifiedName: TowerDefense.Towers.Tower.GetCostForNextLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.GetCostForNextLevel
  TowerDefense.Towers.Tower.KillTower*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.KillTower*
        name: KillTower
        nameWithType: Tower.KillTower
        qualifiedName: TowerDefense.Towers.Tower.KillTower
      VB:
      - id: TowerDefense.Towers.Tower.KillTower*
        name: KillTower
        nameWithType: Tower.KillTower
        qualifiedName: TowerDefense.Towers.Tower.KillTower
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.KillTower
  TowerDefense.Towers.Tower.GetSellLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.GetSellLevel*
        name: GetSellLevel
        nameWithType: Tower.GetSellLevel
        qualifiedName: TowerDefense.Towers.Tower.GetSellLevel
      VB:
      - id: TowerDefense.Towers.Tower.GetSellLevel*
        name: GetSellLevel
        nameWithType: Tower.GetSellLevel
        qualifiedName: TowerDefense.Towers.Tower.GetSellLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.GetSellLevel
  TowerDefense.Towers.Tower.UpgradeTower*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.UpgradeTower*
        name: UpgradeTower
        nameWithType: Tower.UpgradeTower
        qualifiedName: TowerDefense.Towers.Tower.UpgradeTower
      VB:
      - id: TowerDefense.Towers.Tower.UpgradeTower*
        name: UpgradeTower
        nameWithType: Tower.UpgradeTower
        qualifiedName: TowerDefense.Towers.Tower.UpgradeTower
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.UpgradeTower
  TowerDefense.Towers.Tower.DowngradeTower*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.DowngradeTower*
        name: DowngradeTower
        nameWithType: Tower.DowngradeTower
        qualifiedName: TowerDefense.Towers.Tower.DowngradeTower
      VB:
      - id: TowerDefense.Towers.Tower.DowngradeTower*
        name: DowngradeTower
        nameWithType: Tower.DowngradeTower
        qualifiedName: TowerDefense.Towers.Tower.DowngradeTower
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.DowngradeTower
  TowerDefense.Towers.Tower.UpgradeTowerToLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.UpgradeTowerToLevel*
        name: UpgradeTowerToLevel
        nameWithType: Tower.UpgradeTowerToLevel
        qualifiedName: TowerDefense.Towers.Tower.UpgradeTowerToLevel
      VB:
      - id: TowerDefense.Towers.Tower.UpgradeTowerToLevel*
        name: UpgradeTowerToLevel
        nameWithType: Tower.UpgradeTowerToLevel
        qualifiedName: TowerDefense.Towers.Tower.UpgradeTowerToLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.UpgradeTowerToLevel
  TowerDefense.Towers.Tower.Sell*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.Sell*
        name: Sell
        nameWithType: Tower.Sell
        qualifiedName: TowerDefense.Towers.Tower.Sell
      VB:
      - id: TowerDefense.Towers.Tower.Sell*
        name: Sell
        nameWithType: Tower.Sell
        qualifiedName: TowerDefense.Towers.Tower.Sell
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.Sell
  TowerDefense.Towers.Tower.Remove*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.Remove*
        name: Remove
        nameWithType: Tower.Remove
        qualifiedName: TowerDefense.Towers.Tower.Remove
      VB:
      - id: TowerDefense.Towers.Tower.Remove*
        name: Remove
        nameWithType: Tower.Remove
        qualifiedName: TowerDefense.Towers.Tower.Remove
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.Remove
  TowerDefense.Towers.Tower.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.OnDestroy*
        name: OnDestroy
        nameWithType: Tower.OnDestroy
        qualifiedName: TowerDefense.Towers.Tower.OnDestroy
      VB:
      - id: TowerDefense.Towers.Tower.OnDestroy*
        name: OnDestroy
        nameWithType: Tower.OnDestroy
        qualifiedName: TowerDefense.Towers.Tower.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.OnDestroy
  TowerDefense.Towers.Tower.SetLevel*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.SetLevel*
        name: SetLevel
        nameWithType: Tower.SetLevel
        qualifiedName: TowerDefense.Towers.Tower.SetLevel
      VB:
      - id: TowerDefense.Towers.Tower.SetLevel*
        name: SetLevel
        nameWithType: Tower.SetLevel
        qualifiedName: TowerDefense.Towers.Tower.SetLevel
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.SetLevel
  TowerDefense.Towers.Tower.ScaleHealth*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.ScaleHealth*
        name: ScaleHealth
        nameWithType: Tower.ScaleHealth
        qualifiedName: TowerDefense.Towers.Tower.ScaleHealth
      VB:
      - id: TowerDefense.Towers.Tower.ScaleHealth*
        name: ScaleHealth
        nameWithType: Tower.ScaleHealth
        qualifiedName: TowerDefense.Towers.Tower.ScaleHealth
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.ScaleHealth
  LevelState:
    name:
      CSharp:
      - id: LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: LevelState
        isExternal: true
      VB:
      - id: LevelState
        name: LevelState
        nameWithType: LevelState
        qualifiedName: LevelState
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.Tower.OnLevelStateChanged*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower.OnLevelStateChanged*
        name: OnLevelStateChanged
        nameWithType: Tower.OnLevelStateChanged
        qualifiedName: TowerDefense.Towers.Tower.OnLevelStateChanged
      VB:
      - id: TowerDefense.Towers.Tower.OnLevelStateChanged*
        name: OnLevelStateChanged
        nameWithType: Tower.OnLevelStateChanged
        qualifiedName: TowerDefense.Towers.Tower.OnLevelStateChanged
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Tower.OnLevelStateChanged
  TowerDefense.Towers.Tower:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      VB:
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
    isDefinition: true
    parent: TowerDefense.Towers
    commentId: T:TowerDefense.Towers.Tower
  ISerializationCallbackReceiver:
    name:
      CSharp:
      - id: ISerializationCallbackReceiver
        name: ISerializationCallbackReceiver
        nameWithType: ISerializationCallbackReceiver
        qualifiedName: ISerializationCallbackReceiver
        isExternal: true
      VB:
      - id: ISerializationCallbackReceiver
        name: ISerializationCallbackReceiver
        nameWithType: ISerializationCallbackReceiver
        qualifiedName: ISerializationCallbackReceiver
        isExternal: true
    isDefinition: true
    commentId: '!:ISerializationCallbackReceiver'
  TowerLevelData:
    name:
      CSharp:
      - id: TowerLevelData
        name: TowerLevelData
        nameWithType: TowerLevelData
        qualifiedName: TowerLevelData
        isExternal: true
      VB:
      - id: TowerLevelData
        name: TowerLevelData
        nameWithType: TowerLevelData
        qualifiedName: TowerLevelData
        isExternal: true
    isDefinition: true
    commentId: '!:TowerLevelData'
  Affector[]:
    name:
      CSharp:
      - id: Affector
        name: Affector
        nameWithType: Affector
        qualifiedName: Affector
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Affector
        name: Affector
        nameWithType: Affector
        qualifiedName: Affector
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.Towers.TowerLevel.Affectors*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.Affectors*
        name: Affectors
        nameWithType: TowerLevel.Affectors
        qualifiedName: TowerDefense.Towers.TowerLevel.Affectors
      VB:
      - id: TowerDefense.Towers.TowerLevel.Affectors*
        name: Affectors
        nameWithType: TowerLevel.Affectors
        qualifiedName: TowerDefense.Towers.TowerLevel.Affectors
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.Affectors
  TowerDefense.Towers.TowerLevel.mask*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.mask*
        name: mask
        nameWithType: TowerLevel.mask
        qualifiedName: TowerDefense.Towers.TowerLevel.mask
      VB:
      - id: TowerDefense.Towers.TowerLevel.mask*
        name: mask
        nameWithType: TowerLevel.mask
        qualifiedName: TowerDefense.Towers.TowerLevel.mask
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.mask
  TowerDefense.Towers.TowerLevel.cost*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.cost*
        name: cost
        nameWithType: TowerLevel.cost
        qualifiedName: TowerDefense.Towers.TowerLevel.cost
      VB:
      - id: TowerDefense.Towers.TowerLevel.cost*
        name: cost
        nameWithType: TowerLevel.cost
        qualifiedName: TowerDefense.Towers.TowerLevel.cost
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.cost
  TowerDefense.Towers.TowerLevel.sell*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.sell*
        name: sell
        nameWithType: TowerLevel.sell
        qualifiedName: TowerDefense.Towers.TowerLevel.sell
      VB:
      - id: TowerDefense.Towers.TowerLevel.sell*
        name: sell
        nameWithType: TowerLevel.sell
        qualifiedName: TowerDefense.Towers.TowerLevel.sell
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.sell
  TowerDefense.Towers.TowerLevel.maxHealth*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.maxHealth*
        name: maxHealth
        nameWithType: TowerLevel.maxHealth
        qualifiedName: TowerDefense.Towers.TowerLevel.maxHealth
      VB:
      - id: TowerDefense.Towers.TowerLevel.maxHealth*
        name: maxHealth
        nameWithType: TowerLevel.maxHealth
        qualifiedName: TowerDefense.Towers.TowerLevel.maxHealth
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.maxHealth
  TowerDefense.Towers.TowerLevel.startingHealth*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.startingHealth*
        name: startingHealth
        nameWithType: TowerLevel.startingHealth
        qualifiedName: TowerDefense.Towers.TowerLevel.startingHealth
      VB:
      - id: TowerDefense.Towers.TowerLevel.startingHealth*
        name: startingHealth
        nameWithType: TowerLevel.startingHealth
        qualifiedName: TowerDefense.Towers.TowerLevel.startingHealth
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.startingHealth
  TowerDefense.Towers.TowerLevel.description*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.description*
        name: description
        nameWithType: TowerLevel.description
        qualifiedName: TowerDefense.Towers.TowerLevel.description
      VB:
      - id: TowerDefense.Towers.TowerLevel.description*
        name: description
        nameWithType: TowerLevel.description
        qualifiedName: TowerDefense.Towers.TowerLevel.description
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.description
  TowerDefense.Towers.TowerLevel.upgradeDescription*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.upgradeDescription*
        name: upgradeDescription
        nameWithType: TowerLevel.upgradeDescription
        qualifiedName: TowerDefense.Towers.TowerLevel.upgradeDescription
      VB:
      - id: TowerDefense.Towers.TowerLevel.upgradeDescription*
        name: upgradeDescription
        nameWithType: TowerLevel.upgradeDescription
        qualifiedName: TowerDefense.Towers.TowerLevel.upgradeDescription
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.upgradeDescription
  TowerDefense.Towers.TowerLevel.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.Initialize*
        name: Initialize
        nameWithType: TowerLevel.Initialize
        qualifiedName: TowerDefense.Towers.TowerLevel.Initialize
      VB:
      - id: TowerDefense.Towers.TowerLevel.Initialize*
        name: Initialize
        nameWithType: TowerLevel.Initialize
        qualifiedName: TowerDefense.Towers.TowerLevel.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.Initialize
  TowerDefense.Towers.TowerLevel.Affectors:
    commentId: P:TowerDefense.Towers.TowerLevel.Affectors
  TowerDefense.Towers.TowerLevel.SetAffectorState*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.SetAffectorState*
        name: SetAffectorState
        nameWithType: TowerLevel.SetAffectorState
        qualifiedName: TowerDefense.Towers.TowerLevel.SetAffectorState
      VB:
      - id: TowerDefense.Towers.TowerLevel.SetAffectorState*
        name: SetAffectorState
        nameWithType: TowerLevel.SetAffectorState
        qualifiedName: TowerDefense.Towers.TowerLevel.SetAffectorState
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.SetAffectorState
  List{TowerDefense.Towers.ITowerRadiusProvider}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Towers.ITowerRadiusProvider
        name: ITowerRadiusProvider
        nameWithType: ITowerRadiusProvider
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Towers.ITowerRadiusProvider
        name: ITowerRadiusProvider
        nameWithType: ITowerRadiusProvider
        qualifiedName: TowerDefense.Towers.ITowerRadiusProvider
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.Towers.ITowerRadiusProvider}'
  TowerDefense.Towers.TowerLevel.GetRadiusVisualizers*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers*
        name: GetRadiusVisualizers
        nameWithType: TowerLevel.GetRadiusVisualizers
        qualifiedName: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers
      VB:
      - id: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers*
        name: GetRadiusVisualizers
        nameWithType: TowerLevel.GetRadiusVisualizers
        qualifiedName: TowerDefense.Towers.TowerLevel.GetRadiusVisualizers
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.GetRadiusVisualizers
  TowerDefense.Towers.TowerLevel.GetTowerDps*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.GetTowerDps*
        name: GetTowerDps
        nameWithType: TowerLevel.GetTowerDps
        qualifiedName: TowerDefense.Towers.TowerLevel.GetTowerDps
      VB:
      - id: TowerDefense.Towers.TowerLevel.GetTowerDps*
        name: GetTowerDps
        nameWithType: TowerLevel.GetTowerDps
        qualifiedName: TowerDefense.Towers.TowerLevel.GetTowerDps
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.GetTowerDps
  TowerDefense.Towers.TowerLevel.Kill*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.Kill*
        name: Kill
        nameWithType: TowerLevel.Kill
        qualifiedName: TowerDefense.Towers.TowerLevel.Kill
      VB:
      - id: TowerDefense.Towers.TowerLevel.Kill*
        name: Kill
        nameWithType: TowerLevel.Kill
        qualifiedName: TowerDefense.Towers.TowerLevel.Kill
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.Kill
  TowerDefense.Towers.TowerLevel.OnBeforeSerialize*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: TowerLevel.OnBeforeSerialize
        qualifiedName: TowerDefense.Towers.TowerLevel.OnBeforeSerialize
      VB:
      - id: TowerDefense.Towers.TowerLevel.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: TowerLevel.OnBeforeSerialize
        qualifiedName: TowerDefense.Towers.TowerLevel.OnBeforeSerialize
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.OnBeforeSerialize
  TowerDefense.Towers.TowerLevel.OnAfterDeserialize*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLevel.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: TowerLevel.OnAfterDeserialize
        qualifiedName: TowerDefense.Towers.TowerLevel.OnAfterDeserialize
      VB:
      - id: TowerDefense.Towers.TowerLevel.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: TowerLevel.OnAfterDeserialize
        qualifiedName: TowerDefense.Towers.TowerLevel.OnAfterDeserialize
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLevel.OnAfterDeserialize
  Sprite:
    name:
      CSharp:
      - id: Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
      VB:
      - id: Sprite
        name: Sprite
        nameWithType: Sprite
        qualifiedName: Sprite
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.Data.TowerLevelData:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLevelData
        name: TowerLevelData
        nameWithType: TowerLevelData
        qualifiedName: TowerDefense.Towers.Data.TowerLevelData
      VB:
      - id: TowerDefense.Towers.Data.TowerLevelData
        name: TowerLevelData
        nameWithType: TowerLevelData
        qualifiedName: TowerDefense.Towers.Data.TowerLevelData
    isDefinition: true
    commentId: T:TowerDefense.Towers.Data.TowerLevelData
  IList`1:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IList`1'
  IList{TowerDefense.Towers.Tower}:
    name:
      CSharp:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IList`1
        name: IList
        nameWithType: IList
        qualifiedName: IList
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IList`1
    commentId: '!:IList{TowerDefense.Towers.Tower}'
  IDictionary`2:
    name:
      CSharp:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IDictionary`2'
  IDictionary{System.String,TowerDefense.Towers.Tower}:
    name:
      CSharp:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IDictionary`2
        name: IDictionary
        nameWithType: IDictionary
        qualifiedName: IDictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IDictionary`2
    commentId: '!:IDictionary{System.String,TowerDefense.Towers.Tower}'
  List{TowerDefense.Towers.Tower}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{TowerDefense.Towers.Tower}'
  TowerDefense.Towers.Data.TowerLibrary.Item*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Item*
        name: Item
        nameWithType: TowerLibrary.Item
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Item
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Item*
        name: Item
        nameWithType: TowerLibrary.Item
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Item
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Item
  TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: TowerLibrary.OnBeforeSerialize
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize*
        name: OnBeforeSerialize
        nameWithType: TowerLibrary.OnBeforeSerialize
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.OnBeforeSerialize
  TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: TowerLibrary.OnAfterDeserialize
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize*
        name: OnAfterDeserialize
        nameWithType: TowerLibrary.OnAfterDeserialize
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.OnAfterDeserialize
  TowerDefense.Towers.Data.TowerLibrary.ContainsKey*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.ContainsKey*
        name: ContainsKey
        nameWithType: TowerLibrary.ContainsKey
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.ContainsKey
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.ContainsKey*
        name: ContainsKey
        nameWithType: TowerLibrary.ContainsKey
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.ContainsKey
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.ContainsKey
  TowerDefense.Towers.Data.TowerLibrary.Add*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Add*
        name: Add
        nameWithType: TowerLibrary.Add
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Add
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Add*
        name: Add
        nameWithType: TowerLibrary.Add
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Add
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Add
  TowerDefense.Towers.Data.TowerLibrary.Remove*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Remove*
        name: Remove
        nameWithType: TowerLibrary.Remove
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Remove
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Remove*
        name: Remove
        nameWithType: TowerLibrary.Remove
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Remove
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Remove
  TowerDefense.Towers.Data.TowerLibrary.TryGetValue*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.TryGetValue*
        name: TryGetValue
        nameWithType: TowerLibrary.TryGetValue
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.TryGetValue
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.TryGetValue*
        name: TryGetValue
        nameWithType: TowerLibrary.TryGetValue
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.TryGetValue
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.TryGetValue
  ICollection`1:
    name:
      CSharp:
      - id: ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:ICollection`1'
  ICollection{System.String}:
    name:
      CSharp:
      - id: ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ICollection`1
    commentId: '!:ICollection{System.String}'
  TowerDefense.Towers.Data.TowerLibrary.Keys*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Keys*
        name: Keys
        nameWithType: TowerLibrary.Keys
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Keys
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Keys*
        name: Keys
        nameWithType: TowerLibrary.Keys
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Keys
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Keys
  KeyValuePair`2:
    name:
      CSharp:
      - id: KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  KeyValuePair{System.String,TowerDefense.Towers.Tower}:
    name:
      CSharp:
      - id: KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: KeyValuePair`2
    commentId: '!:KeyValuePair{System.String,TowerDefense.Towers.Tower}'
  TowerDefense.Towers.Data.TowerLibrary.Contains*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Contains*
        name: Contains
        nameWithType: TowerLibrary.Contains
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Contains
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Contains*
        name: Contains
        nameWithType: TowerLibrary.Contains
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Contains
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Contains
  KeyValuePair{System.String,TowerDefense.Towers.Tower}[]:
    name:
      CSharp:
      - id: KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: KeyValuePair`2
        name: KeyValuePair
        nameWithType: KeyValuePair
        qualifiedName: KeyValuePair
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.Towers.Data.TowerLibrary.CopyTo*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.CopyTo*
        name: CopyTo
        nameWithType: TowerLibrary.CopyTo
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.CopyTo
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.CopyTo*
        name: CopyTo
        nameWithType: TowerLibrary.CopyTo
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.CopyTo
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.CopyTo
  TowerDefense.Towers.Data.TowerLibrary.IndexOf*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.IndexOf*
        name: IndexOf
        nameWithType: TowerLibrary.IndexOf
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.IndexOf
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.IndexOf*
        name: IndexOf
        nameWithType: TowerLibrary.IndexOf
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.IndexOf
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.IndexOf
  TowerDefense.Towers.Data.TowerLibrary.Insert*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Insert*
        name: Insert
        nameWithType: TowerLibrary.Insert
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Insert
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Insert*
        name: Insert
        nameWithType: TowerLibrary.Insert
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Insert
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Insert
  TowerDefense.Towers.Data.TowerLibrary.RemoveAt*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.RemoveAt*
        name: RemoveAt
        nameWithType: TowerLibrary.RemoveAt
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.RemoveAt
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.RemoveAt*
        name: RemoveAt
        nameWithType: TowerLibrary.RemoveAt
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.RemoveAt
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.RemoveAt
  IEnumerator`1:
    name:
      CSharp:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:IEnumerator`1'
  IEnumerator{TowerDefense.Towers.Tower}:
    name:
      CSharp:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: IEnumerator`1
    commentId: '!:IEnumerator{TowerDefense.Towers.Tower}'
  TowerDefense.Towers.Data.TowerLibrary.GetEnumerator*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator*
        name: GetEnumerator
        nameWithType: TowerLibrary.GetEnumerator
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator*
        name: GetEnumerator
        nameWithType: TowerLibrary.GetEnumerator
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.GetEnumerator
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.GetEnumerator
  TowerDefense.Towers.Data.TowerLibrary.Clear*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Clear*
        name: Clear
        nameWithType: TowerLibrary.Clear
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Clear
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Clear*
        name: Clear
        nameWithType: TowerLibrary.Clear
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Clear
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Clear
  TowerDefense.Towers.Tower[]:
    name:
      CSharp:
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: TowerDefense.Towers.Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: TowerDefense.Towers.Tower
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.Towers.Data.TowerLibrary.Count*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.Count*
        name: Count
        nameWithType: TowerLibrary.Count
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Count
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.Count*
        name: Count
        nameWithType: TowerLibrary.Count
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.Count
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.Count
  TowerDefense.Towers.Data.TowerLibrary.IsReadOnly*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly*
        name: IsReadOnly
        nameWithType: TowerLibrary.IsReadOnly
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly*
        name: IsReadOnly
        nameWithType: TowerLibrary.IsReadOnly
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Data.TowerLibrary.IsReadOnly
  TowerDefense.Towers.Data.TowerLibrary:
    name:
      CSharp:
      - id: TowerDefense.Towers.Data.TowerLibrary
        name: TowerLibrary
        nameWithType: TowerLibrary
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary
      VB:
      - id: TowerDefense.Towers.Data.TowerLibrary
        name: TowerLibrary
        nameWithType: TowerLibrary
        qualifiedName: TowerDefense.Towers.Data.TowerLibrary
    isDefinition: true
    commentId: T:TowerDefense.Towers.Data.TowerLibrary
  TowerDefense.Towers.Data:
    name:
      CSharp:
      - name: TowerDefense.Towers.Data
        nameWithType: TowerDefense.Towers.Data
        qualifiedName: TowerDefense.Towers.Data
      VB:
      - name: TowerDefense.Towers.Data
        nameWithType: TowerDefense.Towers.Data
        qualifiedName: TowerDefense.Towers.Data
    isDefinition: true
    commentId: N:TowerDefense.Towers.Data
  TowerDefense.Towers.Placement.IPlacementArea.transform*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.transform*
        name: transform
        nameWithType: IPlacementArea.transform
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.transform
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.transform*
        name: transform
        nameWithType: IPlacementArea.transform
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.transform
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.IPlacementArea.transform
  TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid*
        name: WorldToGrid
        nameWithType: IPlacementArea.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid*
        name: WorldToGrid
        nameWithType: IPlacementArea.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid
  TowerDefense.Towers.Placement.IPlacementArea.GridToWorld*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld*
        name: GridToWorld
        nameWithType: IPlacementArea.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld*
        name: GridToWorld
        nameWithType: IPlacementArea.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.IPlacementArea.GridToWorld
  TowerDefense.Towers.Placement:
    name:
      CSharp:
      - name: TowerDefense.Towers.Placement
        nameWithType: TowerDefense.Towers.Placement
        qualifiedName: TowerDefense.Towers.Placement
      VB:
      - name: TowerDefense.Towers.Placement
        nameWithType: TowerDefense.Towers.Placement
        qualifiedName: TowerDefense.Towers.Placement
    isDefinition: true
    commentId: N:TowerDefense.Towers.Placement
  TowerDefense.Towers.Placement.TowerFitStatus:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerFitStatus
        name: TowerFitStatus
        nameWithType: TowerFitStatus
        qualifiedName: TowerDefense.Towers.Placement.TowerFitStatus
      VB:
      - id: TowerDefense.Towers.Placement.TowerFitStatus
        name: TowerFitStatus
        nameWithType: TowerFitStatus
        qualifiedName: TowerDefense.Towers.Placement.TowerFitStatus
    isDefinition: true
    parent: TowerDefense.Towers.Placement
    commentId: T:TowerDefense.Towers.Placement.TowerFitStatus
  TowerDefense.Towers.Placement.IPlacementArea.Fits*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Fits*
        name: Fits
        nameWithType: IPlacementArea.Fits
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Fits
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Fits*
        name: Fits
        nameWithType: IPlacementArea.Fits
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Fits
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.IPlacementArea.Fits
  TowerDefense.Towers.Placement.IPlacementArea.Occupy*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Occupy*
        name: Occupy
        nameWithType: IPlacementArea.Occupy
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Occupy
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Occupy*
        name: Occupy
        nameWithType: IPlacementArea.Occupy
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Occupy
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.IPlacementArea.Occupy
  TowerDefense.Towers.Placement.IPlacementArea.Clear*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Clear*
        name: Clear
        nameWithType: IPlacementArea.Clear
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Clear
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Clear*
        name: Clear
        nameWithType: IPlacementArea.Clear
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Clear
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.IPlacementArea.Clear
  TowerDefense.Towers.Placement.IPlacementArea:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea
        name: IPlacementArea
        nameWithType: IPlacementArea
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea
        name: IPlacementArea
        nameWithType: IPlacementArea
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea
    isDefinition: true
    parent: TowerDefense.Towers.Placement
    commentId: T:TowerDefense.Towers.Placement.IPlacementArea
  TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap*
        name: Snap
        nameWithType: PlacementAreaExtensions.Snap
        qualifiedName: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap
      VB:
      - id: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap*
        name: Snap
        nameWithType: PlacementAreaExtensions.Snap
        qualifiedName: TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.PlacementAreaExtensions.Snap
  TowerDefense.Towers.Placement.PlacementAreaExtensions:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.PlacementAreaExtensions
        name: PlacementAreaExtensions
        nameWithType: PlacementAreaExtensions
        qualifiedName: TowerDefense.Towers.Placement.PlacementAreaExtensions
      VB:
      - id: TowerDefense.Towers.Placement.PlacementAreaExtensions
        name: PlacementAreaExtensions
        nameWithType: PlacementAreaExtensions
        qualifiedName: TowerDefense.Towers.Placement.PlacementAreaExtensions
    isDefinition: true
    commentId: T:TowerDefense.Towers.Placement.PlacementAreaExtensions
  PlacementTile:
    name:
      CSharp:
      - id: PlacementTile
        name: PlacementTile
        nameWithType: PlacementTile
        qualifiedName: PlacementTile
        isExternal: true
      VB:
      - id: PlacementTile
        name: PlacementTile
        nameWithType: PlacementTile
        qualifiedName: PlacementTile
        isExternal: true
    isDefinition: true
  TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake*
        name: Awake
        nameWithType: SingleTowerPlacementArea.Awake
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake*
        name: Awake
        nameWithType: SingleTowerPlacementArea.Awake
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Awake
  TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid*
        name: WorldToGrid
        nameWithType: SingleTowerPlacementArea.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid*
        name: WorldToGrid
        nameWithType: SingleTowerPlacementArea.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.SingleTowerPlacementArea.WorldToGrid
  TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2):
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
        name: WorldToGrid
        nameWithType: IPlacementArea.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
        name: WorldToGrid
        nameWithType: IPlacementArea.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.Placement.IPlacementArea
    commentId: M:TowerDefense.Towers.Placement.IPlacementArea.WorldToGrid(Vector3,IntVector2)
  TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld*
        name: GridToWorld
        nameWithType: SingleTowerPlacementArea.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld*
        name: GridToWorld
        nameWithType: SingleTowerPlacementArea.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.SingleTowerPlacementArea.GridToWorld
  TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2):
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
        name: GridToWorld
        nameWithType: IPlacementArea.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
        name: GridToWorld
        nameWithType: IPlacementArea.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.GridToWorld
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.Placement.IPlacementArea
    commentId: M:TowerDefense.Towers.Placement.IPlacementArea.GridToWorld(IntVector2,IntVector2)
  TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits*
        name: Fits
        nameWithType: SingleTowerPlacementArea.Fits
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits*
        name: Fits
        nameWithType: SingleTowerPlacementArea.Fits
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Fits
  TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2):
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
        name: Fits
        nameWithType: IPlacementArea.Fits
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Fits
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
        name: Fits
        nameWithType: IPlacementArea.Fits
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Fits
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.Placement.IPlacementArea
    commentId: M:TowerDefense.Towers.Placement.IPlacementArea.Fits(IntVector2,IntVector2)
  TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy*
        name: Occupy
        nameWithType: SingleTowerPlacementArea.Occupy
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy*
        name: Occupy
        nameWithType: SingleTowerPlacementArea.Occupy
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Occupy
  TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2):
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
        name: Occupy
        nameWithType: IPlacementArea.Occupy
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Occupy
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
        name: Occupy
        nameWithType: IPlacementArea.Occupy
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Occupy
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.Placement.IPlacementArea
    commentId: M:TowerDefense.Towers.Placement.IPlacementArea.Occupy(IntVector2,IntVector2)
  TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear*
        name: Clear
        nameWithType: SingleTowerPlacementArea.Clear
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear*
        name: Clear
        nameWithType: SingleTowerPlacementArea.Clear
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.SingleTowerPlacementArea.Clear
  TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2):
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
        name: Clear
        nameWithType: IPlacementArea.Clear
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
        name: Clear
        nameWithType: IPlacementArea.Clear
        qualifiedName: TowerDefense.Towers.Placement.IPlacementArea.Clear
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: IntVector2
        name: IntVector2
        nameWithType: IntVector2
        qualifiedName: IntVector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.Placement.IPlacementArea
    commentId: M:TowerDefense.Towers.Placement.IPlacementArea.Clear(IntVector2,IntVector2)
  TowerDefense.Towers.Placement.SingleTowerPlacementArea:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea
        name: SingleTowerPlacementArea
        nameWithType: SingleTowerPlacementArea
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea
      VB:
      - id: TowerDefense.Towers.Placement.SingleTowerPlacementArea
        name: SingleTowerPlacementArea
        nameWithType: SingleTowerPlacementArea
        qualifiedName: TowerDefense.Towers.Placement.SingleTowerPlacementArea
    isDefinition: true
    commentId: T:TowerDefense.Towers.Placement.SingleTowerPlacementArea
  TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid*
        name: WorldToGrid
        nameWithType: TowerPlacementGrid.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid*
        name: WorldToGrid
        nameWithType: TowerPlacementGrid.WorldToGrid
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.WorldToGrid
  TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld*
        name: GridToWorld
        nameWithType: TowerPlacementGrid.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld*
        name: GridToWorld
        nameWithType: TowerPlacementGrid.GridToWorld
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.GridToWorld
  TowerDefense.Towers.Placement.TowerPlacementGrid.Fits*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits*
        name: Fits
        nameWithType: TowerPlacementGrid.Fits
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits*
        name: Fits
        nameWithType: TowerPlacementGrid.Fits
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Fits
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.Fits
  TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy*
        name: Occupy
        nameWithType: TowerPlacementGrid.Occupy
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy*
        name: Occupy
        nameWithType: TowerPlacementGrid.Occupy
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.Occupy
  TowerDefense.Towers.Placement.TowerPlacementGrid.Clear*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear*
        name: Clear
        nameWithType: TowerPlacementGrid.Clear
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear*
        name: Clear
        nameWithType: TowerPlacementGrid.Clear
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Clear
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.Clear
  TowerDefense.Towers.Placement.TowerPlacementGrid.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake*
        name: Awake
        nameWithType: TowerPlacementGrid.Awake
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake*
        name: Awake
        nameWithType: TowerPlacementGrid.Awake
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.Awake
  TowerDefense.Towers.Placement.TowerPlacementGrid.m_AvailableCells:
    commentId: F:TowerDefense.Towers.Placement.TowerPlacementGrid.m_AvailableCells
  TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid*
        name: SetUpGrid
        nameWithType: TowerPlacementGrid.SetUpGrid
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid*
        name: SetUpGrid
        nameWithType: TowerPlacementGrid.SetUpGrid
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Placement.TowerPlacementGrid.SetUpGrid
  TowerDefense.Towers.Placement.TowerPlacementGrid:
    name:
      CSharp:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid
        name: TowerPlacementGrid
        nameWithType: TowerPlacementGrid
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid
      VB:
      - id: TowerDefense.Towers.Placement.TowerPlacementGrid
        name: TowerPlacementGrid
        nameWithType: TowerPlacementGrid
        qualifiedName: TowerDefense.Towers.Placement.TowerPlacementGrid
    isDefinition: true
    commentId: T:TowerDefense.Towers.Placement.TowerPlacementGrid
  TowerDefense.Towers.Projectiles.ContactDestroyer.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake*
        name: Awake
        nameWithType: ContactDestroyer.Awake
        qualifiedName: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake
      VB:
      - id: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake*
        name: Awake
        nameWithType: ContactDestroyer.Awake
        qualifiedName: TowerDefense.Towers.Projectiles.ContactDestroyer.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.ContactDestroyer.Awake
  TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint:
    commentId: F:TowerDefense.Towers.Projectiles.ContactDestroyer.yDestroyPoint
  TowerDefense.Towers.Projectiles.ContactDestroyer.Update*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.ContactDestroyer.Update*
        name: Update
        nameWithType: ContactDestroyer.Update
        qualifiedName: TowerDefense.Towers.Projectiles.ContactDestroyer.Update
      VB:
      - id: TowerDefense.Towers.Projectiles.ContactDestroyer.Update*
        name: Update
        nameWithType: ContactDestroyer.Update
        qualifiedName: TowerDefense.Towers.Projectiles.ContactDestroyer.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.ContactDestroyer.Update
  TowerDefense.Towers.Projectiles.ContactDestroyer:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.ContactDestroyer
        name: ContactDestroyer
        nameWithType: ContactDestroyer
        qualifiedName: TowerDefense.Towers.Projectiles.ContactDestroyer
      VB:
      - id: TowerDefense.Towers.Projectiles.ContactDestroyer
        name: ContactDestroyer
        nameWithType: ContactDestroyer
        qualifiedName: TowerDefense.Towers.Projectiles.ContactDestroyer
    isDefinition: true
    commentId: T:TowerDefense.Towers.Projectiles.ContactDestroyer
  TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy*
        name: AttackEnemy
        nameWithType: HitscanAttack.AttackEnemy
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy
      VB:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy*
        name: AttackEnemy
        nameWithType: HitscanAttack.AttackEnemy
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.HitscanAttack.AttackEnemy
  TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage*
        name: DealDamage
        nameWithType: HitscanAttack.DealDamage
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage
      VB:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage*
        name: DealDamage
        nameWithType: HitscanAttack.DealDamage
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.HitscanAttack.DealDamage
  TowerDefense.Towers.Projectiles.HitscanAttack.Awake*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.Awake*
        name: Awake
        nameWithType: HitscanAttack.Awake
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.Awake
      VB:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.Awake*
        name: Awake
        nameWithType: HitscanAttack.Awake
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.HitscanAttack.Awake
  TowerDefense.Towers.Projectiles.HitscanAttack.Update*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.Update*
        name: Update
        nameWithType: HitscanAttack.Update
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.Update
      VB:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack.Update*
        name: Update
        nameWithType: HitscanAttack.Update
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.HitscanAttack.Update
  TowerDefense.Towers.Projectiles.HitscanAttack:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack
        name: HitscanAttack
        nameWithType: HitscanAttack
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack
      VB:
      - id: TowerDefense.Towers.Projectiles.HitscanAttack
        name: HitscanAttack
        nameWithType: HitscanAttack
        qualifiedName: TowerDefense.Towers.Projectiles.HitscanAttack
    isDefinition: true
    commentId: T:TowerDefense.Towers.Projectiles.HitscanAttack
  SerializableIAlignmentProvider:
    name:
      CSharp:
      - id: SerializableIAlignmentProvider
        name: SerializableIAlignmentProvider
        nameWithType: SerializableIAlignmentProvider
        qualifiedName: SerializableIAlignmentProvider
        isExternal: true
      VB:
      - id: SerializableIAlignmentProvider
        name: SerializableIAlignmentProvider
        nameWithType: SerializableIAlignmentProvider
        qualifiedName: SerializableIAlignmentProvider
        isExternal: true
    isDefinition: true
    commentId: '!:SerializableIAlignmentProvider'
  TowerDefense.Towers.Projectiles.SplashDamager.damage*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.SplashDamager.damage*
        name: damage
        nameWithType: SplashDamager.damage
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager.damage
      VB:
      - id: TowerDefense.Towers.Projectiles.SplashDamager.damage*
        name: damage
        nameWithType: SplashDamager.damage
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager.damage
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.SplashDamager.damage
  TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider*
        name: alignmentProvider
        nameWithType: SplashDamager.alignmentProvider
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
      VB:
      - id: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider*
        name: alignmentProvider
        nameWithType: SplashDamager.alignmentProvider
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.SplashDamager.alignmentProvider
  TowerDefense.Towers.Projectiles.SplashDamager.attackRange:
    commentId: F:TowerDefense.Towers.Projectiles.SplashDamager.attackRange
  Collision:
    name:
      CSharp:
      - id: Collision
        name: Collision
        nameWithType: Collision
        qualifiedName: Collision
        isExternal: true
      VB:
      - id: Collision
        name: Collision
        nameWithType: Collision
        qualifiedName: Collision
        isExternal: true
    isDefinition: true
    commentId: '!:Collision'
  TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter*:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter*
        name: OnCollisionEnter
        nameWithType: SplashDamager.OnCollisionEnter
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter
      VB:
      - id: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter*
        name: OnCollisionEnter
        nameWithType: SplashDamager.OnCollisionEnter
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.Projectiles.SplashDamager.OnCollisionEnter
  TowerDefense.Towers.Projectiles.SplashDamager:
    name:
      CSharp:
      - id: TowerDefense.Towers.Projectiles.SplashDamager
        name: SplashDamager
        nameWithType: SplashDamager
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager
      VB:
      - id: TowerDefense.Towers.Projectiles.SplashDamager
        name: SplashDamager
        nameWithType: SplashDamager
        qualifiedName: TowerDefense.Towers.Projectiles.SplashDamager
    isDefinition: true
    commentId: T:TowerDefense.Towers.Projectiles.SplashDamager
  TowerDefense.Towers.Projectiles:
    name:
      CSharp:
      - name: TowerDefense.Towers.Projectiles
        nameWithType: TowerDefense.Towers.Projectiles
        qualifiedName: TowerDefense.Towers.Projectiles
      VB:
      - name: TowerDefense.Towers.Projectiles
        nameWithType: TowerDefense.Towers.Projectiles
        qualifiedName: TowerDefense.Towers.Projectiles
    isDefinition: true
    commentId: N:TowerDefense.Towers.Projectiles
  TowerDefense.Towers.TowerLaunchers:
    name:
      CSharp:
      - name: TowerDefense.Towers.TowerLaunchers
        nameWithType: TowerDefense.Towers.TowerLaunchers
        qualifiedName: TowerDefense.Towers.TowerLaunchers
      VB:
      - name: TowerDefense.Towers.TowerLaunchers
        nameWithType: TowerDefense.Towers.TowerLaunchers
        qualifiedName: TowerDefense.Towers.TowerLaunchers
    isDefinition: true
    commentId: N:TowerDefense.Towers.TowerLaunchers
  TowerDefense.Towers.TowerLaunchers.Launcher:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher
        name: Launcher
        nameWithType: Launcher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher
        name: Launcher
        nameWithType: Launcher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers
    commentId: T:TowerDefense.Towers.TowerLaunchers.Launcher
  TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[]):
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.Launcher
    commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.Launch(List{Targetable},GameObject,Transform[])
  TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[]):
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.Launcher
    commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform[])
  TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3):
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
        name: PlayParticles
        nameWithType: Launcher.PlayParticles
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
        name: PlayParticles
        nameWithType: Launcher.PlayParticles
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ParticleSystem
        name: ParticleSystem
        nameWithType: ParticleSystem
        qualifiedName: ParticleSystem
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.Launcher
    commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles(ParticleSystem,Vector3,Vector3)
  TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[]):
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
        name: GetRandomTransform
        nameWithType: Launcher.GetRandomTransform
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
        name: GetRandomTransform
        nameWithType: Launcher.GetRandomTransform
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.Launcher
    commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform(Transform[])
  TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform):
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.Launcher
    commentId: M:TowerDefense.Towers.TowerLaunchers.Launcher.Launch(Targetable,GameObject,Transform)
  TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch*
        name: Launch
        nameWithType: BallisticLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch*
        name: Launch
        nameWithType: BallisticLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.BallisticLauncher.Launch
  TowerDefense.Towers.TowerLaunchers.BallisticLauncher:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
        name: BallisticLauncher
        nameWithType: BallisticLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
        name: BallisticLauncher
        nameWithType: BallisticLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.BallisticLauncher
    isDefinition: true
    commentId: T:TowerDefense.Towers.TowerLaunchers.BallisticLauncher
  TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch*
        name: Launch
        nameWithType: HitscanLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch*
        name: Launch
        nameWithType: HitscanLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.HitscanLauncher.Launch
  TowerDefense.Towers.TowerLaunchers.HitscanLauncher:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
        name: HitscanLauncher
        nameWithType: HitscanLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
        name: HitscanLauncher
        nameWithType: HitscanLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HitscanLauncher
    isDefinition: true
    commentId: T:TowerDefense.Towers.TowerLaunchers.HitscanLauncher
  TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch*
        name: Launch
        nameWithType: HomingLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch*
        name: Launch
        nameWithType: HomingLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch
  TowerDefense.Towers.TowerLaunchers.HomingLauncher:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher
        name: HomingLauncher
        nameWithType: HomingLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher
        name: HomingLauncher
        nameWithType: HomingLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers
    commentId: T:TowerDefense.Towers.TowerLaunchers.HomingLauncher
  TowerDefense.Towers.TowerLaunchers.Launcher.Launch*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch*
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.Launch*
        name: Launch
        nameWithType: Launcher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.Launch
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.Launcher.Launch
  TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform):
    name:
      CSharp:
      - id: TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform)
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform)
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.ILauncher
    commentId: M:TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform)
  TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[]):
    name:
      CSharp:
      - id: TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[])
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[])
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.ILauncher
    commentId: M:TowerDefense.Towers.ILauncher.Launch(List{Targetable},GameObject,Transform[])
  TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[]):
    name:
      CSharp:
      - id: TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[])
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[])
        name: Launch
        nameWithType: ILauncher.Launch
        qualifiedName: TowerDefense.Towers.ILauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.ILauncher
    commentId: M:TowerDefense.Towers.ILauncher.Launch(Targetable,GameObject,Transform[])
  TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles*
        name: PlayParticles
        nameWithType: Launcher.PlayParticles
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles*
        name: PlayParticles
        nameWithType: Launcher.PlayParticles
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.Launcher.PlayParticles
  TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform*
        name: GetRandomTransform
        nameWithType: Launcher.GetRandomTransform
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform*
        name: GetRandomTransform
        nameWithType: Launcher.GetRandomTransform
        qualifiedName: TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.Launcher.GetRandomTransform
  TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
        name: fireParticleSystem
        nameWithType: HomingLauncher.fireParticleSystem
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
        name: fireParticleSystem
        nameWithType: HomingLauncher.fireParticleSystem
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.HomingLauncher
    commentId: F:TowerDefense.Towers.TowerLaunchers.HomingLauncher.fireParticleSystem
  TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch*
        name: Launch
        nameWithType: SuperTowerLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch*
        name: Launch
        nameWithType: SuperTowerLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Launch
  TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform):
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform)
        name: Launch
        nameWithType: HomingLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform)
        name: Launch
        nameWithType: HomingLauncher.Launch
        qualifiedName: TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Targetable
        name: Targetable
        nameWithType: Targetable
        qualifiedName: Targetable
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: TowerDefense.Towers.TowerLaunchers.HomingLauncher
    commentId: M:TowerDefense.Towers.TowerLaunchers.HomingLauncher.Launch(Targetable,GameObject,Transform)
  TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable*
        name: OnEnable
        nameWithType: SuperTowerLauncher.OnEnable
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable*
        name: OnEnable
        nameWithType: SuperTowerLauncher.OnEnable
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnEnable
  TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable*
        name: OnDisable
        nameWithType: SuperTowerLauncher.OnDisable
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable*
        name: OnDisable
        nameWithType: SuperTowerLauncher.OnDisable
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnDisable
  TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update*
        name: Update
        nameWithType: SuperTowerLauncher.Update
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update*
        name: Update
        nameWithType: SuperTowerLauncher.Update
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.Update
  TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed*:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed*
        name: OnLifeTimerElapsed
        nameWithType: SuperTowerLauncher.OnLifeTimerElapsed
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed*
        name: OnLifeTimerElapsed
        nameWithType: SuperTowerLauncher.OnLifeTimerElapsed
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed
    isDefinition: true
    commentId: Overload:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher.OnLifeTimerElapsed
  TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher:
    name:
      CSharp:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
        name: SuperTowerLauncher
        nameWithType: SuperTowerLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
      VB:
      - id: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
        name: SuperTowerLauncher
        nameWithType: SuperTowerLauncher
        qualifiedName: TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
    isDefinition: true
    commentId: T:TowerDefense.Towers.TowerLaunchers.SuperTowerLauncher
  AudioClip:
    name:
      CSharp:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
      VB:
      - id: AudioClip
        name: AudioClip
        nameWithType: AudioClip
        qualifiedName: AudioClip
        isExternal: true
    isDefinition: true
  Canvas:
    name:
      CSharp:
      - id: Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
      VB:
      - id: Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
    isDefinition: true
  Text:
    name:
      CSharp:
      - id: Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
  TowerDefense.UI:
    name:
      CSharp:
      - name: TowerDefense.UI
        nameWithType: TowerDefense.UI
        qualifiedName: TowerDefense.UI
      VB:
      - name: TowerDefense.UI
        nameWithType: TowerDefense.UI
        qualifiedName: TowerDefense.UI
    isDefinition: true
    commentId: N:TowerDefense.UI
  TowerDefense.UI.ScorePanel:
    name:
      CSharp:
      - id: TowerDefense.UI.ScorePanel
        name: ScorePanel
        nameWithType: ScorePanel
        qualifiedName: TowerDefense.UI.ScorePanel
      VB:
      - id: TowerDefense.UI.ScorePanel
        name: ScorePanel
        nameWithType: ScorePanel
        qualifiedName: TowerDefense.UI.ScorePanel
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.ScorePanel
  Image:
    name:
      CSharp:
      - id: Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      VB:
      - id: Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
    isDefinition: true
  TowerDefense.UI.EndGameScreen.GoToMainMenu*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.GoToMainMenu*
        name: GoToMainMenu
        nameWithType: EndGameScreen.GoToMainMenu
        qualifiedName: TowerDefense.UI.EndGameScreen.GoToMainMenu
      VB:
      - id: TowerDefense.UI.EndGameScreen.GoToMainMenu*
        name: GoToMainMenu
        nameWithType: EndGameScreen.GoToMainMenu
        qualifiedName: TowerDefense.UI.EndGameScreen.GoToMainMenu
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.GoToMainMenu
  TowerDefense.UI.EndGameScreen.RestartLevel*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.RestartLevel*
        name: RestartLevel
        nameWithType: EndGameScreen.RestartLevel
        qualifiedName: TowerDefense.UI.EndGameScreen.RestartLevel
      VB:
      - id: TowerDefense.UI.EndGameScreen.RestartLevel*
        name: RestartLevel
        nameWithType: EndGameScreen.RestartLevel
        qualifiedName: TowerDefense.UI.EndGameScreen.RestartLevel
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.RestartLevel
  TowerDefense.UI.EndGameScreen.GoToNextLevel*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.GoToNextLevel*
        name: GoToNextLevel
        nameWithType: EndGameScreen.GoToNextLevel
        qualifiedName: TowerDefense.UI.EndGameScreen.GoToNextLevel
      VB:
      - id: TowerDefense.UI.EndGameScreen.GoToNextLevel*
        name: GoToNextLevel
        nameWithType: EndGameScreen.GoToNextLevel
        qualifiedName: TowerDefense.UI.EndGameScreen.GoToNextLevel
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.GoToNextLevel
  TowerDefense.UI.EndGameScreen.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.Start*
        name: Start
        nameWithType: EndGameScreen.Start
        qualifiedName: TowerDefense.UI.EndGameScreen.Start
      VB:
      - id: TowerDefense.UI.EndGameScreen.Start*
        name: Start
        nameWithType: EndGameScreen.Start
        qualifiedName: TowerDefense.UI.EndGameScreen.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.Start
  TowerDefense.UI.EndGameScreen.OpenEndGameScreen*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.OpenEndGameScreen*
        name: OpenEndGameScreen
        nameWithType: EndGameScreen.OpenEndGameScreen
        qualifiedName: TowerDefense.UI.EndGameScreen.OpenEndGameScreen
      VB:
      - id: TowerDefense.UI.EndGameScreen.OpenEndGameScreen*
        name: OpenEndGameScreen
        nameWithType: EndGameScreen.OpenEndGameScreen
        qualifiedName: TowerDefense.UI.EndGameScreen.OpenEndGameScreen
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.OpenEndGameScreen
  TowerDefense.UI.EndGameScreen.Victory*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.Victory*
        name: Victory
        nameWithType: EndGameScreen.Victory
        qualifiedName: TowerDefense.UI.EndGameScreen.Victory
      VB:
      - id: TowerDefense.UI.EndGameScreen.Victory*
        name: Victory
        nameWithType: EndGameScreen.Victory
        qualifiedName: TowerDefense.UI.EndGameScreen.Victory
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.Victory
  TowerDefense.UI.EndGameScreen.Defeat*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.Defeat*
        name: Defeat
        nameWithType: EndGameScreen.Defeat
        qualifiedName: TowerDefense.UI.EndGameScreen.Defeat
      VB:
      - id: TowerDefense.UI.EndGameScreen.Defeat*
        name: Defeat
        nameWithType: EndGameScreen.Defeat
        qualifiedName: TowerDefense.UI.EndGameScreen.Defeat
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.Defeat
  TowerDefense.UI.EndGameScreen.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.OnDestroy*
        name: OnDestroy
        nameWithType: EndGameScreen.OnDestroy
        qualifiedName: TowerDefense.UI.EndGameScreen.OnDestroy
      VB:
      - id: TowerDefense.UI.EndGameScreen.OnDestroy*
        name: OnDestroy
        nameWithType: EndGameScreen.OnDestroy
        qualifiedName: TowerDefense.UI.EndGameScreen.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.OnDestroy
  TowerDefense.UI.EndGameScreen.SafelyUnsubscribe*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe*
        name: SafelyUnsubscribe
        nameWithType: EndGameScreen.SafelyUnsubscribe
        qualifiedName: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe
      VB:
      - id: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe*
        name: SafelyUnsubscribe
        nameWithType: EndGameScreen.SafelyUnsubscribe
        qualifiedName: TowerDefense.UI.EndGameScreen.SafelyUnsubscribe
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.SafelyUnsubscribe
  TowerDefense.UI.EndGameScreen.m_LevelManager:
    commentId: F:TowerDefense.UI.EndGameScreen.m_LevelManager
  TowerDefense.UI.EndGameScreen.LazyLoad*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.LazyLoad*
        name: LazyLoad
        nameWithType: EndGameScreen.LazyLoad
        qualifiedName: TowerDefense.UI.EndGameScreen.LazyLoad
      VB:
      - id: TowerDefense.UI.EndGameScreen.LazyLoad*
        name: LazyLoad
        nameWithType: EndGameScreen.LazyLoad
        qualifiedName: TowerDefense.UI.EndGameScreen.LazyLoad
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.LazyLoad
  TowerDefense.UI.EndGameScreen.CalculateFinalScore*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.CalculateFinalScore*
        name: CalculateFinalScore
        nameWithType: EndGameScreen.CalculateFinalScore
        qualifiedName: TowerDefense.UI.EndGameScreen.CalculateFinalScore
      VB:
      - id: TowerDefense.UI.EndGameScreen.CalculateFinalScore*
        name: CalculateFinalScore
        nameWithType: EndGameScreen.CalculateFinalScore
        qualifiedName: TowerDefense.UI.EndGameScreen.CalculateFinalScore
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.CalculateFinalScore
  TowerDefense.UI.EndGameScreen.CalculateScore*:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen.CalculateScore*
        name: CalculateScore
        nameWithType: EndGameScreen.CalculateScore
        qualifiedName: TowerDefense.UI.EndGameScreen.CalculateScore
      VB:
      - id: TowerDefense.UI.EndGameScreen.CalculateScore*
        name: CalculateScore
        nameWithType: EndGameScreen.CalculateScore
        qualifiedName: TowerDefense.UI.EndGameScreen.CalculateScore
    isDefinition: true
    commentId: Overload:TowerDefense.UI.EndGameScreen.CalculateScore
  TowerDefense.UI.EndGameScreen:
    name:
      CSharp:
      - id: TowerDefense.UI.EndGameScreen
        name: EndGameScreen
        nameWithType: EndGameScreen
        qualifiedName: TowerDefense.UI.EndGameScreen
      VB:
      - id: TowerDefense.UI.EndGameScreen
        name: EndGameScreen
        nameWithType: EndGameScreen
        qualifiedName: TowerDefense.UI.EndGameScreen
    isDefinition: true
    commentId: T:TowerDefense.UI.EndGameScreen
  PointerEventData:
    name:
      CSharp:
      - id: PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
      VB:
      - id: PointerEventData
        name: PointerEventData
        nameWithType: PointerEventData
        qualifiedName: PointerEventData
        isExternal: true
    isDefinition: true
  TowerDefense.UI.ExitButton.OnPointerClick*:
    name:
      CSharp:
      - id: TowerDefense.UI.ExitButton.OnPointerClick*
        name: OnPointerClick
        nameWithType: ExitButton.OnPointerClick
        qualifiedName: TowerDefense.UI.ExitButton.OnPointerClick
      VB:
      - id: TowerDefense.UI.ExitButton.OnPointerClick*
        name: OnPointerClick
        nameWithType: ExitButton.OnPointerClick
        qualifiedName: TowerDefense.UI.ExitButton.OnPointerClick
    isDefinition: true
    commentId: Overload:TowerDefense.UI.ExitButton.OnPointerClick
  TowerDefense.UI.ExitButton.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.ExitButton.Awake*
        name: Awake
        nameWithType: ExitButton.Awake
        qualifiedName: TowerDefense.UI.ExitButton.Awake
      VB:
      - id: TowerDefense.UI.ExitButton.Awake*
        name: Awake
        nameWithType: ExitButton.Awake
        qualifiedName: TowerDefense.UI.ExitButton.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.ExitButton.Awake
  TowerDefense.UI.ExitButton:
    name:
      CSharp:
      - id: TowerDefense.UI.ExitButton
        name: ExitButton
        nameWithType: ExitButton
        qualifiedName: TowerDefense.UI.ExitButton
      VB:
      - id: TowerDefense.UI.ExitButton
        name: ExitButton
        nameWithType: ExitButton
        qualifiedName: TowerDefense.UI.ExitButton
    isDefinition: true
    commentId: T:TowerDefense.UI.ExitButton
  DateTime:
    name:
      CSharp:
      - id: DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
      VB:
      - id: DateTime
        name: DateTime
        nameWithType: DateTime
        qualifiedName: DateTime
        isExternal: true
    isDefinition: true
    commentId: '!:DateTime'
  TowerDefense.UI.IntervalParticleSystemPlayer:
    name:
      CSharp:
      - id: TowerDefense.UI.IntervalParticleSystemPlayer
        name: IntervalParticleSystemPlayer
        nameWithType: IntervalParticleSystemPlayer
        qualifiedName: TowerDefense.UI.IntervalParticleSystemPlayer
      VB:
      - id: TowerDefense.UI.IntervalParticleSystemPlayer
        name: IntervalParticleSystemPlayer
        nameWithType: IntervalParticleSystemPlayer
        qualifiedName: TowerDefense.UI.IntervalParticleSystemPlayer
    isDefinition: true
    commentId: T:TowerDefense.UI.IntervalParticleSystemPlayer
  ISelectHandler:
    name:
      CSharp:
      - id: ISelectHandler
        name: ISelectHandler
        nameWithType: ISelectHandler
        qualifiedName: ISelectHandler
        isExternal: true
      VB:
      - id: ISelectHandler
        name: ISelectHandler
        nameWithType: ISelectHandler
        qualifiedName: ISelectHandler
        isExternal: true
    isDefinition: true
    commentId: '!:ISelectHandler'
  Button:
    name:
      CSharp:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  Image[]:
    name:
      CSharp:
      - id: Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Image
        name: Image
        nameWithType: Image
        qualifiedName: Image
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.UI.MouseScroll:
    name:
      CSharp:
      - id: TowerDefense.UI.MouseScroll
        name: MouseScroll
        nameWithType: MouseScroll
        qualifiedName: TowerDefense.UI.MouseScroll
      VB:
      - id: TowerDefense.UI.MouseScroll
        name: MouseScroll
        nameWithType: MouseScroll
        qualifiedName: TowerDefense.UI.MouseScroll
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.MouseScroll
  TowerDefense.UI.LevelSelectButton.ButtonClicked*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.ButtonClicked*
        name: ButtonClicked
        nameWithType: LevelSelectButton.ButtonClicked
        qualifiedName: TowerDefense.UI.LevelSelectButton.ButtonClicked
      VB:
      - id: TowerDefense.UI.LevelSelectButton.ButtonClicked*
        name: ButtonClicked
        nameWithType: LevelSelectButton.ButtonClicked
        qualifiedName: TowerDefense.UI.LevelSelectButton.ButtonClicked
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.ButtonClicked
  TowerDefense.UI.LevelSelectButton.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.Initialize*
        name: Initialize
        nameWithType: LevelSelectButton.Initialize
        qualifiedName: TowerDefense.UI.LevelSelectButton.Initialize
      VB:
      - id: TowerDefense.UI.LevelSelectButton.Initialize*
        name: Initialize
        nameWithType: LevelSelectButton.Initialize
        qualifiedName: TowerDefense.UI.LevelSelectButton.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.Initialize
  TowerDefense.UI.LevelSelectButton.HasPlayedState*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.HasPlayedState*
        name: HasPlayedState
        nameWithType: LevelSelectButton.HasPlayedState
        qualifiedName: TowerDefense.UI.LevelSelectButton.HasPlayedState
      VB:
      - id: TowerDefense.UI.LevelSelectButton.HasPlayedState*
        name: HasPlayedState
        nameWithType: LevelSelectButton.HasPlayedState
        qualifiedName: TowerDefense.UI.LevelSelectButton.HasPlayedState
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.HasPlayedState
  TowerDefense.UI.LevelSelectButton.ChangeScenes*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.ChangeScenes*
        name: ChangeScenes
        nameWithType: LevelSelectButton.ChangeScenes
        qualifiedName: TowerDefense.UI.LevelSelectButton.ChangeScenes
      VB:
      - id: TowerDefense.UI.LevelSelectButton.ChangeScenes*
        name: ChangeScenes
        nameWithType: LevelSelectButton.ChangeScenes
        qualifiedName: TowerDefense.UI.LevelSelectButton.ChangeScenes
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.ChangeScenes
  TowerDefense.UI.LevelSelectButton.m_Button:
    commentId: F:TowerDefense.UI.LevelSelectButton.m_Button
  TowerDefense.UI.LevelSelectButton.LazyLoad*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.LazyLoad*
        name: LazyLoad
        nameWithType: LevelSelectButton.LazyLoad
        qualifiedName: TowerDefense.UI.LevelSelectButton.LazyLoad
      VB:
      - id: TowerDefense.UI.LevelSelectButton.LazyLoad*
        name: LazyLoad
        nameWithType: LevelSelectButton.LazyLoad
        qualifiedName: TowerDefense.UI.LevelSelectButton.LazyLoad
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.LazyLoad
  TowerDefense.UI.LevelSelectButton.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.OnDestroy*
        name: OnDestroy
        nameWithType: LevelSelectButton.OnDestroy
        qualifiedName: TowerDefense.UI.LevelSelectButton.OnDestroy
      VB:
      - id: TowerDefense.UI.LevelSelectButton.OnDestroy*
        name: OnDestroy
        nameWithType: LevelSelectButton.OnDestroy
        qualifiedName: TowerDefense.UI.LevelSelectButton.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.OnDestroy
  BaseEventData:
    name:
      CSharp:
      - id: BaseEventData
        name: BaseEventData
        nameWithType: BaseEventData
        qualifiedName: BaseEventData
        isExternal: true
      VB:
      - id: BaseEventData
        name: BaseEventData
        nameWithType: BaseEventData
        qualifiedName: BaseEventData
        isExternal: true
    isDefinition: true
    commentId: '!:BaseEventData'
  TowerDefense.UI.LevelSelectButton.OnSelect*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton.OnSelect*
        name: OnSelect
        nameWithType: LevelSelectButton.OnSelect
        qualifiedName: TowerDefense.UI.LevelSelectButton.OnSelect
      VB:
      - id: TowerDefense.UI.LevelSelectButton.OnSelect*
        name: OnSelect
        nameWithType: LevelSelectButton.OnSelect
        qualifiedName: TowerDefense.UI.LevelSelectButton.OnSelect
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectButton.OnSelect
  TowerDefense.UI.LevelSelectButton:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectButton
        name: LevelSelectButton
        nameWithType: LevelSelectButton
        qualifiedName: TowerDefense.UI.LevelSelectButton
      VB:
      - id: TowerDefense.UI.LevelSelectButton
        name: LevelSelectButton
        nameWithType: LevelSelectButton
        qualifiedName: TowerDefense.UI.LevelSelectButton
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.LevelSelectButton
  LayoutGroup:
    name:
      CSharp:
      - id: LayoutGroup
        name: LayoutGroup
        nameWithType: LayoutGroup
        qualifiedName: LayoutGroup
        isExternal: true
      VB:
      - id: LayoutGroup
        name: LayoutGroup
        nameWithType: LayoutGroup
        qualifiedName: LayoutGroup
        isExternal: true
    isDefinition: true
    commentId: '!:LayoutGroup'
  Animation:
    name:
      CSharp:
      - id: Animation
        name: Animation
        nameWithType: Animation
        qualifiedName: Animation
        isExternal: true
      VB:
      - id: Animation
        name: Animation
        nameWithType: Animation
        qualifiedName: Animation
        isExternal: true
    isDefinition: true
  List{Button}:
    name:
      CSharp:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: List`1
    commentId: '!:List{Button}'
  TowerDefense.UI.LevelSelectScreen.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectScreen.Start*
        name: Start
        nameWithType: LevelSelectScreen.Start
        qualifiedName: TowerDefense.UI.LevelSelectScreen.Start
      VB:
      - id: TowerDefense.UI.LevelSelectScreen.Start*
        name: Start
        nameWithType: LevelSelectScreen.Start
        qualifiedName: TowerDefense.UI.LevelSelectScreen.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectScreen.Start
  TowerDefense.UI.LevelSelectScreen.CreateButton*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectScreen.CreateButton*
        name: CreateButton
        nameWithType: LevelSelectScreen.CreateButton
        qualifiedName: TowerDefense.UI.LevelSelectScreen.CreateButton
      VB:
      - id: TowerDefense.UI.LevelSelectScreen.CreateButton*
        name: CreateButton
        nameWithType: LevelSelectScreen.CreateButton
        qualifiedName: TowerDefense.UI.LevelSelectScreen.CreateButton
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectScreen.CreateButton
  TowerDefense.UI.LevelSelectScreen.Show*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectScreen.Show*
        name: Show
        nameWithType: LevelSelectScreen.Show
        qualifiedName: TowerDefense.UI.LevelSelectScreen.Show
      VB:
      - id: TowerDefense.UI.LevelSelectScreen.Show*
        name: Show
        nameWithType: LevelSelectScreen.Show
        qualifiedName: TowerDefense.UI.LevelSelectScreen.Show
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectScreen.Show
  TowerDefense.UI.LevelSelectScreen.Hide*:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectScreen.Hide*
        name: Hide
        nameWithType: LevelSelectScreen.Hide
        qualifiedName: TowerDefense.UI.LevelSelectScreen.Hide
      VB:
      - id: TowerDefense.UI.LevelSelectScreen.Hide*
        name: Hide
        nameWithType: LevelSelectScreen.Hide
        qualifiedName: TowerDefense.UI.LevelSelectScreen.Hide
    isDefinition: true
    commentId: Overload:TowerDefense.UI.LevelSelectScreen.Hide
  TowerDefense.UI.LevelSelectScreen:
    name:
      CSharp:
      - id: TowerDefense.UI.LevelSelectScreen
        name: LevelSelectScreen
        nameWithType: LevelSelectScreen
        qualifiedName: TowerDefense.UI.LevelSelectScreen
      VB:
      - id: TowerDefense.UI.LevelSelectScreen
        name: LevelSelectScreen
        nameWithType: LevelSelectScreen
        qualifiedName: TowerDefense.UI.LevelSelectScreen
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.LevelSelectScreen
  ScrollRect:
    name:
      CSharp:
      - id: ScrollRect
        name: ScrollRect
        nameWithType: ScrollRect
        qualifiedName: ScrollRect
        isExternal: true
      VB:
      - id: ScrollRect
        name: ScrollRect
        nameWithType: ScrollRect
        qualifiedName: ScrollRect
        isExternal: true
    isDefinition: true
    commentId: '!:ScrollRect'
  RectTransform:
    name:
      CSharp:
      - id: RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
      VB:
      - id: RectTransform
        name: RectTransform
        nameWithType: RectTransform
        qualifiedName: RectTransform
        isExternal: true
    isDefinition: true
  TowerDefense.UI.MouseScroll.SetHasRightBuffer*:
    name:
      CSharp:
      - id: TowerDefense.UI.MouseScroll.SetHasRightBuffer*
        name: SetHasRightBuffer
        nameWithType: MouseScroll.SetHasRightBuffer
        qualifiedName: TowerDefense.UI.MouseScroll.SetHasRightBuffer
      VB:
      - id: TowerDefense.UI.MouseScroll.SetHasRightBuffer*
        name: SetHasRightBuffer
        nameWithType: MouseScroll.SetHasRightBuffer
        qualifiedName: TowerDefense.UI.MouseScroll.SetHasRightBuffer
    isDefinition: true
    commentId: Overload:TowerDefense.UI.MouseScroll.SetHasRightBuffer
  TowerDefense.UI.MouseScroll.SelectChild*:
    name:
      CSharp:
      - id: TowerDefense.UI.MouseScroll.SelectChild*
        name: SelectChild
        nameWithType: MouseScroll.SelectChild
        qualifiedName: TowerDefense.UI.MouseScroll.SelectChild
      VB:
      - id: TowerDefense.UI.MouseScroll.SelectChild*
        name: SelectChild
        nameWithType: MouseScroll.SelectChild
        qualifiedName: TowerDefense.UI.MouseScroll.SelectChild
    isDefinition: true
    commentId: Overload:TowerDefense.UI.MouseScroll.SelectChild
  TowerDefense.UI.MovingCanvas.canvasEnabled*:
    name:
      CSharp:
      - id: TowerDefense.UI.MovingCanvas.canvasEnabled*
        name: canvasEnabled
        nameWithType: MovingCanvas.canvasEnabled
        qualifiedName: TowerDefense.UI.MovingCanvas.canvasEnabled
      VB:
      - id: TowerDefense.UI.MovingCanvas.canvasEnabled*
        name: canvasEnabled
        nameWithType: MovingCanvas.canvasEnabled
        qualifiedName: TowerDefense.UI.MovingCanvas.canvasEnabled
    isDefinition: true
    commentId: Overload:TowerDefense.UI.MovingCanvas.canvasEnabled
  TowerDefense.UI.MovingCanvas.content:
    commentId: F:TowerDefense.UI.MovingCanvas.content
  TowerDefense.UI.MovingCanvas.TryMove*:
    name:
      CSharp:
      - id: TowerDefense.UI.MovingCanvas.TryMove*
        name: TryMove
        nameWithType: MovingCanvas.TryMove
        qualifiedName: TowerDefense.UI.MovingCanvas.TryMove
      VB:
      - id: TowerDefense.UI.MovingCanvas.TryMove*
        name: TryMove
        nameWithType: MovingCanvas.TryMove
        qualifiedName: TowerDefense.UI.MovingCanvas.TryMove
    isDefinition: true
    commentId: Overload:TowerDefense.UI.MovingCanvas.TryMove
  TowerDefense.UI.MovingCanvas.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.MovingCanvas.Awake*
        name: Awake
        nameWithType: MovingCanvas.Awake
        qualifiedName: TowerDefense.UI.MovingCanvas.Awake
      VB:
      - id: TowerDefense.UI.MovingCanvas.Awake*
        name: Awake
        nameWithType: MovingCanvas.Awake
        qualifiedName: TowerDefense.UI.MovingCanvas.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.MovingCanvas.Awake
  TowerDefense.UI.MovingCanvas:
    name:
      CSharp:
      - id: TowerDefense.UI.MovingCanvas
        name: MovingCanvas
        nameWithType: MovingCanvas
        qualifiedName: TowerDefense.UI.MovingCanvas
      VB:
      - id: TowerDefense.UI.MovingCanvas
        name: MovingCanvas
        nameWithType: MovingCanvas
        qualifiedName: TowerDefense.UI.MovingCanvas
    isDefinition: true
    commentId: T:TowerDefense.UI.MovingCanvas
  Slider:
    name:
      CSharp:
      - id: Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
      VB:
      - id: Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: Slider
        isExternal: true
    isDefinition: true
  TowerDefense.UI.OptionsMenu.UpdateVolumes*:
    name:
      CSharp:
      - id: TowerDefense.UI.OptionsMenu.UpdateVolumes*
        name: UpdateVolumes
        nameWithType: OptionsMenu.UpdateVolumes
        qualifiedName: TowerDefense.UI.OptionsMenu.UpdateVolumes
      VB:
      - id: TowerDefense.UI.OptionsMenu.UpdateVolumes*
        name: UpdateVolumes
        nameWithType: OptionsMenu.UpdateVolumes
        qualifiedName: TowerDefense.UI.OptionsMenu.UpdateVolumes
    isDefinition: true
    commentId: Overload:TowerDefense.UI.OptionsMenu.UpdateVolumes
  TowerDefense.UI.OptionsMenu.Show*:
    name:
      CSharp:
      - id: TowerDefense.UI.OptionsMenu.Show*
        name: Show
        nameWithType: OptionsMenu.Show
        qualifiedName: TowerDefense.UI.OptionsMenu.Show
      VB:
      - id: TowerDefense.UI.OptionsMenu.Show*
        name: Show
        nameWithType: OptionsMenu.Show
        qualifiedName: TowerDefense.UI.OptionsMenu.Show
    isDefinition: true
    commentId: Overload:TowerDefense.UI.OptionsMenu.Show
  TowerDefense.UI.OptionsMenu.Hide*:
    name:
      CSharp:
      - id: TowerDefense.UI.OptionsMenu.Hide*
        name: Hide
        nameWithType: OptionsMenu.Hide
        qualifiedName: TowerDefense.UI.OptionsMenu.Hide
      VB:
      - id: TowerDefense.UI.OptionsMenu.Hide*
        name: Hide
        nameWithType: OptionsMenu.Hide
        qualifiedName: TowerDefense.UI.OptionsMenu.Hide
    isDefinition: true
    commentId: Overload:TowerDefense.UI.OptionsMenu.Hide
  TowerDefense.UI.OptionsMenu:
    name:
      CSharp:
      - id: TowerDefense.UI.OptionsMenu
        name: OptionsMenu
        nameWithType: OptionsMenu
        qualifiedName: TowerDefense.UI.OptionsMenu
      VB:
      - id: TowerDefense.UI.OptionsMenu
        name: OptionsMenu
        nameWithType: OptionsMenu
        qualifiedName: TowerDefense.UI.OptionsMenu
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.OptionsMenu
  TowerDefense.UI.PauseMenu.State:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.State
        name: PauseMenu.State
        nameWithType: PauseMenu.State
        qualifiedName: TowerDefense.UI.PauseMenu.State
      VB:
      - id: TowerDefense.UI.PauseMenu.State
        name: PauseMenu.State
        nameWithType: PauseMenu.State
        qualifiedName: TowerDefense.UI.PauseMenu.State
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.PauseMenu.State
  TowerDefense.UI.PauseMenu.OpenPauseMenu*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.OpenPauseMenu*
        name: OpenPauseMenu
        nameWithType: PauseMenu.OpenPauseMenu
        qualifiedName: TowerDefense.UI.PauseMenu.OpenPauseMenu
      VB:
      - id: TowerDefense.UI.PauseMenu.OpenPauseMenu*
        name: OpenPauseMenu
        nameWithType: PauseMenu.OpenPauseMenu
        qualifiedName: TowerDefense.UI.PauseMenu.OpenPauseMenu
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.OpenPauseMenu
  GameUIState:
    name:
      CSharp:
      - id: GameUIState
        name: GameUIState
        nameWithType: GameUIState
        qualifiedName: GameUIState
        isExternal: true
      VB:
      - id: GameUIState
        name: GameUIState
        nameWithType: GameUIState
        qualifiedName: GameUIState
        isExternal: true
    isDefinition: true
  TowerDefense.UI.PauseMenu.OnGameUIStateChanged*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.OnGameUIStateChanged*
        name: OnGameUIStateChanged
        nameWithType: PauseMenu.OnGameUIStateChanged
        qualifiedName: TowerDefense.UI.PauseMenu.OnGameUIStateChanged
      VB:
      - id: TowerDefense.UI.PauseMenu.OnGameUIStateChanged*
        name: OnGameUIStateChanged
        nameWithType: PauseMenu.OnGameUIStateChanged
        qualifiedName: TowerDefense.UI.PauseMenu.OnGameUIStateChanged
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.OnGameUIStateChanged
  TowerDefense.UI.PauseMenu.LevelSelectPressed*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.LevelSelectPressed*
        name: LevelSelectPressed
        nameWithType: PauseMenu.LevelSelectPressed
        qualifiedName: TowerDefense.UI.PauseMenu.LevelSelectPressed
      VB:
      - id: TowerDefense.UI.PauseMenu.LevelSelectPressed*
        name: LevelSelectPressed
        nameWithType: PauseMenu.LevelSelectPressed
        qualifiedName: TowerDefense.UI.PauseMenu.LevelSelectPressed
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.LevelSelectPressed
  TowerDefense.UI.PauseMenu.RestartPressed*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.RestartPressed*
        name: RestartPressed
        nameWithType: PauseMenu.RestartPressed
        qualifiedName: TowerDefense.UI.PauseMenu.RestartPressed
      VB:
      - id: TowerDefense.UI.PauseMenu.RestartPressed*
        name: RestartPressed
        nameWithType: PauseMenu.RestartPressed
        qualifiedName: TowerDefense.UI.PauseMenu.RestartPressed
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.RestartPressed
  TowerDefense.UI.PauseMenu.ClosePauseMenu*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.ClosePauseMenu*
        name: ClosePauseMenu
        nameWithType: PauseMenu.ClosePauseMenu
        qualifiedName: TowerDefense.UI.PauseMenu.ClosePauseMenu
      VB:
      - id: TowerDefense.UI.PauseMenu.ClosePauseMenu*
        name: ClosePauseMenu
        nameWithType: PauseMenu.ClosePauseMenu
        qualifiedName: TowerDefense.UI.PauseMenu.ClosePauseMenu
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.ClosePauseMenu
  TowerDefense.UI.PauseMenu.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.Awake*
        name: Awake
        nameWithType: PauseMenu.Awake
        qualifiedName: TowerDefense.UI.PauseMenu.Awake
      VB:
      - id: TowerDefense.UI.PauseMenu.Awake*
        name: Awake
        nameWithType: PauseMenu.Awake
        qualifiedName: TowerDefense.UI.PauseMenu.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.Awake
  TowerDefense.UI.PauseMenu.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.Start*
        name: Start
        nameWithType: PauseMenu.Start
        qualifiedName: TowerDefense.UI.PauseMenu.Start
      VB:
      - id: TowerDefense.UI.PauseMenu.Start*
        name: Start
        nameWithType: PauseMenu.Start
        qualifiedName: TowerDefense.UI.PauseMenu.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.Start
  TowerDefense.UI.PauseMenu.Update*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.Update*
        name: Update
        nameWithType: PauseMenu.Update
        qualifiedName: TowerDefense.UI.PauseMenu.Update
      VB:
      - id: TowerDefense.UI.PauseMenu.Update*
        name: Update
        nameWithType: PauseMenu.Update
        qualifiedName: TowerDefense.UI.PauseMenu.Update
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.Update
  TowerDefense.UI.PauseMenu.SetPauseMenuCanvas*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas*
        name: SetPauseMenuCanvas
        nameWithType: PauseMenu.SetPauseMenuCanvas
        qualifiedName: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas
      VB:
      - id: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas*
        name: SetPauseMenuCanvas
        nameWithType: PauseMenu.SetPauseMenuCanvas
        qualifiedName: TowerDefense.UI.PauseMenu.SetPauseMenuCanvas
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.SetPauseMenuCanvas
  TowerDefense.UI.PauseMenu.Pause*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.Pause*
        name: Pause
        nameWithType: PauseMenu.Pause
        qualifiedName: TowerDefense.UI.PauseMenu.Pause
      VB:
      - id: TowerDefense.UI.PauseMenu.Pause*
        name: Pause
        nameWithType: PauseMenu.Pause
        qualifiedName: TowerDefense.UI.PauseMenu.Pause
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.Pause
  TowerDefense.UI.PauseMenu.Unpause*:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu.Unpause*
        name: Unpause
        nameWithType: PauseMenu.Unpause
        qualifiedName: TowerDefense.UI.PauseMenu.Unpause
      VB:
      - id: TowerDefense.UI.PauseMenu.Unpause*
        name: Unpause
        nameWithType: PauseMenu.Unpause
        qualifiedName: TowerDefense.UI.PauseMenu.Unpause
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PauseMenu.Unpause
  TowerDefense.UI.PauseMenu:
    name:
      CSharp:
      - id: TowerDefense.UI.PauseMenu
        name: PauseMenu
        nameWithType: PauseMenu
        qualifiedName: TowerDefense.UI.PauseMenu
      VB:
      - id: TowerDefense.UI.PauseMenu
        name: PauseMenu
        nameWithType: PauseMenu
        qualifiedName: TowerDefense.UI.PauseMenu
    isDefinition: true
    commentId: T:TowerDefense.UI.PauseMenu
  TowerDefense.UI.PlayAnimation.Play*:
    name:
      CSharp:
      - id: TowerDefense.UI.PlayAnimation.Play*
        name: Play
        nameWithType: PlayAnimation.Play
        qualifiedName: TowerDefense.UI.PlayAnimation.Play
      VB:
      - id: TowerDefense.UI.PlayAnimation.Play*
        name: Play
        nameWithType: PlayAnimation.Play
        qualifiedName: TowerDefense.UI.PlayAnimation.Play
    isDefinition: true
    commentId: Overload:TowerDefense.UI.PlayAnimation.Play
  TowerDefense.UI.PlayAnimation:
    name:
      CSharp:
      - id: TowerDefense.UI.PlayAnimation
        name: PlayAnimation
        nameWithType: PlayAnimation
        qualifiedName: TowerDefense.UI.PlayAnimation
      VB:
      - id: TowerDefense.UI.PlayAnimation
        name: PlayAnimation
        nameWithType: PlayAnimation
        qualifiedName: TowerDefense.UI.PlayAnimation
    isDefinition: true
    commentId: T:TowerDefense.UI.PlayAnimation
  TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers*:
    name:
      CSharp:
      - id: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers*
        name: SetupRadiusVisualizers
        nameWithType: RadiusVisualizerController.SetupRadiusVisualizers
        qualifiedName: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers
      VB:
      - id: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers*
        name: SetupRadiusVisualizers
        nameWithType: RadiusVisualizerController.SetupRadiusVisualizers
        qualifiedName: TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers
    isDefinition: true
    commentId: Overload:TowerDefense.UI.RadiusVisualizerController.SetupRadiusVisualizers
  TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers*:
    name:
      CSharp:
      - id: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers*
        name: HideRadiusVisualizers
        nameWithType: RadiusVisualizerController.HideRadiusVisualizers
        qualifiedName: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers
      VB:
      - id: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers*
        name: HideRadiusVisualizers
        nameWithType: RadiusVisualizerController.HideRadiusVisualizers
        qualifiedName: TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers
    isDefinition: true
    commentId: Overload:TowerDefense.UI.RadiusVisualizerController.HideRadiusVisualizers
  TowerDefense.UI.RadiusVisualizerController:
    name:
      CSharp:
      - id: TowerDefense.UI.RadiusVisualizerController
        name: RadiusVisualizerController
        nameWithType: RadiusVisualizerController
        qualifiedName: TowerDefense.UI.RadiusVisualizerController
      VB:
      - id: TowerDefense.UI.RadiusVisualizerController
        name: RadiusVisualizerController
        nameWithType: RadiusVisualizerController
        qualifiedName: TowerDefense.UI.RadiusVisualizerController
    isDefinition: true
    parent: TowerDefense.UI
    commentId: T:TowerDefense.UI.RadiusVisualizerController
  TowerDefense.UI.Rotator:
    name:
      CSharp:
      - id: TowerDefense.UI.Rotator
        name: Rotator
        nameWithType: Rotator
        qualifiedName: TowerDefense.UI.Rotator
      VB:
      - id: TowerDefense.UI.Rotator
        name: Rotator
        nameWithType: Rotator
        qualifiedName: TowerDefense.UI.Rotator
    isDefinition: true
    commentId: T:TowerDefense.UI.Rotator
  TowerDefense.UI.SceneLoader.sceneToLoadName:
    commentId: F:TowerDefense.UI.SceneLoader.sceneToLoadName
  TowerDefense.UI.SceneLoader.LoadScene*:
    name:
      CSharp:
      - id: TowerDefense.UI.SceneLoader.LoadScene*
        name: LoadScene
        nameWithType: SceneLoader.LoadScene
        qualifiedName: TowerDefense.UI.SceneLoader.LoadScene
      VB:
      - id: TowerDefense.UI.SceneLoader.LoadScene*
        name: LoadScene
        nameWithType: SceneLoader.LoadScene
        qualifiedName: TowerDefense.UI.SceneLoader.LoadScene
    isDefinition: true
    commentId: Overload:TowerDefense.UI.SceneLoader.LoadScene
  TowerDefense.UI.SceneLoader.RestartCurrentScene*:
    name:
      CSharp:
      - id: TowerDefense.UI.SceneLoader.RestartCurrentScene*
        name: RestartCurrentScene
        nameWithType: SceneLoader.RestartCurrentScene
        qualifiedName: TowerDefense.UI.SceneLoader.RestartCurrentScene
      VB:
      - id: TowerDefense.UI.SceneLoader.RestartCurrentScene*
        name: RestartCurrentScene
        nameWithType: SceneLoader.RestartCurrentScene
        qualifiedName: TowerDefense.UI.SceneLoader.RestartCurrentScene
    isDefinition: true
    commentId: Overload:TowerDefense.UI.SceneLoader.RestartCurrentScene
  TowerDefense.UI.SceneLoader:
    name:
      CSharp:
      - id: TowerDefense.UI.SceneLoader
        name: SceneLoader
        nameWithType: SceneLoader
        qualifiedName: TowerDefense.UI.SceneLoader
      VB:
      - id: TowerDefense.UI.SceneLoader
        name: SceneLoader
        nameWithType: SceneLoader
        qualifiedName: TowerDefense.UI.SceneLoader
    isDefinition: true
    commentId: T:TowerDefense.UI.SceneLoader
  TowerDefense.UI.ScorePanel.SetStars*:
    name:
      CSharp:
      - id: TowerDefense.UI.ScorePanel.SetStars*
        name: SetStars
        nameWithType: ScorePanel.SetStars
        qualifiedName: TowerDefense.UI.ScorePanel.SetStars
      VB:
      - id: TowerDefense.UI.ScorePanel.SetStars*
        name: SetStars
        nameWithType: ScorePanel.SetStars
        qualifiedName: TowerDefense.UI.ScorePanel.SetStars
    isDefinition: true
    commentId: Overload:TowerDefense.UI.ScorePanel.SetStars
  TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused*:
    name:
      CSharp:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused*
        name: isPaused
        nameWithType: TowerDefenseInputSchemeSwitcher.isPaused
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
      VB:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused*
        name: isPaused
        nameWithType: TowerDefenseInputSchemeSwitcher.isPaused
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
    isDefinition: true
    commentId: Overload:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.isPaused
  TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start*
        name: Start
        nameWithType: TowerDefenseInputSchemeSwitcher.Start
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start
      VB:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start*
        name: Start
        nameWithType: TowerDefenseInputSchemeSwitcher.Start
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Start
  TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update*:
    name:
      CSharp:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update*
        name: Update
        nameWithType: TowerDefenseInputSchemeSwitcher.Update
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update
      VB:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update*
        name: Update
        nameWithType: TowerDefenseInputSchemeSwitcher.Update
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update
    isDefinition: true
    commentId: Overload:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.Update
  TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy*
        name: OnDestroy
        nameWithType: TowerDefenseInputSchemeSwitcher.OnDestroy
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy
      VB:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy*
        name: OnDestroy
        nameWithType: TowerDefenseInputSchemeSwitcher.OnDestroy
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.TowerDefenseInputSchemeSwitcher.OnDestroy
  TowerDefense.UI.TowerDefenseInputSchemeSwitcher:
    name:
      CSharp:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
        name: TowerDefenseInputSchemeSwitcher
        nameWithType: TowerDefenseInputSchemeSwitcher
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
      VB:
      - id: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
        name: TowerDefenseInputSchemeSwitcher
        nameWithType: TowerDefenseInputSchemeSwitcher
        qualifiedName: TowerDefense.UI.TowerDefenseInputSchemeSwitcher
    isDefinition: true
    commentId: T:TowerDefense.UI.TowerDefenseInputSchemeSwitcher
  TowerDefense.UI.UrlOpen.OpenUrl*:
    name:
      CSharp:
      - id: TowerDefense.UI.UrlOpen.OpenUrl*
        name: OpenUrl
        nameWithType: UrlOpen.OpenUrl
        qualifiedName: TowerDefense.UI.UrlOpen.OpenUrl
      VB:
      - id: TowerDefense.UI.UrlOpen.OpenUrl*
        name: OpenUrl
        nameWithType: UrlOpen.OpenUrl
        qualifiedName: TowerDefense.UI.UrlOpen.OpenUrl
    isDefinition: true
    commentId: Overload:TowerDefense.UI.UrlOpen.OpenUrl
  TowerDefense.UI.UrlOpen:
    name:
      CSharp:
      - id: TowerDefense.UI.UrlOpen
        name: UrlOpen
        nameWithType: UrlOpen
        qualifiedName: TowerDefense.UI.UrlOpen
      VB:
      - id: TowerDefense.UI.UrlOpen
        name: UrlOpen
        nameWithType: UrlOpen
        qualifiedName: TowerDefense.UI.UrlOpen
    isDefinition: true
    commentId: T:TowerDefense.UI.UrlOpen
  TowerDefense.UI.HUD.TowerUI:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI
        name: TowerUI
        nameWithType: TowerUI
        qualifiedName: TowerDefense.UI.HUD.TowerUI
      VB:
      - id: TowerDefense.UI.HUD.TowerUI
        name: TowerUI
        nameWithType: TowerUI
        qualifiedName: TowerDefense.UI.HUD.TowerUI
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.TowerUI
  TowerDefense.UI.HUD:
    name:
      CSharp:
      - name: TowerDefense.UI.HUD
        nameWithType: TowerDefense.UI.HUD
        qualifiedName: TowerDefense.UI.HUD
      VB:
      - name: TowerDefense.UI.HUD
        nameWithType: TowerDefense.UI.HUD
        qualifiedName: TowerDefense.UI.HUD
    isDefinition: true
    commentId: N:TowerDefense.UI.HUD
  TowerDefense.UI.HUD.BuildInfoUI.m_State:
    commentId: F:TowerDefense.UI.HUD.BuildInfoUI.m_State
  TowerDefense.UI.HUD.BuildInfoUI.ShowEnd*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd*
        name: ShowEnd
        nameWithType: BuildInfoUI.ShowEnd
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd*
        name: ShowEnd
        nameWithType: BuildInfoUI.ShowEnd
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.ShowEnd
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildInfoUI.ShowEnd
  TowerDefense.UI.HUD.BuildInfoUI.HideEnd*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI.HideEnd*
        name: HideEnd
        nameWithType: BuildInfoUI.HideEnd
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.HideEnd
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI.HideEnd*
        name: HideEnd
        nameWithType: BuildInfoUI.HideEnd
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.HideEnd
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildInfoUI.HideEnd
  TowerDefense.UI.HUD.BuildInfoUI.Show*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI.Show*
        name: Show
        nameWithType: BuildInfoUI.Show
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.Show
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI.Show*
        name: Show
        nameWithType: BuildInfoUI.Show
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.Show
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildInfoUI.Show
  TowerDefense.UI.HUD.BuildInfoUI.Hide*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI.Hide*
        name: Hide
        nameWithType: BuildInfoUI.Hide
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.Hide
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI.Hide*
        name: Hide
        nameWithType: BuildInfoUI.Hide
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.Hide
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildInfoUI.Hide
  TowerDefense.UI.HUD.BuildInfoUI.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI.Awake*
        name: Awake
        nameWithType: BuildInfoUI.Awake
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.Awake
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI.Awake*
        name: Awake
        nameWithType: BuildInfoUI.Awake
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildInfoUI.Awake
  TowerDefense.UI.HUD.BuildInfoUI:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI
        name: BuildInfoUI
        nameWithType: BuildInfoUI
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI
        name: BuildInfoUI
        nameWithType: BuildInfoUI
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.BuildInfoUI
  TowerDefense.UI.HUD.BuildInfoUI.AnimationState:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
        name: BuildInfoUI.AnimationState
        nameWithType: BuildInfoUI.AnimationState
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
      VB:
      - id: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
        name: BuildInfoUI.AnimationState
        nameWithType: BuildInfoUI.AnimationState
        qualifiedName: TowerDefense.UI.HUD.BuildInfoUI.AnimationState
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.BuildInfoUI.AnimationState
  TowerDefense.UI.HUD.TowerSpawnButton:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerSpawnButton
        name: TowerSpawnButton
        nameWithType: TowerSpawnButton
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton
      VB:
      - id: TowerDefense.UI.HUD.TowerSpawnButton
        name: TowerSpawnButton
        nameWithType: TowerSpawnButton
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.TowerSpawnButton
  TowerDefense.UI.HUD.BuildSidebar.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildSidebar.Start*
        name: Start
        nameWithType: BuildSidebar.Start
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar.Start
      VB:
      - id: TowerDefense.UI.HUD.BuildSidebar.Start*
        name: Start
        nameWithType: BuildSidebar.Start
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildSidebar.Start
  TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed*
        name: StartWaveButtonPressed
        nameWithType: BuildSidebar.StartWaveButtonPressed
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed
      VB:
      - id: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed*
        name: StartWaveButtonPressed
        nameWithType: BuildSidebar.StartWaveButtonPressed
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildSidebar.StartWaveButtonPressed
  TowerDefense.UI.HUD.BuildSidebar.AddCurrency*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildSidebar.AddCurrency*
        name: AddCurrency
        nameWithType: BuildSidebar.AddCurrency
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar.AddCurrency
      VB:
      - id: TowerDefense.UI.HUD.BuildSidebar.AddCurrency*
        name: AddCurrency
        nameWithType: BuildSidebar.AddCurrency
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar.AddCurrency
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.BuildSidebar.AddCurrency
  TowerDefense.UI.HUD.BuildSidebar:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.BuildSidebar
        name: BuildSidebar
        nameWithType: BuildSidebar
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar
      VB:
      - id: TowerDefense.UI.HUD.BuildSidebar
        name: BuildSidebar
        nameWithType: BuildSidebar
        qualifiedName: TowerDefense.UI.HUD.BuildSidebar
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.BuildSidebar
  TowerDefense.UI.HUD.CurrencyUI.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.CurrencyUI.Start*
        name: Start
        nameWithType: CurrencyUI.Start
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI.Start
      VB:
      - id: TowerDefense.UI.HUD.CurrencyUI.Start*
        name: Start
        nameWithType: CurrencyUI.Start
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.CurrencyUI.Start
  TowerDefense.UI.HUD.CurrencyUI.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.CurrencyUI.OnDestroy*
        name: OnDestroy
        nameWithType: CurrencyUI.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI.OnDestroy
      VB:
      - id: TowerDefense.UI.HUD.CurrencyUI.OnDestroy*
        name: OnDestroy
        nameWithType: CurrencyUI.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.CurrencyUI.OnDestroy
  TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay*
        name: UpdateDisplay
        nameWithType: CurrencyUI.UpdateDisplay
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay
      VB:
      - id: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay*
        name: UpdateDisplay
        nameWithType: CurrencyUI.UpdateDisplay
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.CurrencyUI.UpdateDisplay
  TowerDefense.UI.HUD.CurrencyUI:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.CurrencyUI
        name: CurrencyUI
        nameWithType: CurrencyUI
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI
      VB:
      - id: TowerDefense.UI.HUD.CurrencyUI
        name: CurrencyUI
        nameWithType: CurrencyUI
        qualifiedName: TowerDefense.UI.HUD.CurrencyUI
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.CurrencyUI
  PointerInfo:
    name:
      CSharp:
      - id: PointerInfo
        name: PointerInfo
        nameWithType: PointerInfo
        qualifiedName: PointerInfo
        isExternal: true
      VB:
      - id: PointerInfo
        name: PointerInfo
        nameWithType: PointerInfo
        qualifiedName: PointerInfo
        isExternal: true
    isDefinition: true
  Ray:
    name:
      CSharp:
      - id: Ray
        name: Ray
        nameWithType: Ray
        qualifiedName: Ray
        isExternal: true
      VB:
      - id: Ray
        name: Ray
        nameWithType: Ray
        qualifiedName: Ray
        isExternal: true
    isDefinition: true
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{RaycastHit}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: RaycastHit
        name: RaycastHit
        nameWithType: RaycastHit
        qualifiedName: RaycastHit
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: RaycastHit
        name: RaycastHit
        nameWithType: RaycastHit
        qualifiedName: RaycastHit
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{RaycastHit}
  TowerDefense.UI.HUD.UIPointer:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.UIPointer
        name: UIPointer
        nameWithType: UIPointer
        qualifiedName: TowerDefense.UI.HUD.UIPointer
      VB:
      - id: TowerDefense.UI.HUD.UIPointer
        name: UIPointer
        nameWithType: UIPointer
        qualifiedName: TowerDefense.UI.HUD.UIPointer
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.UIPointer
  TowerDefense.UI.HUD.GameUI.State:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.State
        name: GameUI.State
        nameWithType: GameUI.State
        qualifiedName: TowerDefense.UI.HUD.GameUI.State
      VB:
      - id: TowerDefense.UI.HUD.GameUI.State
        name: GameUI.State
        nameWithType: GameUI.State
        qualifiedName: TowerDefense.UI.HUD.GameUI.State
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.GameUI.State
  TowerDefense.UI.HUD.GameUI.state*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.state*
        name: state
        nameWithType: GameUI.state
        qualifiedName: TowerDefense.UI.HUD.GameUI.state
      VB:
      - id: TowerDefense.UI.HUD.GameUI.state*
        name: state
        nameWithType: GameUI.state
        qualifiedName: TowerDefense.UI.HUD.GameUI.state
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.state
  Action{TowerDefense.UI.HUD.GameUI.State,TowerDefense.UI.HUD.GameUI.State}:
    name:
      CSharp:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: TowerDefense.UI.HUD.GameUI.State
        name: GameUI.State
        nameWithType: GameUI.State
        qualifiedName: TowerDefense.UI.HUD.GameUI.State
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.UI.HUD.GameUI.State
        name: GameUI.State
        nameWithType: GameUI.State
        qualifiedName: TowerDefense.UI.HUD.GameUI.State
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`2
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: TowerDefense.UI.HUD.GameUI.State
        name: GameUI.State
        nameWithType: GameUI.State
        qualifiedName: TowerDefense.UI.HUD.GameUI.State
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: TowerDefense.UI.HUD.GameUI.State
        name: GameUI.State
        nameWithType: GameUI.State
        qualifiedName: TowerDefense.UI.HUD.GameUI.State
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`2
    commentId: '!:Action{TowerDefense.UI.HUD.GameUI.State,TowerDefense.UI.HUD.GameUI.State}'
  Action{Tower}:
    name:
      CSharp:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: Tower
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Action`1
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Tower
        name: Tower
        nameWithType: Tower
        qualifiedName: Tower
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Action`1
    commentId: '!:Action{Tower}'
  TowerDefense.UI.HUD.GameUI.currentSelectedTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.currentSelectedTower*
        name: currentSelectedTower
        nameWithType: GameUI.currentSelectedTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.currentSelectedTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.currentSelectedTower*
        name: currentSelectedTower
        nameWithType: GameUI.currentSelectedTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.currentSelectedTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.currentSelectedTower
  TowerDefense.UI.HUD.GameUI.isTowerSelected*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.isTowerSelected*
        name: isTowerSelected
        nameWithType: GameUI.isTowerSelected
        qualifiedName: TowerDefense.UI.HUD.GameUI.isTowerSelected
      VB:
      - id: TowerDefense.UI.HUD.GameUI.isTowerSelected*
        name: isTowerSelected
        nameWithType: GameUI.isTowerSelected
        qualifiedName: TowerDefense.UI.HUD.GameUI.isTowerSelected
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.isTowerSelected
  TowerDefense.UI.HUD.GameUI.isBuilding*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.isBuilding*
        name: isBuilding
        nameWithType: GameUI.isBuilding
        qualifiedName: TowerDefense.UI.HUD.GameUI.isBuilding
      VB:
      - id: TowerDefense.UI.HUD.GameUI.isBuilding*
        name: isBuilding
        nameWithType: GameUI.isBuilding
        qualifiedName: TowerDefense.UI.HUD.GameUI.isBuilding
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.isBuilding
  TowerDefense.UI.HUD.GameUI.CancelGhostPlacement*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement*
        name: CancelGhostPlacement
        nameWithType: GameUI.CancelGhostPlacement
        qualifiedName: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement
      VB:
      - id: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement*
        name: CancelGhostPlacement
        nameWithType: GameUI.CancelGhostPlacement
        qualifiedName: TowerDefense.UI.HUD.GameUI.CancelGhostPlacement
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.CancelGhostPlacement
  TowerDefense.UI.HUD.GameUI.ChangeToDragMode*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.ChangeToDragMode*
        name: ChangeToDragMode
        nameWithType: GameUI.ChangeToDragMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.ChangeToDragMode
      VB:
      - id: TowerDefense.UI.HUD.GameUI.ChangeToDragMode*
        name: ChangeToDragMode
        nameWithType: GameUI.ChangeToDragMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.ChangeToDragMode
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.ChangeToDragMode
  TowerDefense.UI.HUD.GameUI.ReturnToBuildMode*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode*
        name: ReturnToBuildMode
        nameWithType: GameUI.ReturnToBuildMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode
      VB:
      - id: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode*
        name: ReturnToBuildMode
        nameWithType: GameUI.ReturnToBuildMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.ReturnToBuildMode
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.ReturnToBuildMode
  TowerDefense.UI.HUD.GameUI.GameOver*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.GameOver*
        name: GameOver
        nameWithType: GameUI.GameOver
        qualifiedName: TowerDefense.UI.HUD.GameUI.GameOver
      VB:
      - id: TowerDefense.UI.HUD.GameUI.GameOver*
        name: GameOver
        nameWithType: GameUI.GameOver
        qualifiedName: TowerDefense.UI.HUD.GameUI.GameOver
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.GameOver
  TowerDefense.UI.HUD.GameUI.Pause*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.Pause*
        name: Pause
        nameWithType: GameUI.Pause
        qualifiedName: TowerDefense.UI.HUD.GameUI.Pause
      VB:
      - id: TowerDefense.UI.HUD.GameUI.Pause*
        name: Pause
        nameWithType: GameUI.Pause
        qualifiedName: TowerDefense.UI.HUD.GameUI.Pause
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.Pause
  TowerDefense.UI.HUD.GameUI.Unpause*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.Unpause*
        name: Unpause
        nameWithType: GameUI.Unpause
        qualifiedName: TowerDefense.UI.HUD.GameUI.Unpause
      VB:
      - id: TowerDefense.UI.HUD.GameUI.Unpause*
        name: Unpause
        nameWithType: GameUI.Unpause
        qualifiedName: TowerDefense.UI.HUD.GameUI.Unpause
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.Unpause
  TowerDefense.UI.HUD.GameUI.SetToDragMode*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.SetToDragMode*
        name: SetToDragMode
        nameWithType: GameUI.SetToDragMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.SetToDragMode
      VB:
      - id: TowerDefense.UI.HUD.GameUI.SetToDragMode*
        name: SetToDragMode
        nameWithType: GameUI.SetToDragMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.SetToDragMode
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.SetToDragMode
  TowerDefense.UI.HUD.GameUI.SetToBuildMode*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.SetToBuildMode*
        name: SetToBuildMode
        nameWithType: GameUI.SetToBuildMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.SetToBuildMode
      VB:
      - id: TowerDefense.UI.HUD.GameUI.SetToBuildMode*
        name: SetToBuildMode
        nameWithType: GameUI.SetToBuildMode
        qualifiedName: TowerDefense.UI.HUD.GameUI.SetToBuildMode
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.SetToBuildMode
  TowerDefense.UI.HUD.GameUI.TryPlaceTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.TryPlaceTower*
        name: TryPlaceTower
        nameWithType: GameUI.TryPlaceTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.TryPlaceTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.TryPlaceTower*
        name: TryPlaceTower
        nameWithType: GameUI.TryPlaceTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.TryPlaceTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.TryPlaceTower
  TowerDefense.UI.HUD.GameUI.TryMoveGhost*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.TryMoveGhost*
        name: TryMoveGhost
        nameWithType: GameUI.TryMoveGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.TryMoveGhost
      VB:
      - id: TowerDefense.UI.HUD.GameUI.TryMoveGhost*
        name: TryMoveGhost
        nameWithType: GameUI.TryMoveGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.TryMoveGhost
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.TryMoveGhost
  TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer*
        name: SetupRadiusVisualizer
        nameWithType: GameUI.SetupRadiusVisualizer
        qualifiedName: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer
      VB:
      - id: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer*
        name: SetupRadiusVisualizer
        nameWithType: GameUI.SetupRadiusVisualizer
        qualifiedName: TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.SetupRadiusVisualizer
  TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer*
        name: HideRadiusVisualizer
        nameWithType: GameUI.HideRadiusVisualizer
        qualifiedName: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer
      VB:
      - id: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer*
        name: HideRadiusVisualizer
        nameWithType: GameUI.HideRadiusVisualizer
        qualifiedName: TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.HideRadiusVisualizer
  TowerDefense.UI.HUD.GameUI.State.Normal:
    commentId: F:TowerDefense.UI.HUD.GameUI.State.Normal
  TowerDefense.UI.HUD.GameUI.SelectTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.SelectTower*
        name: SelectTower
        nameWithType: GameUI.SelectTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.SelectTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.SelectTower*
        name: SelectTower
        nameWithType: GameUI.SelectTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.SelectTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.SelectTower
  TowerDefense.UI.HUD.GameUI.currentSelectedTower:
    commentId: P:TowerDefense.UI.HUD.GameUI.currentSelectedTower
  TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower*
        name: UpgradeSelectedTower
        nameWithType: GameUI.UpgradeSelectedTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower*
        name: UpgradeSelectedTower
        nameWithType: GameUI.UpgradeSelectedTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.UpgradeSelectedTower
  TowerDefense.UI.HUD.GameUI.SellSelectedTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.SellSelectedTower*
        name: SellSelectedTower
        nameWithType: GameUI.SellSelectedTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.SellSelectedTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.SellSelectedTower*
        name: SellSelectedTower
        nameWithType: GameUI.SellSelectedTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.SellSelectedTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.SellSelectedTower
  TowerDefense.UI.HUD.GameUI.BuyTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.BuyTower*
        name: BuyTower
        nameWithType: GameUI.BuyTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.BuyTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.BuyTower*
        name: BuyTower
        nameWithType: GameUI.BuyTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.BuyTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.BuyTower
  TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer):
    commentId: M:TowerDefense.UI.HUD.GameUI.PlaceGhost(TowerDefense.UI.HUD.UIPointer)
  TowerDefense.UI.HUD.GameUI.DeselectTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.DeselectTower*
        name: DeselectTower
        nameWithType: GameUI.DeselectTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.DeselectTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.DeselectTower*
        name: DeselectTower
        nameWithType: GameUI.DeselectTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.DeselectTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.DeselectTower
  TowerDefense.UI.HUD.GameUI.m_CurrentTower:
    commentId: F:TowerDefense.UI.HUD.GameUI.m_CurrentTower
  TowerDefense.UI.HUD.GameUI.m_CurrentArea:
    commentId: F:TowerDefense.UI.HUD.GameUI.m_CurrentArea
  TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition*
        name: IsGhostAtValidPosition
        nameWithType: GameUI.IsGhostAtValidPosition
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition
      VB:
      - id: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition*
        name: IsGhostAtValidPosition
        nameWithType: GameUI.IsGhostAtValidPosition
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.IsGhostAtValidPosition
  TowerDefense.UI.HUD.GameUI.IsValidPurchase*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.IsValidPurchase*
        name: IsValidPurchase
        nameWithType: GameUI.IsValidPurchase
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsValidPurchase
      VB:
      - id: TowerDefense.UI.HUD.GameUI.IsValidPurchase*
        name: IsValidPurchase
        nameWithType: GameUI.IsValidPurchase
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsValidPurchase
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.IsValidPurchase
  TowerDefense.UI.HUD.GameUI.PlaceTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.PlaceTower*
        name: PlaceTower
        nameWithType: GameUI.PlaceTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.PlaceTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.PlaceTower*
        name: PlaceTower
        nameWithType: GameUI.PlaceTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.PlaceTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.PlaceTower
  TowerDefense.UI.HUD.GameUI.IsPointerOverGhost*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost*
        name: IsPointerOverGhost
        nameWithType: GameUI.IsPointerOverGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost
      VB:
      - id: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost*
        name: IsPointerOverGhost
        nameWithType: GameUI.IsPointerOverGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsPointerOverGhost
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.IsPointerOverGhost
  TowerDefense.UI.HUD.GameUI.TrySelectTower*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.TrySelectTower*
        name: TrySelectTower
        nameWithType: GameUI.TrySelectTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.TrySelectTower
      VB:
      - id: TowerDefense.UI.HUD.GameUI.TrySelectTower*
        name: TrySelectTower
        nameWithType: GameUI.TrySelectTower
        qualifiedName: TowerDefense.UI.HUD.GameUI.TrySelectTower
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.TrySelectTower
  TowerDefense.UI.HUD.GameUI.GetGhostPosition*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.GetGhostPosition*
        name: GetGhostPosition
        nameWithType: GameUI.GetGhostPosition
        qualifiedName: TowerDefense.UI.HUD.GameUI.GetGhostPosition
      VB:
      - id: TowerDefense.UI.HUD.GameUI.GetGhostPosition*
        name: GetGhostPosition
        nameWithType: GameUI.GetGhostPosition
        qualifiedName: TowerDefense.UI.HUD.GameUI.GetGhostPosition
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.GetGhostPosition
  TowerDefense.UI.HUD.GameUI.MoveGhostToCenter*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter*
        name: MoveGhostToCenter
        nameWithType: GameUI.MoveGhostToCenter
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter
      VB:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter*
        name: MoveGhostToCenter
        nameWithType: GameUI.MoveGhostToCenter
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhostToCenter
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.MoveGhostToCenter
  TowerDefense.UI.HUD.GameUI.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.Awake*
        name: Awake
        nameWithType: GameUI.Awake
        qualifiedName: TowerDefense.UI.HUD.GameUI.Awake
      VB:
      - id: TowerDefense.UI.HUD.GameUI.Awake*
        name: Awake
        nameWithType: GameUI.Awake
        qualifiedName: TowerDefense.UI.HUD.GameUI.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.Awake
  TowerDefense.UI.HUD.GameUI.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.OnDestroy*
        name: OnDestroy
        nameWithType: GameUI.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnDestroy
      VB:
      - id: TowerDefense.UI.HUD.GameUI.OnDestroy*
        name: OnDestroy
        nameWithType: GameUI.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.OnDestroy
  TowerDefense.UI.HUD.GameUI.OnEnable*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.OnEnable*
        name: OnEnable
        nameWithType: GameUI.OnEnable
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnEnable
      VB:
      - id: TowerDefense.UI.HUD.GameUI.OnEnable*
        name: OnEnable
        nameWithType: GameUI.OnEnable
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnEnable
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.OnEnable
  TowerDefense.UI.HUD.GameUI.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.OnDisable*
        name: OnDisable
        nameWithType: GameUI.OnDisable
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnDisable
      VB:
      - id: TowerDefense.UI.HUD.GameUI.OnDisable*
        name: OnDisable
        nameWithType: GameUI.OnDisable
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.OnDisable
  TowerDefense.UI.HUD.GameUI.WrapPointer*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.WrapPointer*
        name: WrapPointer
        nameWithType: GameUI.WrapPointer
        qualifiedName: TowerDefense.UI.HUD.GameUI.WrapPointer
      VB:
      - id: TowerDefense.UI.HUD.GameUI.WrapPointer*
        name: WrapPointer
        nameWithType: GameUI.WrapPointer
        qualifiedName: TowerDefense.UI.HUD.GameUI.WrapPointer
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.WrapPointer
  TowerDefense.UI.HUD.GameUI.IsOverUI*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.IsOverUI*
        name: IsOverUI
        nameWithType: GameUI.IsOverUI
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsOverUI
      VB:
      - id: TowerDefense.UI.HUD.GameUI.IsOverUI*
        name: IsOverUI
        nameWithType: GameUI.IsOverUI
        qualifiedName: TowerDefense.UI.HUD.GameUI.IsOverUI
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.IsOverUI
  TowerDefense.UI.HUD.GameUI.MoveGhost*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhost*
        name: MoveGhost
        nameWithType: GameUI.MoveGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhost
      VB:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhost*
        name: MoveGhost
        nameWithType: GameUI.MoveGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhost
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.MoveGhost
  RaycastHit:
    name:
      CSharp:
      - id: RaycastHit
        name: RaycastHit
        nameWithType: RaycastHit
        qualifiedName: RaycastHit
        isExternal: true
      VB:
      - id: RaycastHit
        name: RaycastHit
        nameWithType: RaycastHit
        qualifiedName: RaycastHit
        isExternal: true
    isDefinition: true
    commentId: '!:RaycastHit'
  TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit*
        name: MoveGhostWithRaycastHit
        nameWithType: GameUI.MoveGhostWithRaycastHit
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit
      VB:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit*
        name: MoveGhostWithRaycastHit
        nameWithType: GameUI.MoveGhostWithRaycastHit
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.MoveGhostWithRaycastHit
  TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld*
        name: MoveGhostOntoWorld
        nameWithType: GameUI.MoveGhostOntoWorld
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld
      VB:
      - id: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld*
        name: MoveGhostOntoWorld
        nameWithType: GameUI.MoveGhostOntoWorld
        qualifiedName: TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.MoveGhostOntoWorld
  TowerDefense.UI.HUD.GameUI.PlaceGhost*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.PlaceGhost*
        name: PlaceGhost
        nameWithType: GameUI.PlaceGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.PlaceGhost
      VB:
      - id: TowerDefense.UI.HUD.GameUI.PlaceGhost*
        name: PlaceGhost
        nameWithType: GameUI.PlaceGhost
        qualifiedName: TowerDefense.UI.HUD.GameUI.PlaceGhost
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.PlaceGhost
  TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast*
        name: PlacementAreaRaycast
        nameWithType: GameUI.PlacementAreaRaycast
        qualifiedName: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast
      VB:
      - id: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast*
        name: PlacementAreaRaycast
        nameWithType: GameUI.PlacementAreaRaycast
        qualifiedName: TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.PlacementAreaRaycast
  TowerDefense.UI.HUD.GameUI.OnCurrencyChanged*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged*
        name: OnCurrencyChanged
        nameWithType: GameUI.OnCurrencyChanged
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged
      VB:
      - id: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged*
        name: OnCurrencyChanged
        nameWithType: GameUI.OnCurrencyChanged
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnCurrencyChanged
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.OnCurrencyChanged
  TowerDefense.UI.HUD.GameUI.OnTowerDied*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI.OnTowerDied*
        name: OnTowerDied
        nameWithType: GameUI.OnTowerDied
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnTowerDied
      VB:
      - id: TowerDefense.UI.HUD.GameUI.OnTowerDied*
        name: OnTowerDied
        nameWithType: GameUI.OnTowerDied
        qualifiedName: TowerDefense.UI.HUD.GameUI.OnTowerDied
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.GameUI.OnTowerDied
  TowerDefense.UI.HUD.GameUI:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.GameUI
        name: GameUI
        nameWithType: GameUI
        qualifiedName: TowerDefense.UI.HUD.GameUI
      VB:
      - id: TowerDefense.UI.HUD.GameUI
        name: GameUI
        nameWithType: GameUI
        qualifiedName: TowerDefense.UI.HUD.GameUI
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.GameUI
  TowerDefense.UI.HUD.PlacementTileState:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlacementTileState
        name: PlacementTileState
        nameWithType: PlacementTileState
        qualifiedName: TowerDefense.UI.HUD.PlacementTileState
      VB:
      - id: TowerDefense.UI.HUD.PlacementTileState
        name: PlacementTileState
        nameWithType: PlacementTileState
        qualifiedName: TowerDefense.UI.HUD.PlacementTileState
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.PlacementTileState
  Material:
    name:
      CSharp:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
  Renderer:
    name:
      CSharp:
      - id: Renderer
        name: Renderer
        nameWithType: Renderer
        qualifiedName: Renderer
        isExternal: true
      VB:
      - id: Renderer
        name: Renderer
        nameWithType: Renderer
        qualifiedName: Renderer
        isExternal: true
    isDefinition: true
    commentId: '!:Renderer'
  TowerDefense.UI.HUD.PlacementTile.SetState*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlacementTile.SetState*
        name: SetState
        nameWithType: PlacementTile.SetState
        qualifiedName: TowerDefense.UI.HUD.PlacementTile.SetState
      VB:
      - id: TowerDefense.UI.HUD.PlacementTile.SetState*
        name: SetState
        nameWithType: PlacementTile.SetState
        qualifiedName: TowerDefense.UI.HUD.PlacementTile.SetState
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.PlacementTile.SetState
  TowerDefense.UI.HUD.PlacementTile:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlacementTile
        name: PlacementTile
        nameWithType: PlacementTile
        qualifiedName: TowerDefense.UI.HUD.PlacementTile
      VB:
      - id: TowerDefense.UI.HUD.PlacementTile
        name: PlacementTile
        nameWithType: PlacementTile
        qualifiedName: TowerDefense.UI.HUD.PlacementTile
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.PlacementTile
  TowerDefense.UI.HUD.PlayerBaseHealth.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth.Start*
        name: Start
        nameWithType: PlayerBaseHealth.Start
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth.Start
      VB:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth.Start*
        name: Start
        nameWithType: PlayerBaseHealth.Start
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.PlayerBaseHealth.Start
  TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged*
        name: OnBaseDamaged
        nameWithType: PlayerBaseHealth.OnBaseDamaged
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged
      VB:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged*
        name: OnBaseDamaged
        nameWithType: PlayerBaseHealth.OnBaseDamaged
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.PlayerBaseHealth.OnBaseDamaged
  TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay*
        name: UpdateDisplay
        nameWithType: PlayerBaseHealth.UpdateDisplay
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay
      VB:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay*
        name: UpdateDisplay
        nameWithType: PlayerBaseHealth.UpdateDisplay
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.PlayerBaseHealth.UpdateDisplay
  TowerDefense.UI.HUD.PlayerBaseHealth:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth
        name: PlayerBaseHealth
        nameWithType: PlayerBaseHealth
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth
      VB:
      - id: TowerDefense.UI.HUD.PlayerBaseHealth
        name: PlayerBaseHealth
        nameWithType: PlayerBaseHealth
        qualifiedName: TowerDefense.UI.HUD.PlayerBaseHealth
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.PlayerBaseHealth
  SimpleMainMenuPage:
    name:
      CSharp:
      - id: SimpleMainMenuPage
        name: SimpleMainMenuPage
        nameWithType: SimpleMainMenuPage
        qualifiedName: SimpleMainMenuPage
        isExternal: true
      VB:
      - id: SimpleMainMenuPage
        name: SimpleMainMenuPage
        nameWithType: SimpleMainMenuPage
        qualifiedName: SimpleMainMenuPage
        isExternal: true
    isDefinition: true
    commentId: '!:SimpleMainMenuPage'
  TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu*
        name: ShowOptionsMenu
        nameWithType: TowerDefenseMainMenu.ShowOptionsMenu
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu
      VB:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu*
        name: ShowOptionsMenu
        nameWithType: TowerDefenseMainMenu.ShowOptionsMenu
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowOptionsMenu
  TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu*
        name: ShowLevelSelectMenu
        nameWithType: TowerDefenseMainMenu.ShowLevelSelectMenu
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu
      VB:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu*
        name: ShowLevelSelectMenu
        nameWithType: TowerDefenseMainMenu.ShowLevelSelectMenu
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowLevelSelectMenu
  TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen*
        name: ShowTitleScreen
        nameWithType: TowerDefenseMainMenu.ShowTitleScreen
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen
      VB:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen*
        name: ShowTitleScreen
        nameWithType: TowerDefenseMainMenu.ShowTitleScreen
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerDefenseMainMenu.ShowTitleScreen
  TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake*
        name: Awake
        nameWithType: TowerDefenseMainMenu.Awake
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake
      VB:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake*
        name: Awake
        nameWithType: TowerDefenseMainMenu.Awake
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerDefenseMainMenu.Awake
  TowerDefense.UI.HUD.TowerDefenseMainMenu.Update*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update*
        name: Update
        nameWithType: TowerDefenseMainMenu.Update
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update
      VB:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update*
        name: Update
        nameWithType: TowerDefenseMainMenu.Update
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu.Update
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerDefenseMainMenu.Update
  TowerDefense.UI.HUD.TowerDefenseMainMenu:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu
        name: TowerDefenseMainMenu
        nameWithType: TowerDefenseMainMenu
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu
      VB:
      - id: TowerDefense.UI.HUD.TowerDefenseMainMenu
        name: TowerDefenseMainMenu
        nameWithType: TowerDefenseMainMenu
        qualifiedName: TowerDefense.UI.HUD.TowerDefenseMainMenu
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.TowerDefenseMainMenu
  TowerDefense.UI.HUD.TowerInfoDisplay.Show*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerInfoDisplay.Show*
        name: Show
        nameWithType: TowerInfoDisplay.Show
        qualifiedName: TowerDefense.UI.HUD.TowerInfoDisplay.Show
      VB:
      - id: TowerDefense.UI.HUD.TowerInfoDisplay.Show*
        name: Show
        nameWithType: TowerInfoDisplay.Show
        qualifiedName: TowerDefense.UI.HUD.TowerInfoDisplay.Show
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerInfoDisplay.Show
  TowerDefense.UI.HUD.TowerInfoDisplay:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerInfoDisplay
        name: TowerInfoDisplay
        nameWithType: TowerInfoDisplay
        qualifiedName: TowerDefense.UI.HUD.TowerInfoDisplay
      VB:
      - id: TowerDefense.UI.HUD.TowerInfoDisplay
        name: TowerInfoDisplay
        nameWithType: TowerInfoDisplay
        qualifiedName: TowerDefense.UI.HUD.TowerInfoDisplay
    isDefinition: true
    parent: TowerDefense.UI.HUD
    commentId: T:TowerDefense.UI.HUD.TowerInfoDisplay
  TowerDefense.UI.HUD.TowerPlacementGhost.controller*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.controller*
        name: controller
        nameWithType: TowerPlacementGhost.controller
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.controller
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.controller*
        name: controller
        nameWithType: TowerPlacementGhost.controller
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.controller
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.controller
  MeshRenderer[]:
    name:
      CSharp:
      - id: MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: MeshRenderer
        name: MeshRenderer
        nameWithType: MeshRenderer
        qualifiedName: MeshRenderer
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider*
        name: ghostCollider
        nameWithType: TowerPlacementGhost.ghostCollider
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider*
        name: ghostCollider
        nameWithType: TowerPlacementGhost.ghostCollider
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.ghostCollider
  TowerDefense.UI.HUD.TowerPlacementGhost.Initialize*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize*
        name: Initialize
        nameWithType: TowerPlacementGhost.Initialize
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize*
        name: Initialize
        nameWithType: TowerPlacementGhost.Initialize
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Initialize
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.Initialize
  TowerDefense.UI.HUD.TowerPlacementGhost.Hide*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Hide*
        name: Hide
        nameWithType: TowerPlacementGhost.Hide
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Hide
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Hide*
        name: Hide
        nameWithType: TowerPlacementGhost.Hide
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Hide
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.Hide
  TowerDefense.UI.HUD.TowerPlacementGhost.Show*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Show*
        name: Show
        nameWithType: TowerPlacementGhost.Show
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Show
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Show*
        name: Show
        nameWithType: TowerPlacementGhost.Show
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Show
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.Show
  Quaternion:
    name:
      CSharp:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
      VB:
      - id: Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Quaternion
        isExternal: true
    isDefinition: true
    commentId: '!:Quaternion'
  TowerDefense.UI.HUD.TowerPlacementGhost.Move*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Move*
        name: Move
        nameWithType: TowerPlacementGhost.Move
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Move
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Move*
        name: Move
        nameWithType: TowerPlacementGhost.Move
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Move
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.Move
  TowerDefense.UI.HUD.TowerPlacementGhost.Update*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Update*
        name: Update
        nameWithType: TowerPlacementGhost.Update
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Update
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost.Update*
        name: Update
        nameWithType: TowerPlacementGhost.Update
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost.Update
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerPlacementGhost.Update
  TowerDefense.UI.HUD.TowerPlacementGhost:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost
        name: TowerPlacementGhost
        nameWithType: TowerPlacementGhost
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost
      VB:
      - id: TowerDefense.UI.HUD.TowerPlacementGhost
        name: TowerPlacementGhost
        nameWithType: TowerPlacementGhost
        qualifiedName: TowerDefense.UI.HUD.TowerPlacementGhost
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.TowerPlacementGhost
  IDragHandler:
    name:
      CSharp:
      - id: IDragHandler
        name: IDragHandler
        nameWithType: IDragHandler
        qualifiedName: IDragHandler
        isExternal: true
      VB:
      - id: IDragHandler
        name: IDragHandler
        nameWithType: IDragHandler
        qualifiedName: IDragHandler
        isExternal: true
    isDefinition: true
    commentId: '!:IDragHandler'
  TowerDefense.UI.HUD.TowerSpawnButton.OnDrag*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag*
        name: OnDrag
        nameWithType: TowerSpawnButton.OnDrag
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag
      VB:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag*
        name: OnDrag
        nameWithType: TowerSpawnButton.OnDrag
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.OnDrag
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerSpawnButton.OnDrag
  TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton*
        name: InitializeButton
        nameWithType: TowerSpawnButton.InitializeButton
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton
      VB:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton*
        name: InitializeButton
        nameWithType: TowerSpawnButton.InitializeButton
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerSpawnButton.InitializeButton
  TowerDefense.UI.HUD.TowerSpawnButton.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.Awake*
        name: Awake
        nameWithType: TowerSpawnButton.Awake
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.Awake
      VB:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.Awake*
        name: Awake
        nameWithType: TowerSpawnButton.Awake
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerSpawnButton.Awake
  TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy*
        name: OnDestroy
        nameWithType: TowerSpawnButton.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy
      VB:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy*
        name: OnDestroy
        nameWithType: TowerSpawnButton.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerSpawnButton.OnDestroy
  TowerDefense.UI.HUD.TowerSpawnButton.OnClick*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.OnClick*
        name: OnClick
        nameWithType: TowerSpawnButton.OnClick
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.OnClick
      VB:
      - id: TowerDefense.UI.HUD.TowerSpawnButton.OnClick*
        name: OnClick
        nameWithType: TowerSpawnButton.OnClick
        qualifiedName: TowerDefense.UI.HUD.TowerSpawnButton.OnClick
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerSpawnButton.OnClick
  GameObject[]:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Camera:
    name:
      CSharp:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
    commentId: '!:Camera'
  TowerDefense.UI.HUD.TowerUI.Show*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.Show*
        name: Show
        nameWithType: TowerUI.Show
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Show
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.Show*
        name: Show
        nameWithType: TowerUI.Show
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Show
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.Show
  TowerDefense.UI.HUD.TowerUI.Hide*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.Hide*
        name: Hide
        nameWithType: TowerUI.Hide
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Hide
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.Hide*
        name: Hide
        nameWithType: TowerUI.Hide
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Hide
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.Hide
  TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick*
        name: UpgradeButtonClick
        nameWithType: TowerUI.UpgradeButtonClick
        qualifiedName: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick*
        name: UpgradeButtonClick
        nameWithType: TowerUI.UpgradeButtonClick
        qualifiedName: TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.UpgradeButtonClick
  TowerDefense.UI.HUD.TowerUI.SellButtonClick*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.SellButtonClick*
        name: SellButtonClick
        nameWithType: TowerUI.SellButtonClick
        qualifiedName: TowerDefense.UI.HUD.TowerUI.SellButtonClick
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.SellButtonClick*
        name: SellButtonClick
        nameWithType: TowerUI.SellButtonClick
        qualifiedName: TowerDefense.UI.HUD.TowerUI.SellButtonClick
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.SellButtonClick
  TowerDefense.UI.HUD.TowerUI.Awake*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.Awake*
        name: Awake
        nameWithType: TowerUI.Awake
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Awake
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.Awake*
        name: Awake
        nameWithType: TowerUI.Awake
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Awake
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.Awake
  TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged*
        name: OnUISelectionChanged
        nameWithType: TowerUI.OnUISelectionChanged
        qualifiedName: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged*
        name: OnUISelectionChanged
        nameWithType: TowerUI.OnUISelectionChanged
        qualifiedName: TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.OnUISelectionChanged
  TowerDefense.UI.HUD.TowerUI.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.Start*
        name: Start
        nameWithType: TowerUI.Start
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Start
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.Start*
        name: Start
        nameWithType: TowerUI.Start
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.Start
  TowerDefense.UI.HUD.TowerUI.Update*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.Update*
        name: Update
        nameWithType: TowerUI.Update
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Update
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.Update*
        name: Update
        nameWithType: TowerUI.Update
        qualifiedName: TowerDefense.UI.HUD.TowerUI.Update
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.Update
  TowerDefense.UI.HUD.TowerUI.OnDisable*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.OnDisable*
        name: OnDisable
        nameWithType: TowerUI.OnDisable
        qualifiedName: TowerDefense.UI.HUD.TowerUI.OnDisable
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.OnDisable*
        name: OnDisable
        nameWithType: TowerUI.OnDisable
        qualifiedName: TowerDefense.UI.HUD.TowerUI.OnDisable
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.OnDisable
  TowerDefense.UI.HUD.TowerUI.AdjustPosition*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.AdjustPosition*
        name: AdjustPosition
        nameWithType: TowerUI.AdjustPosition
        qualifiedName: TowerDefense.UI.HUD.TowerUI.AdjustPosition
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.AdjustPosition*
        name: AdjustPosition
        nameWithType: TowerUI.AdjustPosition
        qualifiedName: TowerDefense.UI.HUD.TowerUI.AdjustPosition
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.AdjustPosition
  TowerDefense.UI.HUD.GameUI.State.GameOver:
    commentId: F:TowerDefense.UI.HUD.GameUI.State.GameOver
  TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged*
        name: OnGameUIStateChanged
        nameWithType: TowerUI.OnGameUIStateChanged
        qualifiedName: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged
      VB:
      - id: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged*
        name: OnGameUIStateChanged
        nameWithType: TowerUI.OnGameUIStateChanged
        qualifiedName: TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.TowerUI.OnGameUIStateChanged
  TowerDefense.UI.HUD.WaveUI.Start*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.WaveUI.Start*
        name: Start
        nameWithType: WaveUI.Start
        qualifiedName: TowerDefense.UI.HUD.WaveUI.Start
      VB:
      - id: TowerDefense.UI.HUD.WaveUI.Start*
        name: Start
        nameWithType: WaveUI.Start
        qualifiedName: TowerDefense.UI.HUD.WaveUI.Start
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.WaveUI.Start
  TowerDefense.UI.HUD.WaveUI.UpdateDisplay*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.WaveUI.UpdateDisplay*
        name: UpdateDisplay
        nameWithType: WaveUI.UpdateDisplay
        qualifiedName: TowerDefense.UI.HUD.WaveUI.UpdateDisplay
      VB:
      - id: TowerDefense.UI.HUD.WaveUI.UpdateDisplay*
        name: UpdateDisplay
        nameWithType: WaveUI.UpdateDisplay
        qualifiedName: TowerDefense.UI.HUD.WaveUI.UpdateDisplay
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.WaveUI.UpdateDisplay
  TowerDefense.UI.HUD.WaveUI.Update*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.WaveUI.Update*
        name: Update
        nameWithType: WaveUI.Update
        qualifiedName: TowerDefense.UI.HUD.WaveUI.Update
      VB:
      - id: TowerDefense.UI.HUD.WaveUI.Update*
        name: Update
        nameWithType: WaveUI.Update
        qualifiedName: TowerDefense.UI.HUD.WaveUI.Update
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.WaveUI.Update
  TowerDefense.UI.HUD.WaveUI.OnDestroy*:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.WaveUI.OnDestroy*
        name: OnDestroy
        nameWithType: WaveUI.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.WaveUI.OnDestroy
      VB:
      - id: TowerDefense.UI.HUD.WaveUI.OnDestroy*
        name: OnDestroy
        nameWithType: WaveUI.OnDestroy
        qualifiedName: TowerDefense.UI.HUD.WaveUI.OnDestroy
    isDefinition: true
    commentId: Overload:TowerDefense.UI.HUD.WaveUI.OnDestroy
  TowerDefense.UI.HUD.WaveUI:
    name:
      CSharp:
      - id: TowerDefense.UI.HUD.WaveUI
        name: WaveUI
        nameWithType: WaveUI
        qualifiedName: TowerDefense.UI.HUD.WaveUI
      VB:
      - id: TowerDefense.UI.HUD.WaveUI
        name: WaveUI
        nameWithType: WaveUI
        qualifiedName: TowerDefense.UI.HUD.WaveUI
    isDefinition: true
    commentId: T:TowerDefense.UI.HUD.WaveUI
